<?xml version="1.0" encoding="UTF-8" ?>
<project name="PostgreSQL" id="PostgreSQL-1b6e" database="PostgreSQL" >
	<schema name="public" >
		<comment><![CDATA[standard public schema]]></comment>
		<table name="account" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100000;description=single instance of account - person or user or system user]]></comment>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="account_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_type_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Person'::text]]></defo>
			</column>
			<column name="account_title_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['DEF'::text]]></defo>
			</column>
			<column name="account_division_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Default'::text]]></defo>
			</column>
			<column name="account_group_uid" type="text" jt="12" mandatory="y" />
			<column name="auth_identity_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Internal'::text]]></defo>
			</column>
			<column name="account_email" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=email connected to that account]]></comment>
			</column>
			<column name="display_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=]]></comment>
			</column>
			<column name="is_system" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('acco_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_pkey" unique="PRIMARY_KEY" >
				<column name="account_uid" />
			</index>
			<index name="idx_account_account_email" unique="NORMAL" spec="USING  btree" >
				<column name="account_email" />
			</index>
			<index name="idx_account_account_name" unique="NORMAL" spec="USING  btree" >
				<column name="account_name" />
			</index>
			<index name="idx_account_display_name" unique="NORMAL" spec="USING  btree" >
				<column name="display_name" />
			</index>
		</table>
		<table name="account_division" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000;description=division of the account]]></comment>
			<column name="account_division_uid" type="text" jt="12" mandatory="y" />
			<column name="account_division_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=account UID]]></comment>
			</column>
			<column name="account_division_template_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="division_description" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('adiv_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_division_pkey" unique="PRIMARY_KEY" >
				<column name="account_division_uid" />
			</index>
		</table>
		<table name="account_division_template" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100;description=]]></comment>
			<column name="account_division_template_uid" type="text" jt="12" mandatory="y" />
			<column name="account_division_template_name" type="text" jt="12" mandatory="y" />
			<column name="division_description" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('adiv_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_division_template_pkey" unique="PRIMARY_KEY" >
				<column name="account_division_template_uid" />
			</index>
		</table>
		<table name="account_group" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=10000;description=group of the accounts]]></comment>
			<column name="account_group_uid" type="text" jt="12" mandatory="y" />
			<column name="account_group_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_group_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('agrp_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_group_pkey" unique="PRIMARY_KEY" >
				<column name="account_group_uid" />
			</index>
			<index name="idx_account_group_account_group_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="account_group_name" />
			</index>
		</table>
		<table name="account_hierarchy" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100000;description=single instance of account - person or user or system user]]></comment>
			<column name="account_hierarchy_uid" type="text" jt="12" mandatory="y" />
			<column name="account_hierarchy_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="parent_account_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[type=fk;description=parent account]]></comment>
			</column>
			<column name="child_account_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[type=fk;description=child account]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ahie_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_hierarchy_pkey" unique="PRIMARY_KEY" >
				<column name="account_hierarchy_uid" />
			</index>
			<index name="idx_account_hierarchy_tenant_uid" unique="NORMAL" spec="USING  btree" >
				<column name="tenant_uid" />
			</index>
		</table>
		<table name="account_rate" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000000;description=single instance of account - person or user or system user]]></comment>
			<column name="account_rate_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('arat'::text)]]></defo>
			</column>
			<column name="account_rate_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=parent account]]></comment>
			</column>
			<column name="currency_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=currency used to calculate this rate]]></comment>
			</column>
			<column name="rate" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0.0]]></defo>
				<comment><![CDATA[type=fk;description=parent account]]></comment>
			</column>
			<column name="start_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date of rate]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" mandatory="y" >
				<comment><![CDATA[end date of rate]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('arat'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_rate_pkey" unique="PRIMARY_KEY" >
				<column name="account_rate_uid" />
			</index>
			<index name="idx_account_rate_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
		</table>
		<table name="account_skill" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=100;description=skill owned by an account]]></comment>
			<column name="account_skill_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=Unique ID of title]]></comment>
			</column>
			<column name="account_skill_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Name of title like Data Engineer, Data Analyst, ...]]></comment>
			</column>
			<column name="account_skill_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Title description]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('atit_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_skill_pkey" unique="PRIMARY_KEY" >
				<column name="account_skill_uid" />
			</index>
		</table>
		<table name="account_team" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000;description=team of accounts]]></comment>
			<column name="account_team_uid" type="text" jt="12" mandatory="y" />
			<column name="account_team_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="owner_account_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[type=fk;description=parent account]]></comment>
			</column>
			<column name="is_public" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_tenant" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_private" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('atea_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active, -1 - rows is on hold]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_team_pkey" unique="PRIMARY_KEY" >
				<column name="account_team_uid" />
			</index>
		</table>
		<table name="account_title" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=100;description=title of the account connected with person role: Data Engineer, Data Analyst, ...]]></comment>
			<column name="account_title_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=Unique ID of title]]></comment>
			</column>
			<column name="account_title_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Name of title like Data Engineer, Data Analyst, ...]]></comment>
			</column>
			<column name="title_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Title description]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('atit_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_title_pkey" unique="PRIMARY_KEY" >
				<column name="account_title_uid" />
			</index>
		</table>
		<table name="account_title_responsibility" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=1000;description=]]></comment>
			<column name="account_title_responsibility_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="account_title_responsibility_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_title_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Title description]]></comment>
			</column>
			<column name="responsibility_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Title description]]></comment>
			</column>
			<column name="responsibility_priority" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('atit_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_title_responsibility_pkey" unique="PRIMARY_KEY" >
				<column name="account_title_responsibility_uid" />
			</index>
		</table>
		<table name="account_type" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=10;description=type of the account: Person, Client, Contractor, Application]]></comment>
			<column name="account_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Unique ID of title]]></comment>
			</column>
			<column name="account_type_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Type of account: Person, Client, Contractor, Application]]></comment>
			</column>
			<column name="account_type_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Description of this type]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('atyp_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="account_type_pkey" unique="PRIMARY_KEY" >
				<column name="account_type_uid" />
			</index>
		</table>
		<table name="audit_change" row_count="0" spec="" >
			<comment><![CDATA[type=append;cardinality=10000000;description=changes to tables - updates, inserts, deletes]]></comment>
			<column name="system_change_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="system_change_name" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=FK to account that caused this change]]></comment>
			</column>
			<column name="audit_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of audit]]></comment>
			</column>
			<column name="change_type" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['update'::text]]></defo>
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="change_json" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('scha_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="audit_change_pkey" unique="PRIMARY_KEY" >
				<column name="system_change_uid" />
			</index>
		</table>
		<table name="audit_type" row_count="0" spec="" >
			<comment><![CDATA[type=append;cardinality=10000000;description=]]></comment>
			<column name="audit_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=type of audit operations: Update, Delete, Insert]]></comment>
			</column>
			<column name="audit_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('scha_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="audit_type_pkey" unique="PRIMARY_KEY" >
				<column name="audit_type_uid" />
			</index>
		</table>
		<table name="auth_attempt" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000000;possible identity types with configuration]]></comment>
			<column name="auth_attempt_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('auat'::text)]]></defo>
			</column>
			<column name="auth_attempt_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of identifying method, class to authenticate user or client]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" />
			<column name="account_login" type="text" jt="12" mandatory="y" />
			<column name="identity_type" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of identity to be translated into class name]]></comment>
			</column>
			<column name="identity_parameters" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
				<comment><![CDATA[type=secret;description=JSON with identity parameters - map of parameters string to object]]></comment>
			</column>
			<column name="last_status_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Unknown'::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auat_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_attempt_pkey" unique="PRIMARY_KEY" >
				<column name="auth_attempt_uid" />
			</index>
		</table>
		<table name="auth_identity" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=possible identity types]]></comment>
			<column name="auth_identity_uid" type="text" jt="12" mandatory="y" />
			<column name="auth_identity_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of identifying method, class to authenticate user or client]]></comment>
			</column>
			<column name="class_name" type="text" jt="12" mandatory="y" />
			<column name="default_parameters_json" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auid_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_identity_pkey" unique="PRIMARY_KEY" >
				<column name="auth_identity_uid" />
				<column name="class_name" />
			</index>
			<index name="idx_auth_identity_auth_identity_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="auth_identity_name" />
			</index>
		</table>
		<table name="auth_identity_tenant" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=1000;description=possible identity types with configuration]]></comment>
			<column name="auth_identity_tenant_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('arat'::text)]]></defo>
			</column>
			<column name="auth_identity_tenant_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of identifying method, class to authenticate user or client]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="auth_identity_uid" type="text" jt="12" mandatory="y" />
			<column name="auth_sso_uid" type="text" jt="12" />
			<column name="identity_parameters_json" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
				<comment><![CDATA[type=secret;description=JSON with identity parameters - map of parameters string to object]]></comment>
			</column>
			<column name="last_status_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Unknown'::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auid_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_identity_tenant_pkey" unique="PRIMARY_KEY" >
				<column name="auth_identity_tenant_uid" />
			</index>
			<index name="idx_auth_identity_tenant_tenant_uid" unique="NORMAL" spec="USING  btree" >
				<column name="tenant_uid" />
			</index>
		</table>
		<table name="auth_key" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000;description=key for encoding]]></comment>
			<column name="auth_key_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aukey'::text)]]></defo>
			</column>
			<column name="auth_key_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of identifying method, class to authenticate user or client]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="owner_account_uid" type="text" jt="12" />
			<column name="auth_key_type_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['asymmetric'::text]]></defo>
			</column>
			<column name="key_private" type="text" jt="12" mandatory="y" />
			<column name="key_public" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="key_length" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1024]]></defo>
			</column>
			<column name="key_exponent" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="key_modulus" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="key_parameters_json" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('aukey_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_key_pkey" unique="PRIMARY_KEY" >
				<column name="auth_key_uid" />
			</index>
			<index name="idx_auth_key_tenant_uid" unique="NORMAL" spec="USING  btree" >
				<column name="tenant_uid" />
			</index>
		</table>
		<table name="auth_key_type" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000;description=type of key: symmetric, asymmetric, signature, ...]]></comment>
			<column name="auth_key_type_uid" type="text" jt="12" mandatory="y" />
			<column name="auth_key_type_name" type="text" jt="12" mandatory="y" />
			<column name="class_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auid_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_key_type_pkey" unique="PRIMARY_KEY" >
				<column name="auth_key_type_uid" />
				<column name="class_name" />
			</index>
		</table>
		<table name="auth_password" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100000;description=password set by user - this is full history of passwords]]></comment>
			<column name="auth_password_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aupa'::text)]]></defo>
			</column>
			<column name="auth_password_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aupa'::text)]]></defo>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[parent account of this password]]></comment>
			</column>
			<column name="password_hash" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=secret;description=hash of password including salt]]></comment>
			</column>
			<column name="password_salt" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=secret;description=salt to add to password before hashing]]></comment>
			</column>
			<column name="date_from" type="timestamp" jt="93" mandatory="y" >
				<comment><![CDATA[date and time od start password]]></comment>
			</column>
			<column name="date_to" type="timestamp" jt="93" mandatory="y" >
				<comment><![CDATA[date and time of validation date of this password]]></comment>
			</column>
			<column name="usage_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[numer of password usages]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('aupa_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_password_pkey" unique="PRIMARY_KEY" >
				<column name="auth_password_uid" />
			</index>
			<index name="idx_auth_password_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
		</table>
		<table name="auth_password_current" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=10000;description=password set by user - only current valid password]]></comment>
			<column name="auth_password_current_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aupc'::text)]]></defo>
				<comment><![CDATA[account UID]]></comment>
			</column>
			<column name="auth_password_current_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[parent account of this password]]></comment>
			</column>
			<column name="password_hash" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=secret;description=hash of password including salt]]></comment>
			</column>
			<column name="password_salt" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=secret;description=salt to add to password before hashing]]></comment>
			</column>
			<column name="date_from" type="timestamp" jt="93" mandatory="y" >
				<comment><![CDATA[date and time od start password]]></comment>
			</column>
			<column name="date_to" type="timestamp" jt="93" mandatory="y" >
				<comment><![CDATA[date and time of validation date of this password]]></comment>
			</column>
			<column name="usage_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[numer of password usages]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('aupc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_password_current_pkey" unique="PRIMARY_KEY" >
				<column name="auth_password_current_uid" />
			</index>
			<index name="idx_auth_password_current_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
		</table>
		<table name="auth_password_rule" row_count="0" spec="" >
			<comment><![CDATA[rule applied to new set passwords]]></comment>
			<column name="auth_password_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aupr'::text)]]></defo>
			</column>
			<column name="auth_password_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aupr'::text)]]></defo>
			</column>
			<column name="rule_type" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="rule_parameters" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="user_scope" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('aupr_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_password_rule_pkey" unique="PRIMARY_KEY" >
				<column name="auth_password_uid" />
			</index>
		</table>
		<table name="auth_permission" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100000;permission assigned to account and role with optional project or client]]></comment>
			<column name="auth_permission_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="auth_permission_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[UID of tenant]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[parent account of this token]]></comment>
			</column>
			<column name="auth_role_uid" type="text" jt="12" mandatory="y" />
			<column name="client_uid" type="text" jt="12" />
			<column name="project_instance_uid" type="text" jt="12" />
			<column name="valid_from_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[permission from date]]></comment>
			</column>
			<column name="valid_till_date" type="timestamp" jt="93" mandatory="y" >
				<comment><![CDATA[permission till date]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('aupe_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_permission_pkey" unique="PRIMARY_KEY" >
				<column name="auth_permission_uid" />
			</index>
			<index name="idx_auth_permission_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
			<index name="idx_auth_permission_auth_role_uid" unique="NORMAL" spec="USING  btree" >
				<column name="auth_role_uid" />
			</index>
		</table>
		<table name="auth_request" row_count="0" spec="" >
			<comment><![CDATA[type=append;cardinality=100000;description=Request of reset or set new password for user]]></comment>
			<column name="auth_request_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aure'::text)]]></defo>
			</column>
			<column name="auth_request_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('aure'::text)]]></defo>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="requestor_email" type="text" jt="12" mandatory="y" />
			<column name="reset_guid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=secret;description=global unique ID of this reset to be referred from the link]]></comment>
			</column>
			<column name="valid_till_date" type="timestamp" jt="93" mandatory="y" >
				<comment><![CDATA[final date of validation of this request]]></comment>
			</column>
			<column name="lock_guid" type="text" jt="12" >
				<comment><![CDATA[type=secret;description=lock global unique ID]]></comment>
			</column>
			<column name="lock_by" type="text" jt="12" >
				<comment><![CDATA[process that has been locked this request]]></comment>
			</column>
			<column name="lock_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of last lock]]></comment>
			</column>
			<column name="is_checked" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_used" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="check_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of check]]></comment>
			</column>
			<column name="use_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of use]]></comment>
			</column>
			<column name="event_notification_uid" type="text" jt="12" >
				<comment><![CDATA[notification connected to this request]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('aure_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_request_pkey" unique="PRIMARY_KEY" >
				<column name="auth_request_uid" />
			</index>
			<index name="idx_auth_request_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
		</table>
		<table name="auth_role" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100;description=list of roles used in permissions]]></comment>
			<column name="auth_role_uid" type="text" jt="12" mandatory="y" />
			<column name="auth_role_name" type="text" jt="12" mandatory="y" />
			<column name="parent_auth_role_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk,parent;description=]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk;description=optional tenant UID]]></comment>
			</column>
			<column name="role_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="access_uris" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="is_project" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_tenant" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_client" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_custom" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auro_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_role_pkey" unique="PRIMARY_KEY" >
				<column name="auth_role_uid" />
			</index>
			<index name="idx_auth_role_auth_role_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="auth_role_name" />
			</index>
		</table>
		<table name="auth_role_uri" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,update;cardinality=10000;description=mapping between role and URIs]]></comment>
			<column name="auth_role_uri_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="auth_role_uri_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="auth_role_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk,parent;description=]]></comment>
			</column>
			<column name="uri" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auro_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_role_uri_pkey" unique="PRIMARY_KEY" >
				<column name="auth_role_uri_uid" />
			</index>
		</table>
		<table name="auth_session" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000000;description=UI sessions in browsers from UI application regarding connected accounts]]></comment>
			<column name="auth_session_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[generate_uid('auses'::text)]]></defo>
			</column>
			<column name="auth_session_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of identifying method, class to authenticate user or client]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" />
			<column name="session_token" type="text" jt="12" mandatory="y" />
			<column name="browser_name" type="text" jt="12" mandatory="y" />
			<column name="browser_" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auses_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_session_pkey" unique="PRIMARY_KEY" >
				<column name="auth_session_uid" />
			</index>
			<index name="idx_auth_session_tenant_uid" unique="NORMAL" spec="USING  btree" >
				<column name="tenant_uid" />
			</index>
			<index name="idx_auth_session_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
		</table>
		<table name="auth_sso" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=100;description=single sign on configuration]]></comment>
			<column name="auth_sso_uid" type="text" jt="12" mandatory="y" />
			<column name="auth_sso_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[single sign on configuration]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="owner_account_uid" type="text" jt="12" />
			<column name="sso_name" type="text" jt="12" mandatory="y" />
			<column name="sso_url" type="text" jt="12" mandatory="y" />
			<column name="sso_key" type="text" jt="12" mandatory="y" />
			<column name="sso_secret" type="text" jt="12" mandatory="y" />
			<column name="sso_code" type="text" jt="12" />
			<column name="clientid" type="text" jt="12" />
			<column name="clientsecret" type="text" jt="12" />
			<column name="callback_url" type="text" jt="12" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auid_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_sso_pkey" unique="PRIMARY_KEY" >
				<column name="auth_sso_uid" />
			</index>
			<index name="idx_auth_sso_tenant_uid" unique="NORMAL" spec="USING  btree" >
				<column name="tenant_uid" />
			</index>
		</table>
		<table name="auth_token" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000000;description=single instance of token created for account]]></comment>
			<column name="auth_token_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="auth_token_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[parent account of this token]]></comment>
			</column>
			<column name="token_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="token_hash" type="text" jt="12" mandatory="y" />
			<column name="token_salt" type="text" jt="12" mandatory="y" />
			<column name="valid_till_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of validation]]></comment>
			</column>
			<column name="last_use_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="is_last" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('auto_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="auth_token_pkey" unique="PRIMARY_KEY" >
				<column name="auth_token_uid" />
			</index>
			<index name="idx_auth_token_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
			<index name="idx_auth_token_token_hash" unique="NORMAL" spec="USING  btree" >
				<column name="token_hash" />
			</index>
		</table>
		<table name="calendar_account" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=100000;description=calendar for account of given type]]></comment>
			<column name="calendar_account_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_account_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_type_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="calendar_account_pkey" unique="PRIMARY_KEY" >
				<column name="calendar_account_uid" />
			</index>
		</table>
		<table name="calendar_approval" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=100000;description=approval of calendar event]]></comment>
			<column name="calendar_approval_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_approval_name" type="text" jt="12" mandatory="y" />
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_approval_type_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_event_group_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_type_uid" type="text" jt="12" mandatory="y" />
			<column name="time_submit_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ceve_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="calendar_approval_pkey" unique="PRIMARY_KEY" >
				<column name="calendar_approval_uid" />
			</index>
		</table>
		<table name="calendar_approval_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=type of approvals for calendar event: approve, correction, disapprove, waiting]]></comment>
			<column name="calendar_approval_type_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_approval_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ceve_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="calendar_approval_type_pkey" unique="PRIMARY_KEY" >
				<column name="calendar_approval_type_uid" />
			</index>
		</table>
		<table name="calendar_event" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000;description=single day event in calendar within a group of events, single row would be single day within holiday]]></comment>
			<column name="calendar_event_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_event_name" type="text" jt="12" mandatory="y" />
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_event_group_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_type_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ceve_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="calendar_event_pkey" unique="PRIMARY_KEY" >
				<column name="calendar_event_uid" />
			</index>
		</table>
		<table name="calendar_event_group" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000;description=group of events in calendar with consistent period, one row could be holiday for 14 days for given person account]]></comment>
			<column name="calendar_event_group_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_event_group_name" type="text" jt="12" mandatory="y" />
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_account_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_event_type_uid" type="text" jt="12" mandatory="y" />
			<column name="group_comment" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[custom comment of event group]]></comment>
			</column>
			<column name="event_start_date" type="timestamp" jt="93" mandatory="y" />
			<column name="event_end_date" type="timestamp" jt="93" mandatory="y" />
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cevg_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="calendar_event_group_pkey" unique="PRIMARY_KEY" >
				<column name="calendar_event_group_uid" />
			</index>
		</table>
		<table name="calendar_event_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=type of event in calendar for given client]]></comment>
			<column name="calendar_event_type_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_event_type_name" type="text" jt="12" mandatory="y" />
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_type_uid" type="text" jt="12" mandatory="y" />
			<column name="auto_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cet_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="calendar_event_type_pkey" unique="PRIMARY_KEY" >
				<column name="calendar_event_type_uid" />
			</index>
		</table>
		<table name="calendar_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=types of calendar: holiday, conference, sickness]]></comment>
			<column name="calendar_type_uid" type="text" jt="12" mandatory="y" />
			<column name="calendar_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="calendar_type_pkey" unique="PRIMARY_KEY" >
				<column name="calendar_type_uid" />
			</index>
		</table>
		<table name="client" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=100;description=single client of tenant]]></comment>
			<column name="client_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=Unique ID of client - code or name of client]]></comment>
			</column>
			<column name="client_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=full friendly name of this client]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="country_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=ISO2 country code - FK to country]]></comment>
			</column>
			<column name="client_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="client_category_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk;description=main account representing client]]></comment>
			</column>
			<column name="client_code" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search,field;description=client code - 3, 4 or 4 letters uppercase]]></comment>
			</column>
			<column name="client_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[full description of that client]]></comment>
			</column>
			<column name="start_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date of engagement]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" />
			<column name="is_internal" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="is_system" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_test" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('clie_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="client_pkey" unique="PRIMARY_KEY" >
				<column name="client_uid" />
			</index>
			<index name="idx_client_client_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="client_name" />
			</index>
			<index name="idx_client_client_code" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="client_code" />
			</index>
		</table>
		<table name="client_account" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=100000;description=account assignment to client with given role]]></comment>
			<column name="client_account_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;cardinality=1000;description=]]></comment>
			</column>
			<column name="client_account_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=name;description=name of this license]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="client_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[FK to client]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[FK to account]]></comment>
			</column>
			<column name="client_role_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="client_account_pkey" unique="PRIMARY_KEY" >
				<column name="client_account_uid" />
			</index>
		</table>
		<table name="client_country" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=m2m between client and country to select countries that client operate]]></comment>
			<column name="client_country_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="client_country_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=name;description=]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="client_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[FK to client]]></comment>
			</column>
			<column name="country_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=ISO2 country code - FK to country]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="client_country_pkey" unique="PRIMARY_KEY" >
				<column name="client_country_uid" />
			</index>
		</table>
		<table name="client_payment" row_count="0" spec="" >
			<comment><![CDATA[type=fk;cardinality=10000;description=payment of client for licenses connected with modules]]></comment>
			<column name="client_payment_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;description=Unique ID of client - code or name of client]]></comment>
			</column>
			<column name="client_payment_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=name;description=name of this payment]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="client_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=UID of client]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[account that registered this payment]]></comment>
			</column>
			<column name="currency_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[account that registered this payment]]></comment>
			</column>
			<column name="start_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date of engagement]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" />
			<column name="payment_value" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="payment_type" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="source_number" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="source_reference" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cpay_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="client_payment_pkey" unique="PRIMARY_KEY" >
				<column name="client_payment_uid" />
			</index>
		</table>
		<table name="client_role" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=roles of accounts in client]]></comment>
			<column name="client_role_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="client_role_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=name of this license]]></comment>
			</column>
			<column name="role_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['0'::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('crol_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="client_role_pkey" unique="PRIMARY_KEY" >
				<column name="client_role_name" />
			</index>
		</table>
		<table name="client_status" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=10;description=status of client: New, Pending, Active, Closed]]></comment>
			<column name="client_status_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of client]]></comment>
			</column>
			<column name="client_status_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[category of client]]></comment>
			</column>
			<column name="client_status_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[description of status]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('csta_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="client_status_pkey" unique="PRIMARY_KEY" >
				<column name="client_status_uid" />
			</index>
		</table>
		<table name="client_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=type of client: System, Test, Corporate, Individual, ...]]></comment>
			<column name="client_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=type of client]]></comment>
			</column>
			<column name="client_type_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=full friendly name of this client type]]></comment>
			</column>
			<column name="client_type_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[type=field,search;description=description of client type]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ctyp_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row, increments with each update]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active, 2 - row is locked to change, -1 - row is]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="client_type_pkey" unique="PRIMARY_KEY" >
				<column name="client_type_uid" />
			</index>
		</table>
		<table name="connection_engine" row_count="0" spec="" >
			<comment><![CDATA[each connection engine is running on HTTP requests checking and acquiring statistics]]></comment>
			<column name="connection_engine_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[unique ID of engine]]></comment>
			</column>
			<column name="connection_engine_name" type="text" jt="12" mandatory="y" />
			<column name="start_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="calls_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="last_time" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="host_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="user_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="token_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('coun_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="connection_engine_pkey" unique="PRIMARY_KEY" >
				<column name="connection_engine_uid" />
			</index>
		</table>
		<table name="connection_host" row_count="0" spec="" >
			<comment><![CDATA[list of hosts]]></comment>
			<column name="connection_host_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[unique ID of country - ISO2 code]]></comment>
			</column>
			<column name="connection_host_name" type="text" jt="12" mandatory="y" />
			<column name="connection_engine_uid" type="text" jt="12" mandatory="y" />
			<column name="host_ip" type="text" jt="12" mandatory="y" />
			<column name="calls_count" type="bigint" length="64" jt="-5" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="start_time" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="last_call_time" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="user_count" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="token_count" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('coun_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="connection_host_pkey" unique="PRIMARY_KEY" >
				<column name="connection_host_uid" />
			</index>
		</table>
		<table name="connection_user" row_count="0" spec="" >
			<comment><![CDATA[user connected to HTTP API through web applications]]></comment>
			<column name="connection_user_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[unique user connected to app]]></comment>
			</column>
			<column name="connection_user_name" type="text" jt="12" mandatory="y" />
			<column name="connection_engine_uid" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="call_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="host_count" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="token_count" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('coun_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="connection_user_pkey" unique="PRIMARY_KEY" >
				<column name="connection_user_uid" />
			</index>
		</table>
		<table name="country" row_count="250" spec="" >
			<comment><![CDATA[type=dictionary;description=country of account or client]]></comment>
			<column name="country_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[unique ID of country - ISO2 code]]></comment>
			</column>
			<column name="country_name" type="text" jt="12" mandatory="y" />
			<column name="continent_name" type="text" jt="12" mandatory="y" />
			<column name="continent_code" type="text" jt="12" mandatory="y" />
			<column name="country_iso3" type="text" jt="12" mandatory="y" />
			<column name="country_code" type="text" jt="12" mandatory="y" />
			<column name="phone_code" type="text" jt="12" mandatory="y" />
			<column name="currency_code" type="text" jt="12" mandatory="y" />
			<column name="capital_name" type="text" jt="12" mandatory="y" />
			<column name="region_name" type="text" jt="12" mandatory="y" />
			<column name="subregion_name" type="text" jt="12" mandatory="y" />
			<column name="region_code" type="text" jt="12" mandatory="y" />
			<column name="latitude" type="text" jt="12" mandatory="y" />
			<column name="longitude" type="text" jt="12" mandatory="y" />
			<column name="currency_name" type="text" jt="12" mandatory="y" />
			<column name="population" type="text" jt="12" mandatory="y" />
			<column name="languages" type="text" jt="12" mandatory="y" />
			<column name="area" type="text" jt="12" mandatory="y" />
			<column name="bar_code" type="text" jt="12" mandatory="y" />
			<column name="top_level_domain" type="text" jt="12" mandatory="y" />
			<column name="is_focused" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('coun_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="country_pkey" unique="PRIMARY_KEY" >
				<column name="country_uid" />
			</index>
			<index name="idx_country_country_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="country_name" />
			</index>
			<index name="idx_country_country_iso3" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="country_iso3" />
			</index>
		</table>
		<table name="currency" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;description=currency: EUR, USD, GBP, PLN, ...]]></comment>
			<column name="currency_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=unique ID of currency]]></comment>
			</column>
			<column name="currency_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=name of currency - EUR, USD,]]></comment>
			</column>
			<column name="is_focused" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[type=field;description=is currency in focused state that should be displayed]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('curr_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="currency_pkey" unique="PRIMARY_KEY" >
				<column name="currency_uid" />
			</index>
			<index name="idx_currency_currency_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="currency_name" />
			</index>
		</table>
		<table name="databasechangelog" row_count="0" spec="" >
			<column name="id" type="varchar" length="255" jt="12" mandatory="y" />
			<column name="author" type="varchar" length="255" jt="12" mandatory="y" />
			<column name="filename" type="varchar" length="255" jt="12" mandatory="y" />
			<column name="dateexecuted" type="timestamp" jt="93" mandatory="y" />
			<column name="orderexecuted" type="integer" length="32" jt="4" mandatory="y" />
			<column name="exectype" type="varchar" length="10" jt="12" mandatory="y" />
			<column name="md5sum" type="varchar" length="35" jt="12" />
			<column name="description" type="varchar" length="255" jt="12" />
			<column name="comments" type="varchar" length="255" jt="12" />
			<column name="tag" type="varchar" length="255" jt="12" />
			<column name="liquibase" type="varchar" length="20" jt="12" />
			<column name="contexts" type="varchar" length="255" jt="12" />
			<column name="labels" type="varchar" length="255" jt="12" />
			<column name="deployment_id" type="varchar" length="10" jt="12" />
		</table>
		<table name="databasechangeloglock" row_count="1" spec="" >
			<column name="id" type="integer" length="32" jt="4" mandatory="y" />
			<column name="locked" type="boolean" jt="16" mandatory="y" />
			<column name="lockgranted" type="timestamp" jt="93" />
			<column name="lockedby" type="varchar" length="255" jt="12" />
			<index name="databasechangeloglock_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="event_acknowledge" row_count="0" spec="" >
			<comment><![CDATA[acknowledge of given notification by user]]></comment>
			<column name="event_acknowledge_uid" type="text" jt="12" mandatory="y" />
			<column name="event_acknowledge_name" type="text" jt="12" mandatory="y" />
			<column name="event_notification_uid" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[tenant]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[account to send this notification to]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evno_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_acknowledge_pkey" unique="PRIMARY_KEY" >
				<column name="event_acknowledge_uid" />
			</index>
			<index name="idx_event_acknowledge_event_notification_uid" unique="NORMAL" spec="USING  btree" >
				<column name="event_notification_uid" />
			</index>
		</table>
		<table name="event_channel" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=10;description=channel to deliver events]]></comment>
			<column name="event_channel_uid" type="text" jt="12" mandatory="y" />
			<column name="event_channel_name" type="text" jt="12" mandatory="y" />
			<column name="event_channel_type_uid" type="text" jt="12" mandatory="y" />
			<column name="channel_definition" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=secret;description=]]></comment>
			</column>
			<column name="last_status_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search,update;description=]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=account of this channel]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evch_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_channel_pkey" unique="PRIMARY_KEY" >
				<column name="event_channel_uid" />
			</index>
		</table>
		<table name="event_channel_type" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=10;description=type of channels]]></comment>
			<column name="event_channel_type_uid" type="text" jt="12" mandatory="y" />
			<column name="event_channel_type_name" type="text" jt="12" mandatory="y" />
			<column name="channel_type_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[description of this type]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evct_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_channel_type_pkey" unique="PRIMARY_KEY" >
				<column name="event_channel_type_uid" />
			</index>
		</table>
		<table name="event_instance" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000000;description=event in system that can be published to listeners]]></comment>
			<column name="event_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="event_instance_name" type="text" jt="12" mandatory="y" />
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="event_type" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=]]></comment>
			</column>
			<column name="event_object" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=]]></comment>
			</column>
			<column name="event_method" type="text" jt="12" mandatory="y" />
			<column name="event_parameters" type="text" jt="12" mandatory="y" />
			<column name="event_signature" type="text" jt="12" mandatory="y" />
			<column name="event_date" type="timestamp" jt="93" mandatory="y" />
			<column name="published_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evin_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_instance_pkey" unique="PRIMARY_KEY" >
				<column name="event_instance_uid" />
			</index>
		</table>
		<table name="event_notification" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100000;description=notification sent to password requests and info messages to accounts]]></comment>
			<column name="event_notification_uid" type="text" jt="12" mandatory="y" />
			<column name="event_notification_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[account to send this notification to]]></comment>
			</column>
			<column name="notification_type" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of notification: email, dashboard, sms]]></comment>
			</column>
			<column name="notification_topic" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[topic of notification like email topic]]></comment>
			</column>
			<column name="notification_format" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[format of notification: txt, html, json]]></comment>
			</column>
			<column name="notification_content" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[full content of this notification in HTML or]]></comment>
			</column>
			<column name="sending_status" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Created'::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evno_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_notification_pkey" unique="PRIMARY_KEY" >
				<column name="event_notification_uid" />
			</index>
			<index name="idx_event_notification_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
		</table>
		<table name="event_observer" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=100000;description=observer]]></comment>
			<column name="event_observer_uid" type="text" jt="12" mandatory="y" />
			<column name="event_observer_name" type="text" jt="12" mandatory="y" />
			<column name="event_observer_definition" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evno_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_observer_pkey" unique="PRIMARY_KEY" >
				<column name="event_observer_uid" />
			</index>
		</table>
		<table name="event_subscription" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000000;description=subscriptions for events]]></comment>
			<column name="event_subscription_uid" type="text" jt="12" mandatory="y" />
			<column name="event_subscription_name" type="text" jt="12" mandatory="y" />
			<column name="event_channel_uid" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[parent account of this token]]></comment>
			</column>
			<column name="subscription_filter" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=filter of subscription]]></comment>
			</column>
			<column name="subscription_topic" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=]]></comment>
			</column>
			<column name="subscription_template" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evsu_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_subscription_pkey" unique="PRIMARY_KEY" >
				<column name="event_subscription_uid" />
			</index>
		</table>
		<table name="event_template" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=1000;description=template of notification or event to be sent]]></comment>
			<column name="event_template_uid" type="text" jt="12" mandatory="y" />
			<column name="event_template_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" />
			<column name="notification_type" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of notification: email, dashboard, sms]]></comment>
			</column>
			<column name="notification_topic" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[topic of notification like email topic]]></comment>
			</column>
			<column name="notification_format" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[format of notification: txt, html, json]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evno_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_template_pkey" unique="PRIMARY_KEY" >
				<column name="event_template_uid" />
			</index>
		</table>
		<table name="event_type" row_count="0" spec="" >
			<comment><![CDATA[type=update;cardinality=10;description=type of events]]></comment>
			<column name="event_type_uid" type="text" jt="12" mandatory="y" />
			<column name="event_type_name" type="text" jt="12" mandatory="y" />
			<column name="event_type_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[description of this type]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('evty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="event_type_pkey" unique="PRIMARY_KEY" >
				<column name="event_type_uid" />
			</index>
		</table>
		<table name="invoice_action" row_count="0" spec="" >
			<comment><![CDATA[type=update;description=types of action for invoice like receive, confirm, approve, deny, correction, paying, paid, closed]]></comment>
			<column name="invoice_action_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_action_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_action_type_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('iat_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_action_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_action_uid" />
			</index>
		</table>
		<table name="invoice_action_type" row_count="0" spec="" >
			<comment><![CDATA[type=update;description=types of action for invoice]]></comment>
			<column name="invoice_action_type_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_action_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('iat_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_action_type_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_action_type_uid" />
			</index>
		</table>
		<table name="invoice_category" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=client category of invoice: Internal, Correction, ...]]></comment>
			<column name="invoice_category_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_category_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="invoice_category_description" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ist_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_category_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_category_uid" />
			</index>
		</table>
		<table name="invoice_entry" row_count="0" spec="" >
			<comment><![CDATA[type=update;description=entry assigned to invoice]]></comment>
			<column name="invoice_entry_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="invoice_entry_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_instance_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['EUR'::text]]></defo>
			</column>
			<column name="entry_details" type="text" jt="12" mandatory="y" />
			<column name="entry_amount_net" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="entry_amount_tax" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="entry_amount_gross" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ien_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_entry_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_entry_uid" />
			</index>
			<index name="idx_invoice_entry_tenant_uid" unique="NORMAL" spec="USING  btree" >
				<column name="tenant_uid" />
			</index>
			<index name="idx_invoice_entry_invoice_instance_uid" unique="NORMAL" spec="USING  btree" >
				<column name="invoice_instance_uid" />
			</index>
		</table>
		<table name="invoice_flow" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000;description=pre-defined flow of invoice]]></comment>
			<column name="invoice_flow_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="invoice_flow_name" type="text" jt="12" mandatory="y" />
			<column name="flow_description" type="text" jt="12" mandatory="y" />
			<column name="flow_definition_json" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ifl_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_flow_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_flow_uid" />
			</index>
		</table>
		<table name="invoice_flow_state" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=100000;description=states of invoice flow]]></comment>
			<column name="invoice_flow_state_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="invoice_flow_state_name" type="text" jt="12" mandatory="y" />
			<column name="invoice_flow_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ifl_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_flow_state_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_flow_state_uid" />
			</index>
		</table>
		<table name="invoice_instance" row_count="0" spec="" >
			<comment><![CDATA[type=update;description=invoices]]></comment>
			<column name="invoice_instance_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
			</column>
			<column name="invoice_instance_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_flow_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_status_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Created'::text]]></defo>
			</column>
			<column name="invoice_category_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Created'::text]]></defo>
			</column>
			<column name="invoice_type_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Created'::text]]></defo>
			</column>
			<column name="period_uid" type="text" jt="12" mandatory="y" />
			<column name="currency_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['EUR'::text]]></defo>
			</column>
			<column name="invoice_number" type="text" jt="12" mandatory="y" />
			<column name="invoice_details" type="text" jt="12" mandatory="y" />
			<column name="invoice_amount_net" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="invoice_amount_tax" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="invoice_amount_gross" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('iin_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_instance_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_instance_uid" />
			</index>
			<index name="idx_invoice_instance_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="account_uid" />
			</index>
		</table>
		<table name="invoice_status" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=status of invoice: Created, Pending, OnHold, Approved, Rejected, Paid, Closed]]></comment>
			<column name="invoice_status_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_status_name" type="text" jt="12" mandatory="y" />
			<column name="status_description" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ist_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_status_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_status_uid" />
			</index>
			<index name="idx_invoice_status_invoice_status_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="invoice_status_name" />
			</index>
		</table>
		<table name="invoice_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=type of invoice:]]></comment>
			<column name="invoice_type_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ist_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="invoice_type_pkey" unique="PRIMARY_KEY" >
				<column name="invoice_type_uid" />
			</index>
		</table>
		<table name="monitor" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000;description=monitor to check state of given items]]></comment>
			<column name="monitor_uid" type="text" jt="12" mandatory="y" />
			<column name="monitor_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="monitor_type_uid" type="text" jt="12" mandatory="y" />
			<column name="schedule_expression" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="monitor_protocol" type="text" jt="12" mandatory="y" />
			<column name="monitor_url" type="text" jt="12" mandatory="y" />
			<column name="monitor_user" type="text" jt="12" mandatory="y" />
			<column name="monitor_priority" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="is_on_hold" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="last_status_name" type="text" jt="12" mandatory="y" />
			<column name="last_run_time" type="double precision" jt="3" mandatory="y" />
			<column name="last_exception_message" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="monitor_pkey" unique="PRIMARY_KEY" >
				<column name="monitor_uid" />
			</index>
		</table>
		<table name="monitor_run" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=100000;description=single run of monitor]]></comment>
			<column name="monitor_run_uid" type="text" jt="12" mandatory="y" />
			<column name="monitor_run_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="monitor_uid" type="text" jt="12" mandatory="y" />
			<column name="status_name" type="text" jt="12" mandatory="y" />
			<column name="run_time" type="double precision" jt="3" mandatory="y" />
			<column name="exception_message" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="monitor_run_pkey" unique="PRIMARY_KEY" >
				<column name="monitor_run_uid" />
			</index>
		</table>
		<table name="monitor_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=monitors in application to check status of item]]></comment>
			<column name="monitor_type_uid" type="text" jt="12" mandatory="y" />
			<column name="monitor_type_name" type="text" jt="12" mandatory="y" />
			<column name="class_name" type="text" jt="12" mandatory="y" />
			<column name="parameters_json" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="monitor_type_pkey" unique="PRIMARY_KEY" >
				<column name="monitor_type_uid" />
			</index>
		</table>
		<table name="period" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;description=period of time - daily, weekly, monthly, ...]]></comment>
			<column name="period_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[UID of period: Y2025, Q20241, M202408, W2024021, D20240405]]></comment>
			</column>
			<column name="period_name" type="text" jt="12" mandatory="y" />
			<column name="period_number" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="period_type" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of period: D - day, W - week, M - month, Q - quarter, Y - year]]></comment>
			</column>
			<column name="period_start_time" type="timestamp" jt="93" mandatory="y" />
			<column name="period_end_time" type="timestamp" jt="93" mandatory="y" />
			<column name="period_year" type="bigint" length="64" jt="-5" />
			<column name="period_quarter" type="bigint" length="64" jt="-5" />
			<column name="period_month" type="bigint" length="64" jt="-5" />
			<column name="period_week" type="bigint" length="64" jt="-5" />
			<column name="period_day" type="bigint" length="64" jt="-5" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('peri_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="period_pkey" unique="PRIMARY_KEY" >
				<column name="period_uid" />
			</index>
		</table>
		<table name="process" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=100000;description=calendar for account of given type]]></comment>
			<column name="process_uid" type="text" jt="12" mandatory="y" />
			<column name="process_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="process_type_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="process_pkey" unique="PRIMARY_KEY" >
				<column name="process_uid" />
			</index>
		</table>
		<table name="process_run" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=100000;description=single run of scheduled process]]></comment>
			<column name="process_run_uid" type="text" jt="12" mandatory="y" />
			<column name="process_run_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="process_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="process_run_pkey" unique="PRIMARY_KEY" >
				<column name="process_run_uid" />
			</index>
		</table>
		<table name="process_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=types of processes]]></comment>
			<column name="process_type_uid" type="text" jt="12" mandatory="y" />
			<column name="process_type_name" type="text" jt="12" mandatory="y" />
			<column name="class_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="process_type_pkey" unique="PRIMARY_KEY" >
				<column name="process_type_uid" />
			</index>
		</table>
		<table name="project_account" row_count="0" spec="" >
			<comment><![CDATA[project to bill time against]]></comment>
			<column name="project_account_uid" type="text" jt="12" mandatory="y" />
			<column name="project_account_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="project_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="start_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('project_instance_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="project_account_pkey" unique="PRIMARY_KEY" >
				<column name="project_account_uid" />
			</index>
		</table>
		<table name="project_budget" row_count="0" spec="" >
			<comment><![CDATA[budget for projects]]></comment>
			<column name="project_budget_uid" type="text" jt="12" mandatory="y" />
			<column name="project_budget_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="project_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="currency_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[currency of budget]]></comment>
			</column>
			<column name="budget_value" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="is_current" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('project_budget_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="project_budget_pkey" unique="PRIMARY_KEY" >
				<column name="project_budget_uid" />
			</index>
			<index name="idx_project_budget_project_budget_name" unique="NORMAL" spec="USING  btree" >
				<column name="project_budget_name" />
			</index>
		</table>
		<table name="project_group" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=10000;description=group of projects]]></comment>
			<column name="project_group_uid" type="text" jt="12" mandatory="y" />
			<column name="project_group_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="project_group_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('project_group_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="project_group_pkey" unique="PRIMARY_KEY" >
				<column name="project_group_uid" />
			</index>
		</table>
		<table name="project_instance" row_count="0" spec="" >
			<comment><![CDATA[project to bill time against]]></comment>
			<column name="project_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="project_instance_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="project_type_uid" type="text" jt="12" mandatory="y" />
			<column name="manager_account_uid" type="text" jt="12" mandatory="y" />
			<column name="project_group_uid" type="text" jt="12" mandatory="y" />
			<column name="project_code" type="text" jt="12" mandatory="y" />
			<column name="project_description" type="text" jt="12" mandatory="y" />
			<column name="is_billable" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="start_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time]]></comment>
			</column>
			<column name="current_billed" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="budget" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('project_instance_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="project_instance_pkey" unique="PRIMARY_KEY" >
				<column name="project_instance_uid" />
			</index>
			<index name="idx_project_instance_client_uid" unique="NORMAL" spec="USING  btree" >
				<column name="client_uid" />
			</index>
			<index name="idx_project_instance_project_code" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="project_code" />
			</index>
			<index name="idx_project_instance_manager_account_uid" unique="NORMAL" spec="USING  btree" >
				<column name="manager_account_uid" />
			</index>
		</table>
		<table name="project_milestone" row_count="0" spec="" >
			<comment><![CDATA[milestone of project like: Concept, Development, Architecture, Analysis, Support]]></comment>
			<column name="project_milestone_uid" type="text" jt="12" mandatory="y" />
			<column name="project_milestone_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of milestone]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="client_uid" type="text" jt="12" mandatory="y" />
			<column name="project_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="project_budget_uid" type="text" jt="12" />
			<column name="start_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date and time of milestone]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[end date and time of milestone]]></comment>
			</column>
			<column name="status_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Created'::text]]></defo>
				<comment><![CDATA[status of that milestone]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('project_budget_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="project_milestone_pkey" unique="PRIMARY_KEY" >
				<column name="project_milestone_uid" />
			</index>
			<index name="idx_project_milestone_project_instance_uid" unique="NORMAL" spec="USING  btree" >
				<column name="project_instance_uid" />
			</index>
		</table>
		<table name="project_type" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=100;description=type of project]]></comment>
			<column name="project_type_uid" type="text" jt="12" mandatory="y" />
			<column name="project_type_name" type="text" jt="12" mandatory="y" />
			<column name="project_type_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('project_group_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="project_type_pkey" unique="PRIMARY_KEY" >
				<column name="project_type_uid" />
			</index>
		</table>
		<table name="report" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=100000;description=calendar for account of given type]]></comment>
			<column name="report_uid" type="text" jt="12" mandatory="y" />
			<column name="report_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="report_status_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Created'::text]]></defo>
			</column>
			<column name="report_query" type="text" jt="12" mandatory="y" />
			<column name="report_parameters" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="report_pkey" unique="PRIMARY_KEY" >
				<column name="report_uid" />
			</index>
		</table>
		<table name="report_content_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=type of content for report]]></comment>
			<column name="report_content_type_uid" type="text" jt="12" mandatory="y" />
			<column name="report_content_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="report_content_type_pkey" unique="PRIMARY_KEY" >
				<column name="report_content_type_uid" />
			</index>
		</table>
		<table name="report_format" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=formats supported by report rendering]]></comment>
			<column name="report_format_uid" type="text" jt="12" mandatory="y" />
			<column name="report_format_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="report_format_pkey" unique="PRIMARY_KEY" >
				<column name="report_format_uid" />
			</index>
		</table>
		<table name="report_run" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=100000;description=run of report by account]]></comment>
			<column name="report_run_uid" type="text" jt="12" mandatory="y" />
			<column name="report_run_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="report_uid" type="text" jt="12" mandatory="y" />
			<column name="report_format_uid" type="text" jt="12" mandatory="y" />
			<column name="report_status_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Created'::text]]></defo>
			</column>
			<column name="report_content_type_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['text/plain'::text]]></defo>
			</column>
			<column name="input_parameters_json" type="text" jt="12" mandatory="y" />
			<column name="run_time_ms" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="returned_rows" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="content_size" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="report_run_pkey" unique="PRIMARY_KEY" >
				<column name="report_run_uid" />
			</index>
		</table>
		<table name="report_status" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=name of status for report]]></comment>
			<column name="report_status_uid" type="text" jt="12" mandatory="y" />
			<column name="report_status_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="report_status_pkey" unique="PRIMARY_KEY" >
				<column name="report_status_uid" />
			</index>
		</table>
		<table name="report_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=types of report]]></comment>
			<column name="report_type_uid" type="text" jt="12" mandatory="y" />
			<column name="report_type_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="report_type_pkey" unique="PRIMARY_KEY" >
				<column name="report_type_uid" />
			</index>
		</table>
		<table name="storage" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=10000000;description=]]></comment>
			<column name="storage_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="storage_name" type="text" jt="12" mandatory="y" />
			<column name="storage_class" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['update'::text]]></defo>
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="storage_parameters_json" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('scha_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="storage_pkey" unique="PRIMARY_KEY" >
				<column name="storage_uid" />
			</index>
		</table>
		<table name="storage_connection" row_count="0" spec="" >
			<comment><![CDATA[type=append;cardinality=10000000;description=]]></comment>
			<column name="storage_connection_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="storage_connection_name" type="text" jt="12" mandatory="y" />
			<column name="storage_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="connection_type" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['update'::text]]></defo>
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="storage_parameters_json" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('scha_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="storage_connection_pkey" unique="PRIMARY_KEY" >
				<column name="storage_connection_uid" />
			</index>
		</table>
		<table name="storage_query" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=100000;description=]]></comment>
			<column name="storage_connection_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="storage_connection_name" type="text" jt="12" mandatory="y" />
			<column name="storage_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['update'::text]]></defo>
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="storage_parameters_json" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('scha_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="storage_query_pkey" unique="PRIMARY_KEY" >
				<column name="storage_connection_uid" />
			</index>
		</table>
		<table name="storage_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10000000;description=type of storages: JDBC, Elasticsearch, Mongodb, Cassandra, ...]]></comment>
			<column name="storage_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="storage_type_name" type="text" jt="12" mandatory="y" />
			<column name="storage_class" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['update'::text]]></defo>
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="storage_parameters_json" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('scha_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="storage_type_pkey" unique="PRIMARY_KEY" >
				<column name="storage_type_uid" />
			</index>
		</table>
		<table name="synchronization" row_count="0" spec="" >
			<comment><![CDATA[description=synchronization with external system]]></comment>
			<column name="synchronization_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[unique ID of engine]]></comment>
			</column>
			<column name="synchronization_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" />
			<column name="synchronization_type_uid" type="text" jt="12" mandatory="y" />
			<column name="storage_uid" type="text" jt="12" mandatory="y" />
			<column name="sync_expression" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['3600'::text]]></defo>
			</column>
			<column name="sync_query" type="text" jt="12" mandatory="y" />
			<column name="sync_definition" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="sync_priority" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[100]]></defo>
			</column>
			<column name="last_run_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of last run]]></comment>
			</column>
			<column name="last_run_seconds" type="double precision" jt="3" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('coun_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="synchronization_pkey" unique="PRIMARY_KEY" >
				<column name="synchronization_uid" />
			</index>
		</table>
		<table name="synchronization_run" row_count="0" spec="" >
			<comment><![CDATA[single run of synchronization]]></comment>
			<column name="synchronization_run_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[unique ID of engine]]></comment>
			</column>
			<column name="synchronization_run_name" type="text" jt="12" mandatory="y" />
			<column name="synchronization_uid" type="text" jt="12" mandatory="y" />
			<column name="run_status" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['New'::text]]></defo>
			</column>
			<column name="run_time_seconds" type="double precision" jt="3" mandatory="y" />
			<column name="copied_items" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('coun_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="synchronization_run_pkey" unique="PRIMARY_KEY" >
				<column name="synchronization_run_uid" />
			</index>
		</table>
		<table name="synchronization_type" row_count="0" spec="" >
			<comment><![CDATA[type of synchronization: read, write]]></comment>
			<column name="synchronization_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[unique ID of engine]]></comment>
			</column>
			<column name="synchronization_type_name" type="text" jt="12" mandatory="y" />
			<column name="sync_type" type="varchar" length="8000" jt="12" mandatory="y" />
			<column name="sync_class_came" type="varchar" length="8000" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('coun_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="synchronization_type_pkey" unique="PRIMARY_KEY" >
				<column name="synchronization_type_uid" />
			</index>
		</table>
		<table name="system_attribute" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000;description=attributes for objects in tables]]></comment>
			<column name="system_attribute_uid" type="text" jt="12" mandatory="y" />
			<column name="system_attribute_name" type="text" jt="12" mandatory="y" />
			<column name="system_object_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[full object name table.column or table.constraint]]></comment>
			</column>
			<column name="column_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search;description=]]></comment>
			</column>
			<column name="attribute_type" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of an attribute: text, number, system]]></comment>
			</column>
			<column name="attribute_label" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="attribute_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('satt_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_attribute_pkey" unique="PRIMARY_KEY" >
				<column name="system_attribute_uid" />
			</index>
			<index name="idx_system_attribute_system_object_uid" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="system_object_uid" />
			</index>
		</table>
		<table name="system_database" row_count="2" spec="" >
			<comment><![CDATA[type=system; description=database with data for main common areas or database for clients, each database is having full schema of application and is controlled by Liquibase, application is connected to main database with common objects but also can use client-specific database for client data]]></comment>
			<column name="system_database_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=client database UID]]></comment>
			</column>
			<column name="system_database_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[URL]]></comment>
			</column>
			<column name="db_url" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[URL]]></comment>
			</column>
			<column name="db_host" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[host of tenant database]]></comment>
			</column>
			<column name="db_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['timetracker'::text]]></defo>
				<comment><![CDATA[name of tenant database]]></comment>
			</column>
			<column name="db_user" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['postgres'::text]]></defo>
				<comment><![CDATA[user of tenant database]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance produced this state]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('sdba_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row: 0, 1, 2, 3; each update is increasing this number]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of removing this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
				<comment><![CDATA[JSON with custom attributes for this object]]></comment>
			</column>
			<index name="system_database_pkey" unique="PRIMARY_KEY" >
				<column name="system_database_uid" />
			</index>
		</table>
		<table name="system_exception" row_count="0" spec="" >
			<comment><![CDATA[type=system,append;cardinality=10000;description=exception or error thrown in backend or frontend application, it is for diagnostic, debugging and checking reasons]]></comment>
			<column name="system_exception_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=PK of exception thrown on system instance]]></comment>
			</column>
			<column name="system_exception_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of this exception]]></comment>
			</column>
			<column name="exception_class" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search,short;description=]]></comment>
			</column>
			<column name="exception_message" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=long;description=]]></comment>
			</column>
			<column name="exception_stacktrace" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=long;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['replace(concat(''sexe_v01_'', substring(cast(now() as text), 1, 10), ''_'', substring(cast(uuid_generate_v4() as text), 1, 13)), ''-'', ''_'')'::text]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_exception_pkey" unique="PRIMARY_KEY" >
				<column name="system_exception_uid" />
			</index>
		</table>
		<table name="system_instance" row_count="175" spec="" >
			<comment><![CDATA[type=system,update;description=instance of running application on server - each process would be having one row in table]]></comment>
			<column name="system_instance_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=main key of system instance - unique ID of process with host]]></comment>
			</column>
			<column name="system_instance_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of this system instance]]></comment>
			</column>
			<column name="system_version_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=version of application]]></comment>
			</column>
			<column name="host_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of host that application is running]]></comment>
			</column>
			<column name="host_ip" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[IP of host that application is running]]></comment>
			</column>
			<column name="local_path" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['/'::text]]></defo>
				<comment><![CDATA[local path of Python process]]></comment>
			</column>
			<column name="mode_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['DEV'::text]]></defo>
				<comment><![CDATA[name of mode: DEV, TEST, UAT, PROD]]></comment>
			</column>
			<column name="ticks_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('sins_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row: 0, 1, 2, 3; each update is increasing this number]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of removing this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
				<comment><![CDATA[JSON with custom attributes for this object]]></comment>
			</column>
			<index name="system_instance_pkey" unique="PRIMARY_KEY" >
				<column name="system_instance_uid" />
			</index>
		</table>
		<table name="system_license" row_count="0" spec="" >
			<comment><![CDATA[type=system;description=license of given module]]></comment>
			<column name="system_license_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Unique ID of license]]></comment>
			</column>
			<column name="system_license_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[full friendly name of this license]]></comment>
			</column>
			<column name="license_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[ISO2 country code - FK to country]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('slic_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_license_pkey" unique="PRIMARY_KEY" >
				<column name="system_license_uid" />
			</index>
		</table>
		<table name="system_lock" row_count="0" spec="" >
			<comment><![CDATA[type=system,dictionary;cardinality=100000;description=lock]]></comment>
			<column name="system_lock_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=UID of generated system state object]]></comment>
			</column>
			<column name="system_lock_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of this state]]></comment>
			</column>
			<column name="lock_account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[account that created this lock]]></comment>
			</column>
			<column name="lock_comment" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[comment on this lock]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance produced this state]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ssta_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_lock_pkey" unique="PRIMARY_KEY" >
				<column name="system_lock_uid" />
			</index>
		</table>
		<table name="system_module" row_count="0" spec="" >
			<comment><![CDATA[type=system;cardinality=100;description=module of system that could be within license]]></comment>
			<column name="system_module_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Unique ID of license]]></comment>
			</column>
			<column name="system_module_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[full friendly name of this license]]></comment>
			</column>
			<column name="system_module_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[ISO2 country code - FK to country]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('smod_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_module_pkey" unique="PRIMARY_KEY" >
				<column name="system_module_uid" />
			</index>
		</table>
		<table name="system_object" row_count="0" spec="" >
			<comment><![CDATA[type=system;cardinality=100;description=system objects related to tables, many objects might be in the same table but with different rows]]></comment>
			<column name="system_object_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[object UID]]></comment>
			</column>
			<column name="system_object_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[object UID]]></comment>
			</column>
			<column name="system_version_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="system_table_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[table name od this object]]></comment>
			</column>
			<column name="system_object_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of object]]></comment>
			</column>
			<column name="parent_system_object_uid" type="text" jt="12" >
				<comment><![CDATA[UID of parent object]]></comment>
			</column>
			<column name="object_type" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of object - system, dictionary, data]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('sobj_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_object_pkey" unique="PRIMARY_KEY" >
				<column name="system_object_uid" />
			</index>
		</table>
		<table name="system_object_type" row_count="0" spec="" >
			<comment><![CDATA[type=system,update;cardinality=10;description=types and subtypes of objects: table, dictionary, m2m, ...]]></comment>
			<column name="system_object_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[UID of system object type]]></comment>
			</column>
			<column name="system_object_type_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of this object type]]></comment>
			</column>
			<column name="object_type_description" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=long,search;description=]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('soty_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_object_type_pkey" unique="PRIMARY_KEY" >
				<column name="system_object_type_uid" />
			</index>
		</table>
		<table name="system_query" row_count="0" spec="" >
			<comment><![CDATA[SQL queries executed on database]]></comment>
			<column name="system_query_uid" type="text" jt="12" mandatory="y" />
			<column name="system_query_name" type="text" jt="12" mandatory="y" />
			<column name="time_start" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="total_query_time" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="query_seq" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="execution_counter" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="connection_counter" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="release_counter" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="current_active" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="current_idle" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="table_name" type="text" jt="12" mandatory="y" />
			<column name="rows_count" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="sql" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('satt_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_query_pkey" unique="PRIMARY_KEY" >
				<column name="system_query_uid" />
			</index>
		</table>
		<table name="system_request" row_count="0" spec="" >
			<comment><![CDATA[type=append;cardinality=1000000;description=HTTP request to application]]></comment>
			<column name="system_request_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[UID of request]]></comment>
			</column>
			<column name="system_request_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of request]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" >
				<comment><![CDATA[parent account of this token]]></comment>
			</column>
			<column name="request_method" type="text" jt="12" mandatory="y" />
			<column name="request_url" type="text" jt="12" mandatory="y" />
			<column name="request_body_size" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="request_host" type="text" jt="12" mandatory="y" />
			<column name="request_time" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="response_code" type="bigint" length="64" jt="-5" mandatory="y" >
				<comment><![CDATA[HTTP code of this request: 200, 201, 400, 403, 404, 501, ...]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('sreq_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_request_pkey" unique="PRIMARY_KEY" >
				<column name="system_request_uid" />
			</index>
		</table>
		<table name="system_setting" row_count="0" spec="" >
			<comment><![CDATA[type=system;cardinality=100;description=global settings for system]]></comment>
			<column name="system_setting_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="system_setting_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=]]></comment>
			</column>
			<column name="setting_value" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=;description=value of setting]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('sset_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_setting_pkey" unique="PRIMARY_KEY" >
				<column name="system_setting_uid" />
			</index>
		</table>
		<table name="system_setting_account" row_count="0" spec="" >
			<comment><![CDATA[type=system;cardinality=100000;description=user settings for system]]></comment>
			<column name="system_setting_account_uid" type="text" jt="12" mandatory="y" />
			<column name="system_setting_account_name" type="text" jt="12" mandatory="y" />
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[UID of account]]></comment>
			</column>
			<column name="setting_value" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[value of setting]]></comment>
			</column>
			<column name="is_public" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ssac_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_setting_account_pkey" unique="PRIMARY_KEY" >
				<column name="system_setting_account_uid" />
			</index>
		</table>
		<table name="system_state" row_count="603" spec="" >
			<comment><![CDATA[type=system,dictionary;cardinality=100000;description=state of current application/system instance, each state contains diagnostic information about running process in memory]]></comment>
			<column name="system_state_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=UID of generated system state object]]></comment>
			</column>
			<column name="system_state_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of this state]]></comment>
			</column>
			<column name="mem_free" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="mem_max" type="bigint" length="64" jt="-5" mandatory="y" />
			<column name="objects_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance produced this state]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ssta_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_state_pkey" unique="PRIMARY_KEY" >
				<column name="system_state_uid" />
			</index>
		</table>
		<table name="system_table" row_count="126" spec="" >
			<comment><![CDATA[type=system,dictionary;cardinality=100;description=tables managed by application]]></comment>
			<column name="system_table_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[table UID]]></comment>
			</column>
			<column name="system_table_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of table]]></comment>
			</column>
			<column name="parent_system_table_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk;description=UID of parent object]]></comment>
			</column>
			<column name="key_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=name of UID key of this table]]></comment>
			</column>
			<column name="table_code" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=comment of this table]]></comment>
			</column>
			<column name="table_comment" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=comment of this table]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" >
				<comment><![CDATA[FK to system_lock table - a logical lock on this row]]></comment>
			</column>
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group table - owner group for this table]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('stab_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_table_pkey" unique="PRIMARY_KEY" >
				<column name="system_table_uid" />
			</index>
		</table>
		<table name="system_thread" row_count="0" spec="" >
			<comment><![CDATA[type=system,dictionary;description=thread managed by instance of application]]></comment>
			<column name="system_thread_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=UID]]></comment>
			</column>
			<column name="system_thread_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[friendly name of this thread]]></comment>
			</column>
			<column name="thread_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of this thread]]></comment>
			</column>
			<column name="parent_object" type="text" jt="12" mandatory="y" />
			<column name="ticks_count" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="sleep_time" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[60]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance produced this row]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('sthr_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="system_thread_pkey" unique="PRIMARY_KEY" >
				<column name="system_thread_uid" />
			</index>
		</table>
		<table name="system_version" row_count="0" spec="" >
			<comment><![CDATA[type=system; description=semantic version of application like 1.2.3, each version is introducing new features to application]]></comment>
			<column name="system_version_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[main key of semantic version of application like 1.0.0 or 1.2.3]]></comment>
			</column>
			<column name="system_version_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[name of this version]]></comment>
			</column>
			<column name="version_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[description of this version of application]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance produced this state]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('sver_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row: 0, 1, 2, 3; each update is increasing this number]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active, -1 - rows is on hold, -2 - row is locked]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of removing this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
				<comment><![CDATA[JSON with custom attributes for this object]]></comment>
			</column>
			<index name="system_version_pkey" unique="PRIMARY_KEY" >
				<column name="system_version_uid" />
			</index>
		</table>
		<table name="tenant" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=100;description=single tenant - company that is using time tracker app, each tenant is independent and has separated accounts and clients]]></comment>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=Unique ID of tenant - code or name of tenant]]></comment>
			</column>
			<column name="tenant_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=full friendly name of this tenant]]></comment>
			</column>
			<column name="country_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=ISO2 country code - FK to country]]></comment>
			</column>
			<column name="tenant_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="tenant_category_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="tenant_code" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=search,field;description=tenant code - 3, 4 or 4 letters uppercase]]></comment>
			</column>
			<column name="tenant_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[full description of that tenant]]></comment>
			</column>
			<column name="start_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date of engagement of this tenant using application]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" />
			<column name="is_internal" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="is_system" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="is_test" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="account_uid" type="text" jt="12" >
				<comment><![CDATA[type=fk;description=main account representing tenant]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('clie_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_uid" />
			</index>
			<index name="idx_tenant_tenant_name" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="tenant_name" />
			</index>
			<index name="idx_tenant_tenant_code" unique="UNIQUE_INDEX" spec="USING  btree" >
				<column name="tenant_code" />
			</index>
		</table>
		<table name="tenant_account" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=100000;description=account assignment to tenant with given role]]></comment>
			<column name="tenant_account_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;cardinality=1000;description=]]></comment>
			</column>
			<column name="tenant_account_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=name;description=name of this license]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[FK to tenant]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[FK to account]]></comment>
			</column>
			<column name="tenant_role_uid" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_account_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_account_uid" />
			</index>
		</table>
		<table name="tenant_category" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=10;description=category of tenant: Internal, External, Hybrid]]></comment>
			<column name="tenant_category_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of tenant]]></comment>
			</column>
			<column name="tenant_category_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[category of tenant]]></comment>
			</column>
			<column name="tenant_category_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[description of category]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ccat_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_category_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_category_uid" />
			</index>
		</table>
		<table name="tenant_country" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=m2m between tenant and country to select countries that tenant operate]]></comment>
			<column name="tenant_country_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="tenant_country_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=name;description=]]></comment>
			</column>
			<column name="country_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=ISO2 country code - FK to country]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[FK to tenant]]></comment>
			</column>
			<column name="country_priority" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[priority of country - any number]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cacc_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_country_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_country_uid" />
			</index>
		</table>
		<table name="tenant_license" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=license bought/paid by tenant]]></comment>
			<column name="tenant_license_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="tenant_license_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=name;description=name of this license]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="system_license_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=]]></comment>
			</column>
			<column name="start_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date of license]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[end date of license]]></comment>
			</column>
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cls_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_license_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_license_name" />
			</index>
		</table>
		<table name="tenant_payment" row_count="0" spec="" >
			<comment><![CDATA[type=fk;cardinality=10000;description=payment of tenant for licenses connected with modules]]></comment>
			<column name="tenant_payment_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=pk;description=Unique ID of tenant - code or name of tenant]]></comment>
			</column>
			<column name="tenant_payment_name" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[(uuid_generate_v4())::text]]></defo>
				<comment><![CDATA[type=name;description=name of this payment]]></comment>
			</column>
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=UID of tenant]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[account that registered this payment]]></comment>
			</column>
			<column name="currency_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[account that registered this payment]]></comment>
			</column>
			<column name="tenant_payment_type_uid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['Normal'::text]]></defo>
			</column>
			<column name="start_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date of engagement]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" />
			<column name="payment_value" type="double precision" jt="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="source_number" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="source_reference" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('cpay_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_payment_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_payment_uid" />
			</index>
		</table>
		<table name="tenant_payment_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=10;description=type of payment]]></comment>
			<column name="tenant_payment_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of tenant]]></comment>
			</column>
			<column name="tenant_payment_type_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[category of tenant]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ccat_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_payment_type_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_payment_type_uid" />
			</index>
		</table>
		<table name="tenant_role" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=1000;description=key roles of accounts in tenant: Owner, Administrator, Manger, Finance, User]]></comment>
			<column name="tenant_role_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=]]></comment>
			</column>
			<column name="tenant_role_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=name of this license]]></comment>
			</column>
			<column name="role_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('crol_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_role_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_role_name" />
			</index>
		</table>
		<table name="tenant_status" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary,append;cardinality=10;description=status of tenant: New, Pending, Active, Closed]]></comment>
			<column name="tenant_status_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type of tenant]]></comment>
			</column>
			<column name="tenant_status_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[category of tenant]]></comment>
			</column>
			<column name="tenant_status_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[description of status]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('csta_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_status_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_status_uid" />
			</index>
		</table>
		<table name="tenant_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=type of tenant: System, Test, Corporate, Individual]]></comment>
			<column name="tenant_type_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=pk;description=type of tenant]]></comment>
			</column>
			<column name="tenant_type_name" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=name;description=full friendly name of this tenant type]]></comment>
			</column>
			<column name="tenant_type_description" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[''::text]]></defo>
				<comment><![CDATA[type=field,search;description=description of tenant type]]></comment>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
				<comment><![CDATA[type=fk;description=FK to system instance]]></comment>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('ttyp_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row, increments with each update]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active, 2 - row is locked to change, -1 - row is]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="tenant_type_pkey" unique="PRIMARY_KEY" >
				<column name="tenant_type_uid" />
			</index>
		</table>
		<table name="time_approval" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000000;description=]]></comment>
			<column name="time_approval_uid" type="text" jt="12" mandatory="y" />
			<column name="time_approval_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" />
			<column name="time_entry_uid" type="text" jt="12" mandatory="y" />
			<column name="approval_comment" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_save_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_approval_pkey" unique="PRIMARY_KEY" >
				<column name="time_approval_uid" />
			</index>
		</table>
		<table name="time_entry" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000000;description=time entered by account against project]]></comment>
			<column name="time_entry_uid" type="text" jt="12" mandatory="y" />
			<column name="time_entry_name" type="text" jt="12" mandatory="y" />
			<column name="time_submit_uid" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Email of account - FK to account]]></comment>
			</column>
			<column name="project_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="project_milestone_uid" type="text" jt="12" mandatory="y" />
			<column name="period_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_instance_uid" type="text" jt="12" />
			<column name="entry_period" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Period of that entry - week or day or month]]></comment>
			</column>
			<column name="entry_note" type="text" jt="12" mandatory="y" />
			<column name="lock_row" type="text" jt="12" />
			<column name="start_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date/time of that entry]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[end date/time of that entry]]></comment>
			</column>
			<column name="entry_minutes" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[number of minutes assigned to that entry]]></comment>
			</column>
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_save_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_entry_pkey" unique="PRIMARY_KEY" >
				<column name="time_entry_uid" />
			</index>
		</table>
		<table name="time_entry_final" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000000;description=final time entered by account against project]]></comment>
			<column name="time_entry_final_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[UID of entry - final: account-project-date-row]]></comment>
			</column>
			<column name="time_entry_final_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Email of account - FK to account]]></comment>
			</column>
			<column name="project_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="project_milestone_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_instance_uid" type="text" jt="12" />
			<column name="entry_period" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Period of that entry - month 202401 or week 2024003 or day 20240109]]></comment>
			</column>
			<column name="entry_note" type="text" jt="12" mandatory="y" />
			<column name="lock_uid" type="text" jt="12" />
			<column name="start_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date/time of that entry]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[end date/time of that entry]]></comment>
			</column>
			<column name="entry_minutes" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_final_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_entry_final_pkey" unique="PRIMARY_KEY" >
				<column name="time_entry_final_uid" />
			</index>
		</table>
		<table name="time_entry_invoice" row_count="0" spec="" >
			<comment><![CDATA[type=m2m;cardinality=1000000;description=connection between time entry and invoice]]></comment>
			<column name="time_entry_invoice_uid" type="text" jt="12" mandatory="y" />
			<column name="time_entry_invoice_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Email of account - FK to account]]></comment>
			</column>
			<column name="time_submit_uid" type="text" jt="12" mandatory="y" />
			<column name="time_entry_uid" type="text" jt="12" mandatory="y" />
			<column name="project_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="project_milestone_uid" type="text" jt="12" mandatory="y" />
			<column name="period_uid" type="text" jt="12" mandatory="y" />
			<column name="invoice_instance_uid" type="text" jt="12" mandatory="y" />
			<column name="entry_period" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Period of that entry - week or day or month]]></comment>
			</column>
			<column name="entry_note" type="text" jt="12" mandatory="y" />
			<column name="lock_row" type="text" jt="12" />
			<column name="start_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[start date/time of that entry]]></comment>
			</column>
			<column name="end_date" type="timestamp" jt="93" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[end date/time of that entry]]></comment>
			</column>
			<column name="entry_minutes" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[number of minutes assigned to that entry]]></comment>
			</column>
			<column name="is_approved" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_save_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_entry_invoice_pkey" unique="PRIMARY_KEY" >
				<column name="time_entry_invoice_uid" />
			</index>
		</table>
		<table name="time_rule" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=10000;description=]]></comment>
			<column name="time_rule_uid" type="text" jt="12" mandatory="y" />
			<column name="time_rule_name" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_save_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_rule_pkey" unique="PRIMARY_KEY" >
				<column name="time_rule_uid" />
			</index>
		</table>
		<table name="time_rule_client" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000000;description=applied rule of time submitting into one client]]></comment>
			<column name="time_rule_client_uid" type="text" jt="12" mandatory="y" />
			<column name="time_rule_client_name" type="text" jt="12" mandatory="y" />
			<column name="time_rule_definition" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_save_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_rule_client_pkey" unique="PRIMARY_KEY" >
				<column name="time_rule_client_uid" />
			</index>
		</table>
		<table name="time_submit" row_count="0" spec="" >
			<comment><![CDATA[type=full;cardinality=1000000;description=single submit of time for selected account to many projects wihtin one period]]></comment>
			<column name="time_submit_uid" type="text" jt="12" mandatory="y" />
			<column name="time_submit_name" type="text" jt="12" mandatory="y" />
			<column name="tenant_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[type=fk;description=tenant UID]]></comment>
			</column>
			<column name="account_uid" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Email of account - FK to account]]></comment>
			</column>
			<column name="period_uid" type="text" jt="12" mandatory="y" />
			<column name="time_submit_description" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_save_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_submit_pkey" unique="PRIMARY_KEY" >
				<column name="time_submit_uid" />
			</index>
		</table>
		<table name="time_submit_type" row_count="0" spec="" >
			<comment><![CDATA[type=dictionary;cardinality=10;description=type of submitting time]]></comment>
			<column name="time_submit_type_uid" type="text" jt="12" mandatory="y" />
			<column name="time_submit_type_name" type="text" jt="12" mandatory="y" />
			<column name="time_submit_type_description" type="text" jt="12" mandatory="y" />
			<column name="row_instance" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['1.0.0'::text]]></defo>
			</column>
			<column name="row_lock" type="text" jt="12" />
			<column name="row_owner" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['System'::text]]></defo>
				<comment><![CDATA[FK to account_group - owner of this row]]></comment>
			</column>
			<column name="row_seq" type="bigint" length="64" jt="-5" mandatory="y" >
				<identity><![CDATA[GENERATED  BY DEFAULT AS IDENTITY]]></identity>
			</column>
			<column name="row_guid" type="text" jt="12" mandatory="y" >
				<defo><![CDATA[replace(concat('time_entry_save_v01_', "substring"((now())::text, 1, 10), '_', "substring"((uuid_generate_v4())::text, 1, 13)), '-'::text, '_'::text)]]></defo>
				<comment><![CDATA[global generated unique ID]]></comment>
			</column>
			<column name="row_version" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[0]]></defo>
				<comment><![CDATA[version of the row]]></comment>
			</column>
			<column name="is_active" type="bigint" length="64" jt="-5" mandatory="y" >
				<defo><![CDATA[1]]></defo>
				<comment><![CDATA[0 - row has been logically deleted, 1 - row is still active]]></comment>
			</column>
			<column name="created_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of insertion given row to database]]></comment>
			</column>
			<column name="created_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that created this row]]></comment>
			</column>
			<column name="last_updated_date" type="timestamp" jt="93" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
				<comment><![CDATA[date and time of last change of this row]]></comment>
			</column>
			<column name="last_updated_by" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['system'::text]]></defo>
				<comment><![CDATA[account UID of person that updated this row]]></comment>
			</column>
			<column name="removed_date" type="timestamp" jt="93" >
				<comment><![CDATA[date and time of change this row]]></comment>
			</column>
			<column name="removed_by" type="text" jt="12" >
				<comment><![CDATA[account UID of person that removed this row]]></comment>
			</column>
			<column name="custom_attributes" type="text" jt="12" mandatory="y" >
				<defo><![CDATA['{}'::text]]></defo>
			</column>
			<index name="time_submit_type_pkey" unique="PRIMARY_KEY" >
				<column name="time_submit_type_uid" />
			</index>
		</table>
		<view name="v_definition_column_all_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_column_all_list AS SELECT table_name AS table_full_name,
    replace(replace((table_name)::text, 'v_rich_'::text, ''::text), 'v_custom'::text, ''::text) AS table_name,
    column_name,
        CASE
            WHEN ((column_default)::text ~~ '%replace%'::text) THEN NULL::text
            ELSE replace(replace((column_default)::text, '::text'::text, ''::text), 'now()'::text, 'datetime.datetime.now()'::text)
        END AS column_default,
    concat('self.', column_name) AS self_column_name,
    data_type,
    is_nullable,
    ordinal_position,
    concat(
        CASE data_type
            WHEN 'bigint'::text THEN 'int'::text
            WHEN 'text'::text THEN 'str'::text
            WHEN 'timestamp without time zone'::text THEN 'datetime.datetime'::text
            ELSE 'str'::text
        END, '',
        CASE
            WHEN ((is_nullable)::text = 'YES'::text) THEN '| None'::text
            ELSE ''::text
        END) AS python_type,
    concat(column_name, ': ',
        CASE data_type
            WHEN 'bigint'::text THEN 'int'::text
            WHEN 'text'::text THEN 'str'::text
            WHEN 'timestamp without time zone'::text THEN 'datetime.datetime'::text
            ELSE 'str'::text
        END, '',
        CASE
            WHEN ((is_nullable)::text = 'YES'::text) THEN ' | None'::text
            ELSE ''::text
        END) AS python_definition,
    concat(column_name, ': ',
        CASE data_type
            WHEN 'bigint'::text THEN 'int'::text
            WHEN 'text'::text THEN 'str'::text
            WHEN 'timestamp without time zone'::text THEN 'datetime.datetime'::text
            ELSE 'str'::text
        END, '',
        CASE
            WHEN ((is_nullable)::text = 'YES'::text) THEN ' | None'::text
            ELSE ''::text
        END, ' = ',
        CASE
            WHEN ((column_name)::name = 'is_active'::name) THEN '1'::text
            WHEN ((column_name)::name = 'custom_attributes'::name) THEN '"{}"'::text
            WHEN ((column_name)::name = 'system_version_uid'::name) THEN 'objects.system_version_uid'::text
            WHEN ((column_name)::name = 'system_instance_uid'::name) THEN 'objects.system_instance_uid'::text
            WHEN ((column_name)::name = ''::name) THEN ''::text
            WHEN ((column_name)::name = ''::name) THEN ''::text
            WHEN ((data_type)::text = 'bigint'::text) THEN '0'::text
            WHEN ((data_type)::text = 'text'::text) THEN '""'::text
            WHEN ((data_type)::text = 'timestamp without time zone'::text) THEN 'datetime.datetime.now()'::text
            ELSE '""'::text
        END) AS python_definition_default,
    concat('"', column_name, '": "',
        CASE data_type
            WHEN 'bigint'::text THEN 'int'::text
            WHEN 'text'::text THEN 'str'::text
            WHEN 'timestamp without time zone'::text THEN 'datetime.datetime'::text
            ELSE 'str'::text
        END, '',
        CASE
            WHEN ((is_nullable)::text = 'YES'::text) THEN ' | None'::text
            ELSE ''::text
        END, '"') AS python_map_definition,
    concat(
        CASE
            WHEN ((column_name)::name = 'is_active'::name) THEN '1'::text
            WHEN ((column_name)::name = 'custom_attributes'::name) THEN '"{}"'::text
            WHEN ((column_name)::name = ''::name) THEN ''::text
            WHEN ((column_name)::name = ''::name) THEN ''::text
            WHEN ((data_type)::text = 'bigint'::text) THEN '0'::text
            WHEN ((data_type)::text = 'text'::text) THEN '""'::text
            WHEN ((data_type)::text = 'timestamp without time zone'::text) THEN 'datetime.datetime.now()'::text
            ELSE '""'::text
        END) AS python_empty_value,
    concat(
        CASE
            WHEN ((column_name)::name = 'is_active'::name) THEN '1'::text
            WHEN ((column_name)::name = 'created_by'::name) THEN '"system"'::text
            WHEN ((column_name)::name = 'custom_attributes'::name) THEN '"{}"'::text
            WHEN ((column_name)::name = ''::name) THEN ''::text
            WHEN ((column_name)::name = concat(table_name, '_uid')) THEN 'base_dto.get_random_uid()'::text
            WHEN ((data_type)::text = 'bigint'::text) THEN '0'::text
            WHEN ((data_type)::text = 'text'::text) THEN '""'::text
            WHEN ((data_type)::text = 'timestamp without time zone'::text) THEN 'datetime.datetime.now()'::text
            ELSE '""'::text
        END) AS python_default_value,
    concat(
        CASE
            WHEN ((column_name)::name = 'is_active'::name) THEN '1'::text
            WHEN ((column_name)::name = 'created_by'::name) THEN '"system"'::text
            WHEN ((column_name)::name = 'custom_attributes'::name) THEN '"{}"'::text
            WHEN ((column_name)::name = ''::name) THEN ''::text
            WHEN ((column_name)::name = concat(table_name, '_uid')) THEN 'base_dto.get_random_uid()'::text
            WHEN ((data_type)::text = 'bigint'::text) THEN '0'::text
            WHEN ((data_type)::text = 'text'::text) THEN 'base_dto.get_random_uid()'::text
            WHEN ((data_type)::text = 'timestamp without time zone'::text) THEN 'datetime.datetime.now()'::text
            ELSE '""'::text
        END) AS python_random_value,
    concat('        self.', column_name, ' = ', column_name) AS self_set,
        CASE
            WHEN ((column_name)::name = ANY (ARRAY['row_instance'::name, 'row_lock'::name, 'row_owner'::name, 'row_seq'::name, 'row_guid'::name, 'row_version'::name, 'is_active'::name, 'created_date'::name, 'created_by'::name, 'last_updated_date'::name, 'last_updated_by'::name, 'removed_date'::name, 'removed_by'::name, 'custom_attributes'::name])) THEN 1
            ELSE 0
        END AS is_metadata,
        CASE
            WHEN ((column_name)::name = ANY (ARRAY['row_instance'::name, 'row_lock'::name, 'row_owner'::name, 'row_seq'::name, 'row_guid'::name, 'row_version'::name, 'is_active'::name, 'created_date'::name, 'created_by'::name, 'last_updated_date'::name, 'last_updated_by'::name, 'removed_date'::name, 'removed_by'::name, 'custom_attributes'::name])) THEN 1
            ELSE 0
        END AS is_value,
        CASE
            WHEN (((column_name)::name ~~ '%_uid'::text) AND ((column_name)::name <> concat(table_name, '_uid'))) THEN 1
            ELSE 0
        END AS is_fk,
        CASE
            WHEN (((column_name)::name = concat(table_name, '_name')) AND ((column_name)::name <> concat(table_name, '_uid'))) THEN 1
            ELSE 0
        END AS is_name,
        CASE
            WHEN (((column_name)::name <> ALL (ARRAY['row_instance'::name, 'row_lock'::name, 'row_owner'::name, 'row_seq'::name, 'row_guid'::name, 'row_version'::name, 'is_active'::name, 'created_date'::name, 'created_by'::name, 'last_updated_date'::name, 'last_updated_by'::name, 'removed_date'::name, 'removed_by'::name, 'custom_attributes'::name])) AND ((column_name)::name <> concat(table_name, '_uid'))) THEN 1
            ELSE 0
        END AS is_non_key_attribute,
        CASE
            WHEN ((column_name)::name <> ALL (ARRAY['row_instance'::name, 'row_lock'::name, 'row_owner'::name, 'row_seq'::name, 'row_guid'::name, 'row_version'::name, 'is_active'::name, 'created_date'::name, 'created_by'::name, 'last_updated_date'::name, 'last_updated_by'::name, 'removed_date'::name, 'removed_by'::name, 'custom_attributes'::name])) THEN 1
            ELSE 0
        END AS is_attribute,
        CASE
            WHEN ((column_name)::name <> ALL (ARRAY['row_instance'::name, 'row_lock'::name, 'row_owner'::name, 'row_seq'::name, 'row_guid'::name, 'row_version'::name, 'is_active'::name, 'created_date'::name, 'created_by'::name, 'last_updated_date'::name, 'last_updated_by'::name, 'removed_date'::name, 'removed_by'::name])) THEN 1
            ELSE 0
        END AS is_write,
        CASE
            WHEN ((table_name)::name !~~ 'v_%'::text) THEN 1
            ELSE 0
        END AS is_base,
        CASE
            WHEN ((table_name)::name ~~ 'v_rich_%'::text) THEN 1
            ELSE 0
        END AS is_rich,
        CASE
            WHEN ((table_name)::name ~~ 'v_custom_%'::text) THEN 1
            ELSE 0
        END AS is_custom,
        CASE
            WHEN ((table_name)::name ~~ 'v_definition_%'::text) THEN 1
            ELSE 0
        END AS is_definition
   FROM ${view}
  WHERE (((table_schema)::name = 'public'::name) AND ((table_name)::name <> ALL (ARRAY['databasechangeloglock'::name, 'databasechangelog'::name])))
  ORDER BY ordinal_position]]></view_script>
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="table_name" type="text" />
			<column name="column_name" type="&quot;sql_identifier&quot;" />
			<column name="column_default" type="text" />
			<column name="self_column_name" type="text" />
			<column name="data_type" type="&quot;character_data&quot;" />
			<column name="is_nullable" type="&quot;yes_or_no&quot;" />
			<column name="ordinal_position" type="&quot;cardinal_number&quot;" />
			<column name="python_type" type="text" />
			<column name="python_definition" type="text" />
			<column name="python_definition_default" type="text" />
			<column name="python_map_definition" type="text" />
			<column name="python_empty_value" type="text" />
			<column name="python_default_value" type="text" />
			<column name="python_random_value" type="text" />
			<column name="self_set" type="text" />
			<column name="is_metadata" type="integer" />
			<column name="is_value" type="integer" />
			<column name="is_fk" type="integer" />
			<column name="is_name" type="integer" />
			<column name="is_non_key_attribute" type="integer" />
			<column name="is_attribute" type="integer" />
			<column name="is_write" type="integer" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_column_base_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_full_name,
    table_name,
    column_name,
    column_default,
    self_column_name,
    data_type,
    is_nullable,
    ordinal_position,
    python_type,
    python_definition,
    python_definition_default,
    python_map_definition,
    python_empty_value,
    python_default_value,
    python_random_value,
    self_set,
    is_metadata,
    is_value,
    is_fk,
    is_name,
    is_non_key_attribute,
    is_attribute,
    is_write,
    is_base,
    is_rich,
    is_custom,
    is_definition
   FROM v_definition_column_all_list
  WHERE (is_base = 1)]]></view_script>
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="table_name" type="text" />
			<column name="column_name" type="&quot;sql_identifier&quot;" />
			<column name="column_default" type="text" />
			<column name="self_column_name" type="text" />
			<column name="data_type" type="&quot;character_data&quot;" />
			<column name="is_nullable" type="&quot;yes_or_no&quot;" />
			<column name="ordinal_position" type="&quot;cardinal_number&quot;" />
			<column name="python_type" type="text" />
			<column name="python_definition" type="text" />
			<column name="python_definition_default" type="text" />
			<column name="python_map_definition" type="text" />
			<column name="python_empty_value" type="text" />
			<column name="python_default_value" type="text" />
			<column name="python_random_value" type="text" />
			<column name="self_set" type="text" />
			<column name="is_metadata" type="integer" />
			<column name="is_value" type="integer" />
			<column name="is_fk" type="integer" />
			<column name="is_name" type="integer" />
			<column name="is_non_key_attribute" type="integer" />
			<column name="is_attribute" type="integer" />
			<column name="is_write" type="integer" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_column_custom_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_full_name,
    table_name,
    column_name,
    column_default,
    self_column_name,
    data_type,
    is_nullable,
    ordinal_position,
    python_type,
    python_definition,
    python_definition_default,
    python_map_definition,
    python_empty_value,
    python_default_value,
    python_random_value,
    self_set,
    is_metadata,
    is_value,
    is_fk,
    is_name,
    is_non_key_attribute,
    is_attribute,
    is_write,
    is_base,
    is_rich,
    is_custom,
    is_definition
   FROM v_definition_column_all_list
  WHERE (is_custom = 1)]]></view_script>
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="table_name" type="text" />
			<column name="column_name" type="&quot;sql_identifier&quot;" />
			<column name="column_default" type="text" />
			<column name="self_column_name" type="text" />
			<column name="data_type" type="&quot;character_data&quot;" />
			<column name="is_nullable" type="&quot;yes_or_no&quot;" />
			<column name="ordinal_position" type="&quot;cardinal_number&quot;" />
			<column name="python_type" type="text" />
			<column name="python_definition" type="text" />
			<column name="python_definition_default" type="text" />
			<column name="python_map_definition" type="text" />
			<column name="python_empty_value" type="text" />
			<column name="python_default_value" type="text" />
			<column name="python_random_value" type="text" />
			<column name="self_set" type="text" />
			<column name="is_metadata" type="integer" />
			<column name="is_value" type="integer" />
			<column name="is_fk" type="integer" />
			<column name="is_name" type="integer" />
			<column name="is_non_key_attribute" type="integer" />
			<column name="is_attribute" type="integer" />
			<column name="is_write" type="integer" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_column_rich_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_full_name,
    table_name,
    column_name,
    column_default,
    self_column_name,
    data_type,
    is_nullable,
    ordinal_position,
    python_type,
    python_definition,
    python_definition_default,
    python_map_definition,
    python_empty_value,
    python_default_value,
    python_random_value,
    self_set,
    is_metadata,
    is_value,
    is_fk,
    is_name,
    is_non_key_attribute,
    is_attribute,
    is_write,
    is_base,
    is_rich,
    is_custom,
    is_definition
   FROM v_definition_column_all_list
  WHERE (is_rich = 1)]]></view_script>
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="table_name" type="text" />
			<column name="column_name" type="&quot;sql_identifier&quot;" />
			<column name="column_default" type="text" />
			<column name="self_column_name" type="text" />
			<column name="data_type" type="&quot;character_data&quot;" />
			<column name="is_nullable" type="&quot;yes_or_no&quot;" />
			<column name="ordinal_position" type="&quot;cardinal_number&quot;" />
			<column name="python_type" type="text" />
			<column name="python_definition" type="text" />
			<column name="python_definition_default" type="text" />
			<column name="python_map_definition" type="text" />
			<column name="python_empty_value" type="text" />
			<column name="python_default_value" type="text" />
			<column name="python_random_value" type="text" />
			<column name="self_set" type="text" />
			<column name="is_metadata" type="integer" />
			<column name="is_value" type="integer" />
			<column name="is_fk" type="integer" />
			<column name="is_name" type="integer" />
			<column name="is_non_key_attribute" type="integer" />
			<column name="is_attribute" type="integer" />
			<column name="is_write" type="integer" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_dao_init" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    1 AS ordinal_position,
    concat('    ', table_name, '_dao_instance = ', table_name, '_full_dao()') AS python
   FROM v_definition_table_column_base
  ORDER BY table_name]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_dao_register" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    1 AS ordinal_position,
    concat('        self.all_daos["', table_name, '_dao"] = self.', table_name, '_dao_instance') AS python
   FROM v_definition_table_column_base
  ORDER BY table_name]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_foreign_key" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_foreign_key AS SELECT ${view},
    c.column_name,
    fkt.table_name AS fk_table_name,
    concat(fkt.table_name, '_uid') AS fk_column_uid,
    concat('<addForeignKeyConstraint baseTableName="', ${view}, '" baseColumnNames="', c.column_name, '" constraintName="fk_', ${view}, '_', c.column_name, '" referencedTableName="', fkt.table_name, '" referencedColumnNames="', fkt.table_name, '_uid" />') AS liquibase_definition
   FROM (v_definition_column_all_list c
     JOIN v_definition_table_base_list fkt ON (((c.column_name)::name ~~ concat('%', fkt.table_name, '_uid'))))
  WHERE (((c.column_name)::name ~~ '%_uid'::text) AND (${view} <> fkt.table_name))
  ORDER BY ${view}, c.ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="column_name" type="&quot;sql_identifier&quot;" />
			<column name="fk_table_name" type="text" />
			<column name="fk_column_uid" type="text" />
			<column name="liquibase_definition" type="text" />
		</view>
		<view name="v_definition_foreign_key_existing" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_foreign_key_existing AS SELECT ${view},
    tc.constraint_name,
    tc.table_name,
    kcu.column_name,
    ccu.table_schema AS foreign_table_schema,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
   FROM ((information_schema.table_constraints tc
     JOIN information_schema.key_column_usage kcu ON ((((tc.constraint_name)::name = (kcu.constraint_name)::name) AND ((${view})::name = (kcu.table_schema)::name))))
     JOIN information_schema.constraint_column_usage ccu ON (((ccu.constraint_name)::name = (tc.constraint_name)::name)))
  WHERE (((${view})::name = 'public'::name) AND ((tc.constraint_name)::name ~~ 'fk_%'::text))]]></view_script>
			<column name="table_schema" type="&quot;sql_identifier&quot;" />
			<column name="constraint_name" type="&quot;sql_identifier&quot;" />
			<column name="table_name" type="&quot;sql_identifier&quot;" />
			<column name="column_name" type="&quot;sql_identifier&quot;" />
			<column name="foreign_table_schema" type="&quot;sql_identifier&quot;" />
			<column name="foreign_table_name" type="&quot;sql_identifier&quot;" />
			<column name="foreign_column_name" type="&quot;sql_identifier&quot;" />
		</view>
		<view name="v_definition_models" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_models AS SELECT ${view},
    1 AS ordinal_position,
    concat('    ', ${view}, '_model: db_model = db_model(''', ${view}, ''', [', t.attr_column_names_list, '], [', COALESCE(r.attr_column_names_list, ''::text), '], {', t.attr_python_map_definitions, '}, {', t.fk_columns_definition, '}, "', t.table_comment, '")') AS python
   FROM (v_definition_table_column_base t
     LEFT JOIN v_definition_table_column_rich r ON ((${view} = r.table_name)))
  ORDER BY ${view}]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_models_register" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    1 AS ordinal_position,
    concat('        self.all_models["', table_name, '"] = self.', table_name, '_model') AS python
   FROM v_definition_table_column_base
  ORDER BY table_name]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_daos_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_python_daos_list AS SELECT ''::text AS table_name,
    1 AS ordinal_position,
    concat('# auto-generated - v_definition_python_daos_list - START at ', (now())::text) AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    'from dao.daos_full import *'::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    ''::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    ''::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    'class DaosList(base_object):'::text AS python
UNION ALL
 SELECT ${view},
    v_definition_dao_init.ordinal_position,
    v_definition_dao_init.python
   FROM v_definition_dao_init
UNION ALL
 SELECT v_definition_dao_register.table_name,
    v_definition_dao_register.ordinal_position,
    v_definition_dao_register.python
   FROM v_definition_dao_register]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_daos_read" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'from __future__ import annotations'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            'from dto.dtos_read import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            'from dto.dtos_full import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            'from dto.dtos_rich import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            12 AS ordinal_position,
            'from dto.dtos_read_list import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            13 AS ordinal_position,
            'from dto.dtos_rich_list import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            14 AS ordinal_position,
            'from dto.dtos_thin_list import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            15 AS ordinal_position,
            'from dto.dtos_write_list import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            16 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            17 AS ordinal_position,
            'from typing import Dict, Callable'::text
        UNION ALL
         SELECT ''::text AS table_name,
            18 AS ordinal_position,
            'from base.base_objects import objects'::text
        UNION ALL
         SELECT ''::text AS table_name,
            19 AS ordinal_position,
            'from dao.dao_base import base_dao'::text
        UNION ALL
         SELECT ''::text AS table_name,
            20 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            21 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1000 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_dao(base_dao):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1001,
            concat('    def __init__(self):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1002,
            concat('        super().__init__()') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1003,
            concat('    def get_model(self) -> db_model:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1004,
            concat('        return db_models.', v_definition_table_base_list.table_name, '_model') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1010,
            concat('    def select_rows_read_by_query(self, sql: str, params: Iterable = []) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1011,
            concat('        return ', v_definition_table_base_list.table_name, '_read_dtos(list(map(lambda r: ', v_definition_table_base_list.table_name, '_read_dto(*r), self.get_objects(sql, params))))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1021,
            concat('    def select_rows_write_by_query(self, sql: str, params: Iterable = []) -> ', v_definition_table_base_list.table_name, '_write_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1022,
            concat('        return ', v_definition_table_base_list.table_name, '_write_dtos(list(map(lambda r: ', v_definition_table_base_list.table_name, '_write_dto(*r), self.get_objects(sql, params))))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1031,
            concat('    def select_rows_thin_by_query(self, sql: str, params: Iterable = []) -> ', v_definition_table_base_list.table_name, '_thin_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1032,
            concat('        return ', v_definition_table_base_list.table_name, '_thin_dtos(list(map(lambda r: ', v_definition_table_base_list.table_name, '_thin_dto(*r), self.get_objects(sql, params))))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1041,
            concat('    def select_rows_rich_by_query(self, sql: str, params: Iterable = []) -> ', v_definition_table_base_list.table_name, '_rich_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1042,
            concat('        return ', v_definition_table_base_list.table_name, '_rich_dtos(list(map(lambda r: ', v_definition_table_base_list.table_name, '_rich_dto(*r), self.get_objects(sql, params))))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1051,
            concat('    def select_row_first_by_query(self, sql: str, params: Iterable = []) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1052,
            concat('        return self.select_rows_read_by_query(sql, params).get_first()') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1061,
            concat('    def select_rows_read_order_by_column(self, col_name: str, params: Iterable = [], n: int = 1000) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1062,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_order_by_query(col_name, n), params)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1071,
            concat('    def select_rows_read_all(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1072,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_all_limit_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1075,
            concat('    def select_rows_read_active(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1076,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_active_limit_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1081,
            concat('    def select_rows_read_all_latest(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1082,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_all_latest_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1091,
            concat('    def select_rows_read_active_latest(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1092,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_active_latest_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1111,
            concat('    def select_rows_write_all(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_write_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1112,
            concat('        return self.select_rows_write_by_query(self.get_model().get_select_write_all_limit_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1121,
            concat('    def select_rows_write_active(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_write_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1122,
            concat('        return self.select_rows_write_by_query(self.get_model().get_select_write_active_limit_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1131,
            concat('    def select_rows_write_all_latest(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_write_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1132,
            concat('        return self.select_rows_write_by_query(self.get_model().get_select_write_all_latest_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1141,
            concat('    def select_rows_write_active_latest(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_write_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1142,
            concat('        return self.select_rows_write_by_query(self.get_model().get_select_write_active_latest_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1151,
            concat('    def select_row_read_by_uid(self, uid: str) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1152,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_by_key(), (uid,)).get_first()') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1161,
            concat('    def select_row_read_by_id(self, id: int) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1162,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_by_id(), (id,)).get_first()') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1171,
            concat('    def select_rows_read_by_any_column(self, col_name: str, col_value: any, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1172,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_active_by_any_column(col_name, n), (col_value,))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1181,
            concat('    def select_rows_read_by_any_column_values(self, col_name: str, col_values: Iterable, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1182,
            concat('        return self.select_rows_read_by_query(self.get_model().get_select_active_by_any_column_values(col_name, col_values, n), col_values)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1191,
            concat('    def select_rows_thin_all(self, n: int = 1000) -> ', v_definition_table_base_list.table_name, '_thin_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1192,
            concat('        return self.select_rows_thin_by_query(self.get_model().get_select_thin_all_sql(n))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (1301 + ((v_definition_column_base_list.ordinal_position)::integer * 10)),
            concat('    def select_rows_read_by_', v_definition_column_base_list.column_name, '(self, ', v_definition_column_base_list.python_definition, ', n: int = 1000) -> ', v_definition_column_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (1302 + ((v_definition_column_base_list.ordinal_position)::integer * 10)),
            concat('        return self.select_rows_read_by_any_column(''', v_definition_column_base_list.column_name, ''', ', v_definition_column_base_list.column_name, ', n)') AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4401,
            concat('    def insert_dto(self, dto: ', v_definition_table_base_list.table_name, '_write_dto, created_by: str = objects.created_by_default) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4402,
            concat('        return self.insert_single(dto, created_by)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4430 AS ordinal_position,
            concat('    def insert_row(self, ', v_definition_table_column_base.attr_python_definition_defaults, ', created_by: str = objects.created_by_default) -> int:') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4431 AS ordinal_position,
            concat('        return self.insert_single(', v_definition_table_column_base.table_name, '_write_dto.new_write(', v_definition_table_column_base.attr_column_list, '), created_by)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4440 AS ordinal_position,
            concat('    def insert_row_random_uid(self, ', v_definition_table_column_base.attrnonkey_column_list_with_type, ', created_by: str = objects.created_by_default) -> int:') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4441 AS ordinal_position,
            concat('        return self.insert_single(', v_definition_table_column_base.table_name, '_write_dto.new_write_random_uid(', v_definition_table_column_base.attrnonkey_column_list, '), created_by)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4460,
            concat('    def insert_dtos(self, dtos: list[', v_definition_table_base_list.table_name, '_write_dto], created_by: str = objects.created_by_default) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4461,
            concat('        return self.insert_many(dtos, created_by)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4470,
            concat('    def insert_write_dtos(self, dtos: ', v_definition_table_base_list.table_name, '_write_dtos, created_by: str = objects.created_by_default) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4471,
            concat('        return self.insert_dtos(dtos.dtos, created_by)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4480,
            concat('    def insert_read_dtos(self, dtos: ', v_definition_table_base_list.table_name, '_read_dtos, created_by: str = objects.created_by_default) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4481,
            concat('        return self.insert_dtos(dtos.get_write_dtos(), created_by)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4490,
            concat('    def insert_and_get(self, dto: ', v_definition_table_base_list.table_name, '_write_dto, created_by: str = objects.created_by_default) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4491,
            concat('        self.insert_single(dto, created_by)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4492,
            concat('        return self.select_row_read_by_uid(dto.get_uid())') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4495,
            concat('    def insert_and_get_many(self, dtos: ', v_definition_table_base_list.table_name, '_write_dtos, created_by: str = objects.created_by_default) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4496,
            concat('        return ', v_definition_table_base_list.table_name, '_read_dtos(list(map(lambda dto: self.insert_and_get(dto, created_by), dtos.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            5530 AS ordinal_position,
            concat('    def upsert_row(self, ', v_definition_table_column_base.attr_column_list_with_type, ', updated_by: str=objects.created_by_default) -> int:') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            5531 AS ordinal_position,
            concat('        params = ', v_definition_table_column_base.table_name, '_write_dto.new_write(', v_definition_table_column_base.attr_column_list, ').get_list_write_insert(updated_by)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            5532 AS ordinal_position,
            concat('        return self.execute_query(self.get_model().upsert_attrs_sql, params)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            5540 AS ordinal_position,
            concat('    def upsert_row_and_get(self, ', v_definition_table_column_base.attr_column_list_with_type, ', updated_by: str = objects.created_by_default) -> ', v_definition_table_column_base.table_name, '_read_dto | None:') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            5541 AS ordinal_position,
            concat('        params = ', v_definition_table_column_base.table_name, '_write_dto.new_write(', v_definition_table_column_base.attr_column_list, ').get_list_write_insert(updated_by)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            5542 AS ordinal_position,
            concat('        self.execute_query(self.get_model().upsert_attrs_sql, params)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            5543 AS ordinal_position,
            concat('        return self.select_row_read_by_uid(', v_definition_table_column_base.table_name, '_uid)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            6440,
            concat('    def delete_logical_dtos(self, dtos: list[', v_definition_table_base_list.table_name, '_write_dto], removed_by: str = objects.created_by_default) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            6441,
            concat('        uids = list(map(lambda dto: dto.get_uid(), dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            6442,
            concat('        return self.delete_logical_by_uids(uids, removed_by)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            6450,
            concat('    def delete_logical_write_dtos(self, dtos: ', v_definition_table_base_list.table_name, '_write_dtos, removed_by: str = objects.created_by_default) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            6451,
            concat('        return self.delete_logical_dtos(dtos.dtos, removed_by)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - v_definition_python_dtos_thin_list - END'::text AS python) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_full" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            'from dto.dtos_read import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_full_dto(', v_definition_table_base_list.table_name, '_read_dto):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            204,
            concat('    is_active: int') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            210,
            concat('    def __init__(self):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            214,
            concat('        self.is_active = 1') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text AS python) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_full_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'from __future__ import annotations'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            'from dto.dtos_read import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            'from dto.dtos_full import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            12 AS ordinal_position,
            'from typing import Dict, Callable'::text
        UNION ALL
         SELECT ''::text AS table_name,
            13 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            14 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_full_dtos(base_dtos):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            210,
            concat('    dtos: list[', v_definition_table_base_list.table_name, '_full_dto]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            220,
            concat('    def __init__(self, dtos: list[', v_definition_table_base_list.table_name, '_full_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            230,
            '        super().__init__(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            231,
            '        self.dtos = dtos'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            300,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            301,
            '    def empty_list(cls):'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            302,
            '        return cls(list())'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            310,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            311,
            concat('    def from_list(cls, dtos: list[', v_definition_table_base_list.table_name, '_full_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            312,
            '        return cls(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            320,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            321,
            concat('    def from_object(cls, dto: ', v_definition_table_base_list.table_name, '_full_dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            322,
            '        return cls([dto])'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            330,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            331,
            concat('    def from_lists(cls, dtos1: list[', v_definition_table_base_list.table_name, '_full_dto], dtos2: list[', v_definition_table_base_list.table_name, '_full_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            332,
            '        return cls(dtos1 + dtos2)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            551,
            concat('    def find_by_uid(self, uid: str) -> ', v_definition_table_base_list.table_name, '_full_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            552,
            concat('        found_dtos = list(filter(lambda x: x.', v_definition_table_base_list.table_name, '_uid == uid, self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            553,
            concat('        if (len(found_dtos)>0):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            554,
            concat('            return found_dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            555,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            556,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            561,
            concat('    def map_by_uid(self) -> dict[str, ', v_definition_table_base_list.table_name, '_full_dto]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            562,
            concat('        res = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            563,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            564,
            concat('            res[dto.', v_definition_table_base_list.table_name, '_uid] = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            565,
            concat('        return res') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text AS python) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_model_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_python_dtos_model_list AS SELECT ''::text AS table_name,
    1 AS ordinal_position,
    concat('# auto-generated - v_definition_python_dtos_model_list - START at ', (now())::text) AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    'from dto.dtos import db_model'::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    'from base.base_objects import base_model'::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    ''::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    'class model_list_base:'::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    '    all_models: dict[str, db_model] = {}'::text AS python
UNION ALL
 SELECT ${view},
    v_definition_models.ordinal_position,
    v_definition_models.python
   FROM v_definition_models
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    '    def initialize(self):'::text AS python
UNION ALL
 SELECT v_definition_models_register.table_name,
    v_definition_models_register.ordinal_position,
    v_definition_models_register.python
   FROM v_definition_models_register
UNION ALL
 SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
    99999 AS ordinal_position,
    '# auto-generated - v_definition_python_dtos_model_list - END'::text AS python]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_read" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            v_definition_table_base_list.dto_read_class_definition AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (200 + (v_definition_column_base_list.ordinal_position)::integer),
            concat('    ', v_definition_column_base_list.python_definition) AS concat
           FROM v_definition_column_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            400 AS ordinal_position,
            v_definition_table_column_base.all_init_definition
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (500 + (v_definition_column_base_list.ordinal_position)::integer),
            v_definition_column_base_list.self_set
           FROM v_definition_column_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1110 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1120 AS ordinal_position,
            '    def empty_read(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1130 AS ordinal_position,
            concat('        return cls(0, ', v_definition_table_column_base.attr_python_empty_values, ', "", 0, 1, datetime.datetime.now(), "system", datetime.datetime.now(), "system", None, None, "{}")') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1210 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1220 AS ordinal_position,
            '    def default_read(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1230 AS ordinal_position,
            concat('        return cls(0, ', v_definition_table_column_base.attr_python_default_values, ', "", 0, 1, datetime.datetime.now(), "system", datetime.datetime.now(), "system", None, None, "{}")') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1310 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1320 AS ordinal_position,
            '    def random_read(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1330 AS ordinal_position,
            concat('        return cls(0, ', v_definition_table_column_base.attr_python_random_values, ', "", 0, 1, datetime.datetime.now(), "system", datetime.datetime.now(), "system", None, None, "{}")') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1410 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1420 AS ordinal_position,
            concat('    def new_read_default(cls, ', v_definition_table_column_base.attr_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1430 AS ordinal_position,
            concat('        return cls(0, ', v_definition_table_column_base.attr_column_list, ', "", 0, 1, datetime.datetime.now(), "system", datetime.datetime.now(), "system", None, None, "{}")') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1510 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1520 AS ordinal_position,
            concat('    def new_read_full(cls, ', v_definition_table_column_base.all_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1530 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.all_column_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1610 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1620 AS ordinal_position,
            concat('    def from_write(cls, dto: ', v_definition_table_base_list.dto_write_class_name, '):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1630 AS ordinal_position,
            concat('        return cls(0, ', v_definition_table_column_base.attr_column_dto_list, ', "", 0, 1, datetime.datetime.now(), "system", datetime.datetime.now(), "system", None, None, dto.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1710 AS ordinal_position,
            '    def clone_read(self):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1711 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_read_class_name, '(', v_definition_table_column_base.all_column_self_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1721 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1722 AS ordinal_position,
            '    def from_dictionary(cls, d: dict[str, any]):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1723 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.all_column_dict_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1731,
            concat('    def to_read_dict(self) -> dict:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1732,
            concat('        return asdict(self)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1800 AS ordinal_position,
            concat('    def to_write(self) -> ', v_definition_table_base_list.dto_write_class_name, ':') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1801 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_write_class_name, '(', v_definition_table_column_base.attr_column_self_list, ', self.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1810 AS ordinal_position,
            concat('    def to_thin(self) -> ', v_definition_table_base_list.table_name, '_thin_dto:') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1811 AS ordinal_position,
            concat('        return ', v_definition_table_base_list.table_name, '_thin_dto(self.', v_definition_table_base_list.table_name, '_uid, self.', v_definition_table_base_list.table_name, '_name, self.created_date, self.is_active)') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1910 AS ordinal_position,
            '    def touch(self, updated_by: str = "system"):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1911 AS ordinal_position,
            concat('        self.last_updated_date = datetime.datetime.now()') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1912 AS ordinal_position,
            concat('        self.last_updated_by = updated_by') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1913 AS ordinal_position,
            concat('        self.row_version = self.row_version+1') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2300 AS ordinal_position,
            '    def get_list_all_values(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2301 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.all_column_dictionary, '') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2310 AS ordinal_position,
            '    def get_list_update_values(self, updated_by: str) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2311 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes, updated_by, self.', v_definition_table_column_base.table_name, '_uid]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2400 AS ordinal_position,
            '    def is_older_than(self, dt: datetime.datetime) -> bool:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2410 AS ordinal_position,
            concat('        return self.created_date < dt') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2500 AS ordinal_position,
            '    def is_newer_than(self, dt: datetime.datetime) -> bool:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2510 AS ordinal_position,
            concat('        return self.created_date > dt') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2600 AS ordinal_position,
            '    def to_json_read(self) -> str:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2610 AS ordinal_position,
            concat('        return json.dumps(self.to_read_dict())') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_read_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'from __future__ import annotations'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'import logging'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from logging import config'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            'from dto.dtos_read import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            'from typing import Dict, Callable'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_read_dtos(base_read_dtos):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            210,
            concat('    dtos: list[', v_definition_table_base_list.table_name, '_read_dto]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            220,
            concat('    def __init__(self, dtos: list[', v_definition_table_base_list.table_name, '_read_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            230,
            '        super().__init__(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            231,
            '        self.dtos = dtos'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            300,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            301,
            '    def empty_list(cls):'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            302,
            '        return cls(list())'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            310,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            311,
            concat('    def from_list(cls, dtos: list[', v_definition_table_base_list.table_name, '_read_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            312,
            '        return cls(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            320,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            321,
            concat('    def from_object(cls, dto: ', v_definition_table_base_list.table_name, '_read_dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            322,
            '        return cls(list([dto]))'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            330,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            331,
            concat('    def from_lists(cls, dtos1: list[', v_definition_table_base_list.table_name, '_read_dto], dtos2: list[', v_definition_table_base_list.table_name, '_read_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            332,
            '        return cls(dtos1 + dtos2)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            501,
            concat('    def get_active(self):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            502,
            concat('        return ', v_definition_table_base_list.table_name, '_read_dtos(list(filter(lambda x: x.is_active == 1, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            511,
            concat('    def get_inactive(self):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            512,
            concat('        return ', v_definition_table_base_list.table_name, '_read_dtos(list(filter(lambda x: x.is_active != 1, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            521,
            concat('    def get_write_dtos(self) -> list[', v_definition_table_base_list.table_name, '_write_dto]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            522,
            concat('        return list(map(lambda x: x.to_write(), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            531,
            concat('    def get_write_dicts(self) -> list[dict]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            532,
            concat('        return list(map(lambda x: x.to_write().to_write_dict(), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            541,
            concat('    def get_read_dicts(self) -> list[dict]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            542,
            concat('        return list(map(lambda x: x.to_write_dict(), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            551,
            concat('    def find_by_uid(self, uid: str) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            552,
            concat('        found_dtos = list(filter(lambda x: x.', v_definition_table_base_list.table_name, '_uid == uid, self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            553,
            concat('        if (len(found_dtos)>0):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            554,
            concat('            return found_dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            555,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            556,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1001,
            concat('    def get_first(self) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1002,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1003,
            concat('            return self.dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1004,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1005,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1011,
            concat('    def get_first_n(self, n: int) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1012,
            concat('        if len(self.dtos) > n:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1013,
            concat('            return ', v_definition_table_base_list.table_name, '_read_dtos(self.dtos[:n])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1014,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1015,
            concat('            return ', v_definition_table_base_list.table_name, '_read_dtos(self.dtos)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1021,
            concat('    def get_last(self) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1022,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1023,
            concat('            return self.dtos[-1]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1024,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1025,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1091,
            concat('    def to_dict_by_uid(self) -> dict[str, ', v_definition_table_base_list.table_name, '_read_dto]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1092,
            concat('        d = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1093,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1094,
            concat('            d[dto.get_uid()] = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1095,
            concat('        return d') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (1101 + ((v_definition_column_base_list.ordinal_position)::integer * 10)),
            concat('    def to_dict_by_', v_definition_column_base_list.column_name, '(self) -> dict[str, ', v_definition_column_base_list.table_name, '_read_dto]:') AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (1102 + ((v_definition_column_base_list.ordinal_position)::integer * 10)),
            concat('        d = {}') AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (1103 + ((v_definition_column_base_list.ordinal_position)::integer * 10)),
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (1104 + ((v_definition_column_base_list.ordinal_position)::integer * 10)),
            concat('            d[dto.', v_definition_column_base_list.column_name, '] = dto') AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (1105 + ((v_definition_column_base_list.ordinal_position)::integer * 10)),
            concat('        return d') AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2011,
            concat('    def for_each(self, do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2012,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2013,
            concat('            do_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2014,
            concat('    def for_first(self, do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2015,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2016,
            concat('            return do_method(self.dtos[0])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2017,
            concat('    def for_filter(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], bool], do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2018,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2019,
            concat('            if check_method(dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2020,
            concat('                do_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2021,
            concat('    def check_all(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], bool]) -> bool:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2022,
            concat('        init = True') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2023,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2024,
            concat('            init = init and check_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2025,
            concat('        return init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2031,
            concat('    def check_any(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], bool]) -> bool:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2032,
            concat('        init = False') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2033,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2034,
            concat('            init = init or check_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2035,
            concat('        return init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2041,
            concat('    def map_to_string(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], str]) -> list[str]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2042,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2043,
            concat('    def map_to_int(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], int]) -> list[int]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2044,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2045,
            concat('    def map_to_float(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], float]) -> list[float]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2046,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2051,
            concat('    def aggregate_string(self, map_method: Callable[[str, ', v_definition_table_base_list.table_name, '_read_dto], str], init: str = "") -> str:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2052,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2053,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2054,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2055,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2061,
            concat('    def aggregate_int(self, map_method: Callable[[int, ', v_definition_table_base_list.table_name, '_read_dto], int], init: int = 0) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2062,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2063,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2064,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2065,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2071,
            concat('    def aggregate_float(self, map_method: Callable[[float, ', v_definition_table_base_list.table_name, '_read_dto], float], init: float = 0) -> float:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2072,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2073,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2074,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2075,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2101,
            concat('    def filter(self, filter_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], bool]) -> ', v_definition_table_base_list.table_name, '_read_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2102,
            concat('        return ', v_definition_table_base_list.table_name, '_read_dtos(list(filter(filter_method, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2111,
            concat('    def group_by(self, group_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], str]) -> dict[str, ', v_definition_table_base_list.table_name, '_read_dtos]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2112,
            concat('        grp_data: dict[str, ', v_definition_table_base_list.table_name, '_read_dtos] = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2113,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2114,
            concat('            key = group_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2115,
            concat('            grp_list = grp_data[key]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2116,
            concat('            if grp_list is None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2117,
            concat('                grp_list = ', v_definition_table_base_list.table_name, '_read_dtos([])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2118,
            concat('                grp_data[key] = grp_list') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2119,
            concat('            grp_list.dtos.append(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2120,
            concat('        return grp_data') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2131,
            concat('    def aggregate_by(self, group_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], str], agg_method: Callable[[', v_definition_table_base_list.table_name, '_read_dtos], any]) -> dict[str, any]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2132,
            concat('        grp_data: dict[str, ', v_definition_table_base_list.table_name, '_read_dtos] = self.group_by(group_method)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2133,
            concat('        res: dict[str, any] = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2134,
            concat('        for key in grp_data:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2135,
            concat('            value = agg_method(grp_data[key])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2136,
            concat('            res[key] = value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2137,
            concat('        return res') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2201,
            concat('    def find(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], bool]) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2202,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2203,
            concat('            if check_method(dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2204,
            concat('                return dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2205,
            concat('        return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2301,
            concat('    def compare_by(self, value_method: Callable[[', v_definition_table_base_list.table_name, '_read_dto], any], compare_method: Callable[[any, any], bool]) -> ', v_definition_table_base_list.table_name, '_read_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2302,
            concat('        if len(self.dtos) == 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2303,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2304,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2305,
            concat('            max_value = value_method(self.dtos[0])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2306,
            concat('            max_elem = self.dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2307,
            concat('            for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2308,
            concat('                next_value = value_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2309,
            concat('                if compare_method(next_value, max_value):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2310,
            concat('                    max_value = next_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2311,
            concat('                    max_elem = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2312,
            concat('            return max_elem') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text AS python) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_rich" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_read import *'::text
        UNION ALL
         SELECT v_definition_table_rich_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_rich_list
        UNION ALL
         SELECT v_definition_table_rich_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_rich_list.table_name, '_rich_dto(', v_definition_table_rich_list.table_name, '_read_dto):') AS python
           FROM v_definition_table_rich_list
        UNION ALL
         SELECT v_definition_column_rich_list.table_name,
            (200 + (v_definition_column_rich_list.ordinal_position)::integer),
            concat('    ', v_definition_column_rich_list.python_definition) AS concat
           FROM v_definition_column_rich_list
        UNION ALL
         SELECT v_definition_table_column_rich.table_name,
            400 AS ordinal_position,
            v_definition_table_column_rich.all_init_definition
           FROM v_definition_table_column_rich
        UNION ALL
         SELECT v_definition_column_rich_list.table_name,
            (500 + (v_definition_column_rich_list.ordinal_position)::integer),
            v_definition_column_rich_list.self_set
           FROM v_definition_column_rich_list
        UNION ALL
         SELECT v_definition_table_rich_list.table_name,
            1731,
            concat('    def to_rich_dict(self) -> dict:') AS concat
           FROM v_definition_table_rich_list
        UNION ALL
         SELECT v_definition_table_rich_list.table_name,
            1732,
            concat('        return asdict(self)') AS concat
           FROM v_definition_table_rich_list
        UNION ALL
         SELECT v_definition_table_rich_list.table_name,
            2300 AS ordinal_position,
            '    def get_rich_all_values(self) -> list[any]:'::text AS python
           FROM v_definition_table_rich_list
        UNION ALL
         SELECT v_definition_table_column_rich.table_name,
            2301 AS ordinal_position,
            concat('        return ', v_definition_table_column_rich.all_column_dictionary, '') AS python
           FROM v_definition_table_column_rich
        UNION ALL
         SELECT v_definition_table_rich_list.table_name,
            99900,
            v_definition_table_rich_list.empty_line_definition
           FROM v_definition_table_rich_list
        UNION ALL
         SELECT v_definition_table_rich_list.table_name,
            99901,
            v_definition_table_rich_list.empty_line_definition
           FROM v_definition_table_rich_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_rich_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'from __future__ import annotations'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            'from dto.dtos_read import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            'from dto.dtos_full import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            'from dto.dtos_rich import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            12 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            13 AS ordinal_position,
            'from typing import Dict, Callable'::text
        UNION ALL
         SELECT ''::text AS table_name,
            14 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            15 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_rich_dtos(base_dtos):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            210,
            concat('    dtos: list[', v_definition_table_base_list.table_name, '_rich_dto]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            220,
            concat('    def __init__(self, dtos: list[', v_definition_table_base_list.table_name, '_rich_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            230,
            '        super().__init__(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            231,
            '        self.dtos = dtos'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            300,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            301,
            '    def empty_list(cls):'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            302,
            '        return cls(list())'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            310,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            311,
            concat('    def from_list(cls, dtos: list[', v_definition_table_base_list.table_name, '_rich_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            312,
            '        return cls(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            320,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            321,
            concat('    def from_object(cls, dto: ', v_definition_table_base_list.table_name, '_rich_dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            322,
            '        return cls([dto])'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            330,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            331,
            concat('    def from_lists(cls, dtos1: list[', v_definition_table_base_list.table_name, '_rich_dto], dtos2: list[', v_definition_table_base_list.table_name, '_rich_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            332,
            '        return cls(dtos1 + dtos2)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            451,
            concat('    def find_by_uid(self, uid: str) -> ', v_definition_table_base_list.table_name, '_rich_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            452,
            concat('        found_dtos = list(filter(lambda x: x.', v_definition_table_base_list.table_name, '_uid == uid, self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            453,
            concat('        if (len(found_dtos)>0):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            454,
            concat('            return found_dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            455,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            456,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            461,
            concat('    def map_by_uid(self) -> dict[str, ', v_definition_table_base_list.table_name, '_rich_dto]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            462,
            concat('        res = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            463,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            464,
            concat('            res[dto.', v_definition_table_base_list.table_name, '_uid] = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            465,
            concat('        return res') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            501,
            concat('    def get_active(self) -> ', v_definition_table_base_list.table_name, '_rich_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            502,
            concat('        return ', v_definition_table_base_list.table_name, '_rich_dtos(list(filter(lambda x: x.is_active == 1, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            511,
            concat('    def get_inactive(self) -> ', v_definition_table_base_list.table_name, '_rich_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            512,
            concat('        return ', v_definition_table_base_list.table_name, '_rich_dtos(list(filter(lambda x: x.is_active != 1, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1001,
            concat('    def get_first(self) -> ', v_definition_table_base_list.table_name, '_rich_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1002,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1003,
            concat('            return self.dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1004,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1005,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1011,
            concat('    def get_first_n(self, n: int) -> ', v_definition_table_base_list.table_name, '_rich_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1012,
            concat('        if len(self.dtos) > n:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1013,
            concat('            return ', v_definition_table_base_list.table_name, '_rich_dtos(self.dtos[:n])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1014,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1015,
            concat('            return ', v_definition_table_base_list.table_name, '_rich_dtos(self.dtos)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1021,
            concat('    def get_last(self) -> ', v_definition_table_base_list.table_name, '_rich_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1022,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1023,
            concat('            return self.dtos[-1]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1024,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1025,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1091,
            concat('    def to_dict_by_uid(self) -> dict[str, ', v_definition_table_base_list.table_name, '_rich_dto]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1092,
            concat('        d = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1093,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1094,
            concat('            d[dto.get_uid()] = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1095,
            concat('        return d') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2011,
            concat('    def for_each(self, do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2012,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2013,
            concat('            do_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2014,
            concat('    def for_first(self, do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2015,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2016,
            concat('            return do_method(self.dtos[0])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2017,
            concat('    def for_filter(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], bool], do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2018,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2019,
            concat('            if check_method(dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2020,
            concat('                do_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2021,
            concat('    def check_all(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], bool]) -> bool:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2022,
            concat('        init = True') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2023,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2024,
            concat('            init = init and check_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2025,
            concat('        return False') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2031,
            concat('    def check_any(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], bool]) -> bool:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2032,
            concat('        init = False') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2033,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2034,
            concat('            init = init or check_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2035,
            concat('        return False') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2041,
            concat('    def map_to_string(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], str]) -> list[str]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2042,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2043,
            concat('    def map_to_int(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], int]) -> list[int]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2044,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2045,
            concat('    def map_to_float(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], float]) -> list[float]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2046,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2051,
            concat('    def aggregate_string(self, map_method: Callable[[str, ', v_definition_table_base_list.table_name, '_rich_dto], str], init: str = "") -> str:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2052,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2053,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2054,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2055,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2061,
            concat('    def aggregate_int(self, map_method: Callable[[int, ', v_definition_table_base_list.table_name, '_rich_dto], int], init: int = 0) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2062,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2063,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2064,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2065,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2071,
            concat('    def aggregate_float(self, map_method: Callable[[float, ', v_definition_table_base_list.table_name, '_rich_dto], float], init: float = 0) -> float:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2072,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2073,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2074,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2075,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2101,
            concat('    def filter(self, filter_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], bool]) -> ', v_definition_table_base_list.table_name, '_rich_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2102,
            concat('        return ', v_definition_table_base_list.table_name, '_rich_dtos(list(filter(filter_method, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2111,
            concat('    def group_by(self, group_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], str]) -> dict[str, ', v_definition_table_base_list.table_name, '_rich_dtos]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2112,
            concat('        grp_data: dict[str, ', v_definition_table_base_list.table_name, '_rich_dtos] = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2113,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2114,
            concat('            key = group_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2115,
            concat('            grp_list = grp_data[key]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2116,
            concat('            if grp_list is None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2117,
            concat('                grp_list = ', v_definition_table_base_list.table_name, '_rich_dtos([])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2118,
            concat('                grp_data[key] = grp_list') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2119,
            concat('            grp_list.dtos.append(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2120,
            concat('        return grp_data') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2131,
            concat('    def aggregate_by(self, group_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], str], agg_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dtos], any]) -> dict[str, any]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2132,
            concat('        grp_data: dict[str, ', v_definition_table_base_list.table_name, '_rich_dtos] = self.group_by(group_method)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2133,
            concat('        res: dict[str, any] = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2134,
            concat('        for key in grp_data:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2135,
            concat('            value = agg_method(grp_data[key])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2136,
            concat('            res[key] = value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2137,
            concat('        return res') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2201,
            concat('    def find(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], bool]) -> ', v_definition_table_base_list.table_name, '_rich_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2202,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2203,
            concat('            if check_method(dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2204,
            concat('                return dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2205,
            concat('        return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2301,
            concat('    def compare_by(self, value_method: Callable[[', v_definition_table_base_list.table_name, '_rich_dto], any], compare_method: Callable[[any, any], bool]) -> ', v_definition_table_base_list.table_name, '_rich_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2302,
            concat('        if len(self.dtos) == 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2303,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2304,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2305,
            concat('            max_value = value_method(self.dtos[0])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2306,
            concat('            max_elem = self.dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2307,
            concat('            for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2308,
            concat('                next_value = value_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2309,
            concat('                if compare_method(next_value, max_value):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2310,
            concat('                    max_value = next_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2311,
            concat('                    max_elem = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2312,
            concat('            return max_elem') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - v_definition_python_dtos_full_list - END'::text AS python) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_thin" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from dataclasses import dataclass, asdict'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'import json'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from base.base_objects import objects'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_models import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_thin_dto(base_dto):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            201,
            concat('    ', v_definition_table_base_list.table_name, '_uid: str') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            202,
            concat('    ', v_definition_table_base_list.table_name, '_name: str') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            203,
            concat('    created_date: datetime.datetime') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            204,
            concat('    is_active: int') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            210,
            concat('    def __init__(self, ', v_definition_table_base_list.table_name, '_uid: str,', v_definition_table_base_list.table_name, '_name: str, created_date: datetime.datetime, is_active: int):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            211,
            concat('        self.', v_definition_table_base_list.table_name, '_uid = ', v_definition_table_base_list.table_name, '_uid') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            212,
            concat('        self.', v_definition_table_base_list.table_name, '_name = ', v_definition_table_base_list.table_name, '_name') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            213,
            concat('        self.created_date = created_date') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            214,
            concat('        self.is_active = is_active') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_write" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from dataclasses import dataclass, asdict'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'import json'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from base.base_objects import objects'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_models import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_write_dto(base_write_dto):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (200 + (v_definition_column_base_list.ordinal_position)::integer),
            concat('    ', v_definition_column_base_list.python_definition) AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            400 AS ordinal_position,
            concat('    def __init__(self, ', v_definition_table_column_base.attr_column_list_with_type, ', custom_attributes: str = "{}"):') AS concat
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (500 + (v_definition_column_base_list.ordinal_position)::integer),
            v_definition_column_base_list.self_set
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            599 AS ordinal_position,
            concat('        self.custom_attributes = custom_attributes') AS concat
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1110 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1120 AS ordinal_position,
            '    def empty_write(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1130 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_python_empty_values, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1210 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1220 AS ordinal_position,
            '    def default_write(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1230 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_python_default_values, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1310 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1320 AS ordinal_position,
            '    def random_write(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1330 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_python_random_values, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1410 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1420 AS ordinal_position,
            concat('    def new_write(cls, ', v_definition_table_column_base.attr_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1430 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_column_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1441 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1442 AS ordinal_position,
            concat('    def new_write_with_defaults(cls, ', v_definition_table_column_base.attr_python_definition_defaults, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1443 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_column_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1510 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1520 AS ordinal_position,
            concat('    def new_write_random_uid(cls, ', v_definition_table_column_base.attrnonkey_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1530 AS ordinal_position,
            concat('        return cls(base_dto.get_random_uid(), ', v_definition_table_column_base.attrnonkey_column_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1810 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1811 AS ordinal_position,
            '    def get_class_model(cls) -> base_model:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1812 AS ordinal_position,
            concat('        return db_models.', v_definition_table_base_list.table_name, '_model') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1821 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1822 AS ordinal_position,
            '    def from_dictionary(cls, d: dict[str, any]):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1823 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_column_dict_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1900,
            concat('    def to_write_dict(self) -> dict:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1901,
            concat('        return asdict(self)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2120 AS ordinal_position,
            '    def clone_write(self):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2130 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_write_class_name, '(', v_definition_table_column_base.attr_column_self_list, ', self.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2210 AS ordinal_position,
            '    def clone_write_new_uid(self):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2220 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_write_class_name, '(base_dto.get_random_uid(), ', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2310 AS ordinal_position,
            '    def clone_with_uid(self, uid: str):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2320 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_write_class_name, '(uid, ', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3110 AS ordinal_position,
            '    def get_model(self) -> base_model:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3111 AS ordinal_position,
            concat('        return db_models.', v_definition_table_base_list.table_name, '_model') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3221 AS ordinal_position,
            '    def get_uid(self) -> str:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3222 AS ordinal_position,
            concat('        return self.', v_definition_table_base_list.table_name, '_uid') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3223 AS ordinal_position,
            '    def get_name(self) -> str:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3224 AS ordinal_position,
            concat('        return self.', v_definition_table_base_list.table_name, '_name') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3310 AS ordinal_position,
            '    def get_list_values(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3311 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attr_column_self_list, ', self.custom_attributes]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3321 AS ordinal_position,
            '    def get_list_values_no_custom(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3322 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attr_column_self_list, ']') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3331 AS ordinal_position,
            '    def get_list_write_update(self, updated_by: str) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3332 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes, updated_by, self.', v_definition_table_column_base.table_name, '_uid]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3341 AS ordinal_position,
            '    def get_list_write_insert(self, created_by: str) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3342 AS ordinal_position,
            concat('        return [self.', v_definition_table_column_base.table_name, '_uid, ', v_definition_table_column_base.attrnonkey_column_self_list, ', created_by, created_by, self.custom_attributes]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3410 AS ordinal_position,
            '    def get_nonkey_values(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3411 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attrnonkey_column_self_list, ']') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3420 AS ordinal_position,
            '    def get_nonkey_values_with_custom(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3421 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3431 AS ordinal_position,
            '    def to_json_write(self) -> str:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3432 AS ordinal_position,
            concat('        return json.dumps(self.to_write_dict())') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3510 AS ordinal_position,
            '    def compare_uid(self, obj: base_write_dto) -> bool:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3520 AS ordinal_position,
            concat('        return self.get_uid() == obj.get_uid()') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4110 AS ordinal_position,
            '    def update_uid(self, uid: str):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4111 AS ordinal_position,
            concat('        self.', v_definition_table_base_list.table_name, '_uid = uid') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4202 AS ordinal_position,
            concat('    def update_uid_attributes(self, ', v_definition_table_column_base.attr_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (4203 + (v_definition_column_base_list.ordinal_position)::integer) AS ordinal_position,
            concat('        self.', v_definition_column_base_list.column_name, ' = ', v_definition_column_base_list.column_name, '') AS python
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4302 AS ordinal_position,
            concat('    def update_attributes(self, ', v_definition_table_column_base.attrnonkey_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (4303 + (v_definition_column_base_list.ordinal_position)::integer) AS ordinal_position,
            concat('        self.', v_definition_column_base_list.column_name, ' = ', v_definition_column_base_list.column_name, '') AS python
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_non_key_attribute = 1)
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_dtos_write_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'from __future__ import annotations'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from datetime import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dataclasses import dataclass'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos_thin import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_write import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            'from dto.dtos_read import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            'from typing import Dict, Callable'::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_write_dtos(base_write_dtos):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            210,
            concat('    dtos: list[', v_definition_table_base_list.table_name, '_write_dto]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            220,
            concat('    def __init__(self, dtos: list[', v_definition_table_base_list.table_name, '_write_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            230,
            '        super().__init__(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            231,
            '        self.dtos = dtos'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            300,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            301,
            '    def empty_list(cls):'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            302,
            '        return cls(list())'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            310,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            311,
            concat('    def from_list(cls, dtos: list[', v_definition_table_base_list.table_name, '_write_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            312,
            '        return cls(dtos)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            320,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            321,
            concat('    def from_object(cls, dto: ', v_definition_table_base_list.table_name, '_write_dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            322,
            '        return cls([dto])'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            330,
            '    @classmethod'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            331,
            concat('    def from_lists(cls, dtos1: list[', v_definition_table_base_list.table_name, '_write_dto], dtos2: list[', v_definition_table_base_list.table_name, '_write_dto]):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            332,
            '        return cls(dtos1 + dtos2)'::text
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            431,
            concat('    def get_write_dicts(self) -> list[dict]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            432,
            concat('        return list(map(lambda x: x.to_write_dict(), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            451,
            concat('    def find_by_uid(self, uid: str) -> ', v_definition_table_base_list.table_name, '_write_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            452,
            concat('        found_dtos = list(filter(lambda x: x.', v_definition_table_base_list.table_name, '_uid == uid, self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            453,
            concat('        if (len(found_dtos)>0):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            454,
            concat('            return found_dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            455,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            456,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            461,
            concat('    def map_by_uid(self) -> dict[str, ', v_definition_table_base_list.table_name, '_write_dto]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            462,
            concat('        res = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            463,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            464,
            concat('            res[dto.', v_definition_table_base_list.table_name, '_uid] = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            465,
            concat('        return res') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            501,
            concat('    def get_active(self):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            502,
            concat('        return ', v_definition_table_base_list.table_name, '_write_dtos(list(filter(lambda x: x.is_active == 1, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            511,
            concat('    def get_inactive(self):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            512,
            concat('        return ', v_definition_table_base_list.table_name, '_write_dtos(list(filter(lambda x: x.is_active != 1, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1001,
            concat('    def get_first(self) -> ', v_definition_table_base_list.table_name, '_write_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1002,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1003,
            concat('            return self.dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1004,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1005,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1011,
            concat('    def get_first_n(self, n: int) -> ', v_definition_table_base_list.table_name, '_write_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1012,
            concat('        if len(self.dtos) > n:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1013,
            concat('            return ', v_definition_table_base_list.table_name, '_write_dtos(self.dtos[:n])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1014,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1015,
            concat('            return ', v_definition_table_base_list.table_name, '_write_dtos(self.dtos)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1021,
            concat('    def get_last(self) -> ', v_definition_table_base_list.table_name, '_write_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1022,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1023,
            concat('            return self.dtos[-1]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1024,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1025,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1091,
            concat('    def to_dict_by_uid(self) -> dict[str, ', v_definition_table_base_list.table_name, '_write_dto]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1092,
            concat('        d = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1093,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1094,
            concat('            d[dto.get_uid()] = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1095,
            concat('        return d') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2011,
            concat('    def for_each(self, do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2012,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2013,
            concat('            do_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2014,
            concat('    def for_first(self, do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2015,
            concat('        if len(self.dtos) > 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2016,
            concat('            return do_method(self.dtos[0])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2017,
            concat('    def for_filter(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], bool], do_method: Callable):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2018,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2019,
            concat('            if check_method(dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2020,
            concat('                do_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2021,
            concat('    def check_all(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], bool]) -> bool:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2022,
            concat('        init = True') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2023,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2024,
            concat('            init = init and check_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2025,
            concat('        return False') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2031,
            concat('    def check_any(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], bool]) -> bool:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2032,
            concat('        init = False') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2033,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2034,
            concat('            init = init or check_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2035,
            concat('        return False') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2041,
            concat('    def map_to_string(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], str]) -> list[str]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2042,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2043,
            concat('    def map_to_int(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], int]) -> list[int]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2044,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2045,
            concat('    def map_to_float(self, map_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], float]) -> list[float]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2046,
            concat('        return list(map(lambda dto:  map_method(dto), self.dtos))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2051,
            concat('    def aggregate_string(self, map_method: Callable[[str, ', v_definition_table_base_list.table_name, '_write_dto], str], init: str = "") -> str:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2052,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2053,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2054,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2055,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2061,
            concat('    def aggregate_int(self, map_method: Callable[[int, ', v_definition_table_base_list.table_name, '_write_dto], int], init: int = 0) -> int:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2062,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2063,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2064,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2065,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2071,
            concat('    def aggregate_float(self, map_method: Callable[[float, ', v_definition_table_base_list.table_name, '_write_dto], float], init: float = 0) -> float:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2072,
            concat('        init_value = init') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2073,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2074,
            concat('            init_value = map_method(init_value, dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2075,
            concat('        return init_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2101,
            concat('    def filter(self, filter_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], bool]) -> ', v_definition_table_base_list.table_name, '_write_dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2102,
            concat('        return ', v_definition_table_base_list.table_name, '_write_dtos(list(filter(filter_method, self.dtos)))') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2111,
            concat('    def group_by(self, group_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], str]) -> dict[str, ', v_definition_table_base_list.table_name, '_write_dtos]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2112,
            concat('        grp_data: dict[str, ', v_definition_table_base_list.table_name, '_write_dtos] = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2113,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2114,
            concat('            key = group_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2115,
            concat('            grp_list = grp_data[key]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2116,
            concat('            if grp_list is None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2117,
            concat('                grp_list = ', v_definition_table_base_list.table_name, '_write_dtos([])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2118,
            concat('                grp_data[key] = grp_list') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2119,
            concat('            grp_list.dtos.append(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2120,
            concat('        return grp_data') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2131,
            concat('    def aggregate_by(self, group_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], str], agg_method: Callable[[', v_definition_table_base_list.table_name, '_write_dtos], any]) -> dict[str, any]:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2132,
            concat('        grp_data: dict[str, ', v_definition_table_base_list.table_name, '_write_dtos] = self.group_by(group_method)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2133,
            concat('        res: dict[str, any] = {}') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2134,
            concat('        for key in grp_data:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2135,
            concat('            value = agg_method(grp_data[key])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2136,
            concat('            res[key] = value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2137,
            concat('        return res') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2201,
            concat('    def find(self, check_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], bool]) -> ', v_definition_table_base_list.table_name, '_write_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2202,
            concat('        for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2203,
            concat('            if check_method(dto):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2204,
            concat('                return dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2205,
            concat('        return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2301,
            concat('    def compare_by(self, value_method: Callable[[', v_definition_table_base_list.table_name, '_write_dto], any], compare_method: Callable[[any, any], bool]) -> ', v_definition_table_base_list.table_name, '_write_dto | None:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2302,
            concat('        if len(self.dtos) == 0:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2303,
            concat('            return None') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2304,
            concat('        else:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2305,
            concat('            max_value = value_method(self.dtos[0])') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2306,
            concat('            max_elem = self.dtos[0]') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2307,
            concat('            for dto in self.dtos:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2308,
            concat('                next_value = value_method(dto)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2309,
            concat('                if compare_method(next_value, max_value):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2310,
            concat('                    max_value = next_value') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2311,
            concat('                    max_elem = dto') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2312,
            concat('            return max_elem') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
            99999 AS ordinal_position,
            '# auto-generated - ${view} - END'::text AS python) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_services_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_python_services_list AS SELECT ''::text AS table_name,
    1 AS ordinal_position,
    concat('# auto-generated - v_definition_python_services_object - START at ', (now())::text) AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    'from service.services_object import *'::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    ''::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    'class service_list_base(base_object):'::text AS python
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    '    all_services: list[service_base] = []'::text AS python
UNION ALL
 SELECT ${view},
    v_definition_service_list.ordinal_position,
    v_definition_service_list.python
   FROM v_definition_service_list
UNION ALL
 SELECT ''::text AS table_name,
    1 AS ordinal_position,
    '    def register_all_services(self):'::text AS python
UNION ALL
 SELECT v_definition_service_register.table_name,
    v_definition_service_register.ordinal_position,
    v_definition_service_register.python
   FROM v_definition_service_register
UNION ALL
 SELECT 'zzzzzzzzzzzzzzzz'::text AS table_name,
    99999 AS ordinal_position,
    '# auto-generated - v_definition_python_daos_list - END'::text AS python]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_python_services_object" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            concat('# auto-generated - ${view} - START at ', (now())::text) AS python
        UNION ALL
         SELECT ''::text AS table_name,
            1 AS ordinal_position,
            'import dao.dao_connection'::text
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'from typing import TypeVar, Generic, List, Iterable'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from dao.dao_base import base_dao'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from dao.daos_read import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'from dto.dtos_models import db_models'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from service.service_base import service_base'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dao.daos import daos'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dao.daos_full import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            'db_connections = dao.dao_connection.db_connections'::text
        UNION ALL
         SELECT ''::text AS table_name,
            11 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            12 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1000 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_service(service_base):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1001,
            concat('    dao: ', v_definition_table_base_list.table_name, '_full_dao = daos.', v_definition_table_base_list.table_name, '_dao_instance') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1002,
            concat('    def __init__(self):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1003,
            concat('        super().__init__()') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_service_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    1 AS ordinal_position,
    concat('    ', table_name, '_service_inst = ', table_name, '_service()') AS python
   FROM v_definition_table_base_list
  ORDER BY table_name]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_service_register" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    1 AS ordinal_position,
    concat('        self.all_services.append(self.', table_name, '_service_inst)') AS python
   FROM v_definition_table_base_list
  ORDER BY table_name]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_system_table_generation_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_system_table_generation_list AS SELECT concat('insert into system_table(system_table_uid, system_table_name, key_name, table_code, table_comment, table_type, cardinality)', ' values (''', ${view}, ''',''', ${view}, ''',''', concat(${view}, '_uid'), ''', '''', ''', tc.table_comment, ''', '''', 1000);') AS sql_line
   FROM (information_schema.tables t
     LEFT JOIN ( SELECT t_1.table_name,
            obj_description(pgc.oid, 'pg_class'::name) AS table_comment
           FROM (information_schema.tables t_1
             JOIN pg_class pgc ON (((t_1.table_name)::name = pgc.relname)))
          WHERE (((t_1.table_type)::text = 'BASE TABLE'::text) AND ((t_1.table_schema)::name = 'public'::name))) tc ON (((${view})::name = (tc.table_name)::name)))
  WHERE (((t.table_type)::text = 'BASE TABLE'::text) AND ((t.table_schema)::name = 'public'::name) AND ((${view})::name <> ALL (ARRAY['databasechangeloglock'::name, 'databasechangelog'::name])))
  ORDER BY ${view}]]></view_script>
			<column name="sql_line" type="text" />
		</view>
		<view name="v_definition_table_all_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_table_all_list AS SELECT ${view},
    t.table_full_name,
    replace(${view}, 'v_rich_'::text, ''::text) AS full_name,
    concat('class ', ${view}, '_dtos(base_dto):') AS dtos_class,
    concat('', ${view}, '_dtos') AS dtos_class_name,
    concat('class ', ${view}, '_write_dto(base_write_dto):') AS dto_write_class,
    concat('', ${view}, '_write_dto') AS dto_write_class_name,
    concat('list[', ${view}, '_write_dto]') AS dto_write_class_name_list,
    concat('class ', ${view}, '_read_dto(base_read_dto, ', ${view}, '_write_dto):') AS dto_read_class_definition,
    concat('', ${view}, '_read_dto') AS dto_read_class_name,
    concat('list[', ${view}, '_read_dto]') AS dto_read_class_name_list,
    concat('', ${view}, '_thin_dto') AS dto_thin_class_name,
    concat('class ', ${view}, '_dao(base_dao):') AS dao_class_definition,
    concat('', ${view}, '_dao') AS dao_class_name,
    concat('class ', ${view}, '_service(base_service):') AS service_class_definition,
    concat('', ${view}, '_service') AS service_class_name,
    concat('class ', ${view}, '_controller(base_controller):') AS controller_class_definition,
    concat('', ${view}, '_controller') AS controller_class_name,
    concat(${view}, '_model') AS get_model_object_definition,
    ''::text AS empty_line_definition,
    COALESCE(tc.table_comment, ''::text) AS table_comment,
        CASE
            WHEN (((t.table_full_name)::name !~~ 'v_%'::text) AND ((t.table_type)::text = 'BASE TABLE'::text)) THEN 1
            ELSE 0
        END AS is_base,
        CASE
            WHEN ((t.table_full_name)::name ~~ 'v_rich_%'::text) THEN 1
            ELSE 0
        END AS is_rich,
        CASE
            WHEN ((t.table_full_name)::name ~~ 'v_custom_%'::text) THEN 1
            ELSE 0
        END AS is_custom,
        CASE
            WHEN ((t.table_full_name)::name ~~ 'v_definition_%'::text) THEN 1
            ELSE 0
        END AS is_definition
   FROM (( SELECT tables.table_name AS table_full_name,
            replace((tables.table_name)::text, 'v_rich_'::text, ''::text) AS table_name,
            tables.table_type
           FROM information_schema.tables
          WHERE (((tables.table_schema)::name = 'public'::name) AND ((tables.table_name)::name <> ALL (ARRAY['databasechangeloglock'::name, 'databasechangelog'::name])))) t
     LEFT JOIN ( SELECT t_1.table_name,
            obj_description(pgc.oid, 'pg_class'::name) AS table_comment
           FROM (information_schema.tables t_1
             JOIN pg_class pgc ON (((t_1.table_name)::name = pgc.relname)))
          WHERE (((t_1.table_type)::text = 'BASE TABLE'::text) AND ((t_1.table_schema)::name = 'public'::name))) tc ON (((t.table_full_name)::name = (tc.table_name)::name)))]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_table_base_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    table_full_name,
    full_name,
    dtos_class,
    dtos_class_name,
    dto_write_class,
    dto_write_class_name,
    dto_write_class_name_list,
    dto_read_class_definition,
    dto_read_class_name,
    dto_read_class_name_list,
    dto_thin_class_name,
    dao_class_definition,
    dao_class_name,
    service_class_definition,
    service_class_name,
    controller_class_definition,
    controller_class_name,
    get_model_object_definition,
    empty_line_definition,
    table_comment,
    is_base,
    is_rich,
    is_custom,
    is_definition
   FROM v_definition_table_all_list
  WHERE (is_base = 1)]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_table_column_all" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_definition_table_column_all AS SELECT ${view},
    t.table_full_name,
    t.full_name,
    t.dtos_class,
    t.dtos_class_name,
    t.dto_write_class,
    t.dto_write_class_name,
    t.dto_write_class_name_list,
    t.dto_read_class_definition,
    t.dto_read_class_name,
    t.dto_read_class_name_list,
    t.dto_thin_class_name,
    t.dao_class_definition,
    t.dao_class_name,
    t.service_class_definition,
    t.service_class_name,
    t.controller_class_definition,
    t.controller_class_name,
    t.get_model_object_definition,
    t.empty_line_definition,
    t.table_comment,
    t.is_base,
    t.is_rich,
    t.is_custom,
    t.is_definition,
    allcolls.column_list AS all_column_list,
    allcolls.column_names_list AS all_column_names_list,
    allcolls.column_list_with_type AS all_column_list_with_type,
    allcolls.column_dictionary AS all_column_dictionary,
    allcolls.column_self_list AS all_column_self_list,
    allcolls.column_dto_list AS all_column_dto_list,
    allcolls.column_dict_list AS all_column_dict_list,
    allcolls.cols_type_definition AS all_cols_type_definition,
    allcolls.init_definition AS all_init_definition,
    allcolls.python_empty_values AS all_python_empty_values,
    allcolls.python_default_values AS all_python_default_values,
    allcolls.python_random_values AS all_python_random_values,
    allcolls.python_definition_defaults AS all_python_definition_defaults,
    allcolls.python_map_definitions AS all_python_map_definitions,
    attrcols.column_list AS attr_column_list,
    attrcols.column_names_list AS attr_column_names_list,
    attrcols.column_list_with_type AS attr_column_list_with_type,
    attrcols.column_dictionary AS attr_column_dictionary,
    attrcols.column_self_list AS attr_column_self_list,
    attrcols.column_dto_list AS attr_column_dto_list,
    attrcols.column_dict_list AS attr_column_dict_list,
    attrcols.cols_type_definition AS attr_cols_type_definition,
    attrcols.init_definition AS attr_init_definition,
    attrcols.python_empty_values AS attr_python_empty_values,
    attrcols.python_default_values AS attr_python_default_values,
    attrcols.python_random_values AS attr_python_random_values,
    attrcols.python_definition_defaults AS attr_python_definition_defaults,
    attrcols.python_map_definitions AS attr_python_map_definitions,
    attrnonkeycols.column_list AS attrnonkey_column_list,
    attrnonkeycols.column_names_list AS attrnonkey_column_names_list,
    attrnonkeycols.column_list_with_type AS attrnonkey_column_list_with_type,
    attrnonkeycols.column_dictionary AS attrnonkey_column_dictionary,
    attrnonkeycols.column_self_list AS attrnonkey_column_self_list,
    attrnonkeycols.column_dto_list AS attrnonkey_column_dto_list,
    attrnonkeycols.column_dict_list AS attrnonkey_column_dict_list,
    attrnonkeycols.cols_type_definition AS attrnonkey_cols_type_definition,
    attrnonkeycols.init_definition AS attrnonkey_init_definition,
    attrnonkeycols.python_empty_values AS attrnonkey_python_empty_values,
    attrnonkeycols.python_default_values AS attrnonkey_python_default_values,
    attrnonkeycols.python_random_values AS attrnonkey_python_random_values,
    attrnonkeycols.python_definition_defaults AS attrnonkey_python_definition_defaults,
    attrnonkeycols.python_map_definitions AS attrnonkey_python_map_definitions,
    COALESCE(fktbl.fk_definitions, ''::text) AS fk_columns_definition
   FROM ((((v_definition_table_all_list t
     JOIN ( SELECT v_definition_column_all_lis${view},
            v_definition_column_all_list.table_full_name,
            string_agg((v_definition_column_all_list.column_name)::text, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_list,
            string_agg(concat('''', v_definition_column_all_list.column_name, ''''), ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_names_list,
            string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_list_with_type,
            concat('[', string_agg(v_definition_column_all_list.self_column_name, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), ']') AS column_dictionary,
            concat(string_agg(v_definition_column_all_list.self_column_name, ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_self_list,
            concat(string_agg(concat('dto.', v_definition_column_all_list.column_name), ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_dto_list,
            concat(string_agg(concat('d["', v_definition_column_all_list.column_name, '"]'), ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_dict_list,
            concat('(self, ', string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), ')') AS cols_type_definition,
            concat('    def __init__(self, ', string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), '):') AS init_definition,
            string_agg(v_definition_column_all_list.python_empty_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_empty_values,
            string_agg(v_definition_column_all_list.python_default_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_default_values,
            string_agg(v_definition_column_all_list.python_random_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_random_values,
            string_agg(v_definition_column_all_list.python_definition_default, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_definition_defaults,
            string_agg(v_definition_column_all_list.python_map_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_map_definitions
           FROM v_definition_column_all_list
          GROUP BY v_definition_column_all_lis${view}, v_definition_column_all_list.table_full_name) allcolls ON (((t.table_full_name)::name = (allcolls.table_full_name)::name)))
     JOIN ( SELECT v_definition_column_all_lis${view},
            v_definition_column_all_list.table_full_name,
            string_agg((v_definition_column_all_list.column_name)::text, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_list,
            string_agg(concat('''', v_definition_column_all_list.column_name, ''''), ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_names_list,
            string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_list_with_type,
            concat('[', string_agg(v_definition_column_all_list.self_column_name, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), ']') AS column_dictionary,
            concat(string_agg(v_definition_column_all_list.self_column_name, ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_self_list,
            concat(string_agg(concat('dto.', v_definition_column_all_list.column_name), ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_dto_list,
            concat(string_agg(concat('d["', v_definition_column_all_list.column_name, '"]'), ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_dict_list,
            concat('(self, ', string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), ')') AS cols_type_definition,
            concat('    def __init__(self, ', string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), '):') AS init_definition,
            string_agg(v_definition_column_all_list.python_empty_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_empty_values,
            string_agg(v_definition_column_all_list.python_default_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_default_values,
            string_agg(v_definition_column_all_list.python_random_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_random_values,
            string_agg(v_definition_column_all_list.python_definition_default, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_definition_defaults,
            string_agg(v_definition_column_all_list.python_map_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_map_definitions
           FROM v_definition_column_all_list
          WHERE (v_definition_column_all_list.is_attribute = 1)
          GROUP BY v_definition_column_all_lis${view}, v_definition_column_all_list.table_full_name) attrcols ON (((t.table_full_name)::name = (attrcols.table_full_name)::name)))
     JOIN ( SELECT v_definition_column_all_lis${view},
            v_definition_column_all_list.table_full_name,
            string_agg((v_definition_column_all_list.column_name)::text, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_list,
            string_agg(concat('''', v_definition_column_all_list.column_name, ''''), ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_names_list,
            string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS column_list_with_type,
            concat('[', string_agg(v_definition_column_all_list.self_column_name, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), ']') AS column_dictionary,
            concat(string_agg(v_definition_column_all_list.self_column_name, ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_self_list,
            concat(string_agg(concat('dto.', v_definition_column_all_list.column_name), ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_dto_list,
            concat(string_agg(concat('d["', v_definition_column_all_list.column_name, '"]'), ', '::text ORDER BY v_definition_column_all_list.ordinal_position)) AS column_dict_list,
            concat('(self, ', string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), ')') AS cols_type_definition,
            concat('    def __init__(self, ', string_agg(v_definition_column_all_list.python_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position), '):') AS init_definition,
            string_agg(v_definition_column_all_list.python_empty_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_empty_values,
            string_agg(v_definition_column_all_list.python_default_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_default_values,
            string_agg(v_definition_column_all_list.python_random_value, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_random_values,
            string_agg(v_definition_column_all_list.python_definition_default, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_definition_defaults,
            string_agg(v_definition_column_all_list.python_map_definition, ', '::text ORDER BY v_definition_column_all_list.ordinal_position) AS python_map_definitions
           FROM v_definition_column_all_list
          WHERE (v_definition_column_all_list.is_non_key_attribute = 1)
          GROUP BY v_definition_column_all_lis${view}, v_definition_column_all_list.table_full_name) attrnonkeycols ON (((t.table_full_name)::name = (attrnonkeycols.table_full_name)::name)))
     LEFT JOIN ( SELECT c.table_name,
            string_agg(concat('"', c.column_name, '": "', fk${view}, '"'), ', '::text ORDER BY c.ordinal_position) AS fk_definitions
           FROM (v_definition_column_all_list c
             JOIN v_definition_table_base_list fkt ON (((c.column_name)::name ~~ concat('%', fk${view}, '_uid'))))
          WHERE (((c.column_name)::name ~~ '%_uid'::text) AND (c.table_name <> fk${view}))
          GROUP BY c.table_name) fktbl ON ((fktbl.table_name = (t.table_full_name)::name)))]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
			<column name="all_column_list" type="text" />
			<column name="all_column_names_list" type="text" />
			<column name="all_column_list_with_type" type="text" />
			<column name="all_column_dictionary" type="text" />
			<column name="all_column_self_list" type="text" />
			<column name="all_column_dto_list" type="text" />
			<column name="all_column_dict_list" type="text" />
			<column name="all_cols_type_definition" type="text" />
			<column name="all_init_definition" type="text" />
			<column name="all_python_empty_values" type="text" />
			<column name="all_python_default_values" type="text" />
			<column name="all_python_random_values" type="text" />
			<column name="all_python_definition_defaults" type="text" />
			<column name="all_python_map_definitions" type="text" />
			<column name="attr_column_list" type="text" />
			<column name="attr_column_names_list" type="text" />
			<column name="attr_column_list_with_type" type="text" />
			<column name="attr_column_dictionary" type="text" />
			<column name="attr_column_self_list" type="text" />
			<column name="attr_column_dto_list" type="text" />
			<column name="attr_column_dict_list" type="text" />
			<column name="attr_cols_type_definition" type="text" />
			<column name="attr_init_definition" type="text" />
			<column name="attr_python_empty_values" type="text" />
			<column name="attr_python_default_values" type="text" />
			<column name="attr_python_random_values" type="text" />
			<column name="attr_python_definition_defaults" type="text" />
			<column name="attr_python_map_definitions" type="text" />
			<column name="attrnonkey_column_list" type="text" />
			<column name="attrnonkey_column_names_list" type="text" />
			<column name="attrnonkey_column_list_with_type" type="text" />
			<column name="attrnonkey_column_dictionary" type="text" />
			<column name="attrnonkey_column_self_list" type="text" />
			<column name="attrnonkey_column_dto_list" type="text" />
			<column name="attrnonkey_column_dict_list" type="text" />
			<column name="attrnonkey_cols_type_definition" type="text" />
			<column name="attrnonkey_init_definition" type="text" />
			<column name="attrnonkey_python_empty_values" type="text" />
			<column name="attrnonkey_python_default_values" type="text" />
			<column name="attrnonkey_python_random_values" type="text" />
			<column name="attrnonkey_python_definition_defaults" type="text" />
			<column name="attrnonkey_python_map_definitions" type="text" />
			<column name="fk_columns_definition" type="text" />
		</view>
		<view name="v_definition_table_column_base" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    table_full_name,
    full_name,
    dtos_class,
    dtos_class_name,
    dto_write_class,
    dto_write_class_name,
    dto_write_class_name_list,
    dto_read_class_definition,
    dto_read_class_name,
    dto_read_class_name_list,
    dto_thin_class_name,
    dao_class_definition,
    dao_class_name,
    service_class_definition,
    service_class_name,
    controller_class_definition,
    controller_class_name,
    get_model_object_definition,
    empty_line_definition,
    table_comment,
    is_base,
    is_rich,
    is_custom,
    is_definition,
    all_column_list,
    all_column_names_list,
    all_column_list_with_type,
    all_column_dictionary,
    all_column_self_list,
    all_column_dto_list,
    all_column_dict_list,
    all_cols_type_definition,
    all_init_definition,
    all_python_empty_values,
    all_python_default_values,
    all_python_random_values,
    all_python_definition_defaults,
    all_python_map_definitions,
    attr_column_list,
    attr_column_names_list,
    attr_column_list_with_type,
    attr_column_dictionary,
    attr_column_self_list,
    attr_column_dto_list,
    attr_column_dict_list,
    attr_cols_type_definition,
    attr_init_definition,
    attr_python_empty_values,
    attr_python_default_values,
    attr_python_random_values,
    attr_python_definition_defaults,
    attr_python_map_definitions,
    attrnonkey_column_list,
    attrnonkey_column_names_list,
    attrnonkey_column_list_with_type,
    attrnonkey_column_dictionary,
    attrnonkey_column_self_list,
    attrnonkey_column_dto_list,
    attrnonkey_column_dict_list,
    attrnonkey_cols_type_definition,
    attrnonkey_init_definition,
    attrnonkey_python_empty_values,
    attrnonkey_python_default_values,
    attrnonkey_python_random_values,
    attrnonkey_python_definition_defaults,
    attrnonkey_python_map_definitions,
    fk_columns_definition
   FROM v_definition_table_column_all
  WHERE (is_base = 1)]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
			<column name="all_column_list" type="text" />
			<column name="all_column_names_list" type="text" />
			<column name="all_column_list_with_type" type="text" />
			<column name="all_column_dictionary" type="text" />
			<column name="all_column_self_list" type="text" />
			<column name="all_column_dto_list" type="text" />
			<column name="all_column_dict_list" type="text" />
			<column name="all_cols_type_definition" type="text" />
			<column name="all_init_definition" type="text" />
			<column name="all_python_empty_values" type="text" />
			<column name="all_python_default_values" type="text" />
			<column name="all_python_random_values" type="text" />
			<column name="all_python_definition_defaults" type="text" />
			<column name="all_python_map_definitions" type="text" />
			<column name="attr_column_list" type="text" />
			<column name="attr_column_names_list" type="text" />
			<column name="attr_column_list_with_type" type="text" />
			<column name="attr_column_dictionary" type="text" />
			<column name="attr_column_self_list" type="text" />
			<column name="attr_column_dto_list" type="text" />
			<column name="attr_column_dict_list" type="text" />
			<column name="attr_cols_type_definition" type="text" />
			<column name="attr_init_definition" type="text" />
			<column name="attr_python_empty_values" type="text" />
			<column name="attr_python_default_values" type="text" />
			<column name="attr_python_random_values" type="text" />
			<column name="attr_python_definition_defaults" type="text" />
			<column name="attr_python_map_definitions" type="text" />
			<column name="attrnonkey_column_list" type="text" />
			<column name="attrnonkey_column_names_list" type="text" />
			<column name="attrnonkey_column_list_with_type" type="text" />
			<column name="attrnonkey_column_dictionary" type="text" />
			<column name="attrnonkey_column_self_list" type="text" />
			<column name="attrnonkey_column_dto_list" type="text" />
			<column name="attrnonkey_column_dict_list" type="text" />
			<column name="attrnonkey_cols_type_definition" type="text" />
			<column name="attrnonkey_init_definition" type="text" />
			<column name="attrnonkey_python_empty_values" type="text" />
			<column name="attrnonkey_python_default_values" type="text" />
			<column name="attrnonkey_python_random_values" type="text" />
			<column name="attrnonkey_python_definition_defaults" type="text" />
			<column name="attrnonkey_python_map_definitions" type="text" />
			<column name="fk_columns_definition" type="text" />
		</view>
		<view name="v_definition_table_column_custom" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    table_full_name,
    full_name,
    dtos_class,
    dtos_class_name,
    dto_write_class,
    dto_write_class_name,
    dto_write_class_name_list,
    dto_read_class_definition,
    dto_read_class_name,
    dto_read_class_name_list,
    dto_thin_class_name,
    dao_class_definition,
    dao_class_name,
    service_class_definition,
    service_class_name,
    controller_class_definition,
    controller_class_name,
    get_model_object_definition,
    empty_line_definition,
    table_comment,
    is_base,
    is_rich,
    is_custom,
    is_definition,
    all_column_list,
    all_column_names_list,
    all_column_list_with_type,
    all_column_dictionary,
    all_column_self_list,
    all_column_dto_list,
    all_column_dict_list,
    all_cols_type_definition,
    all_init_definition,
    all_python_empty_values,
    all_python_default_values,
    all_python_random_values,
    all_python_definition_defaults,
    all_python_map_definitions,
    attr_column_list,
    attr_column_names_list,
    attr_column_list_with_type,
    attr_column_dictionary,
    attr_column_self_list,
    attr_column_dto_list,
    attr_column_dict_list,
    attr_cols_type_definition,
    attr_init_definition,
    attr_python_empty_values,
    attr_python_default_values,
    attr_python_random_values,
    attr_python_definition_defaults,
    attr_python_map_definitions,
    attrnonkey_column_list,
    attrnonkey_column_names_list,
    attrnonkey_column_list_with_type,
    attrnonkey_column_dictionary,
    attrnonkey_column_self_list,
    attrnonkey_column_dto_list,
    attrnonkey_column_dict_list,
    attrnonkey_cols_type_definition,
    attrnonkey_init_definition,
    attrnonkey_python_empty_values,
    attrnonkey_python_default_values,
    attrnonkey_python_random_values,
    attrnonkey_python_definition_defaults,
    attrnonkey_python_map_definitions,
    fk_columns_definition
   FROM v_definition_table_column_all
  WHERE (is_custom = 1)]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
			<column name="all_column_list" type="text" />
			<column name="all_column_names_list" type="text" />
			<column name="all_column_list_with_type" type="text" />
			<column name="all_column_dictionary" type="text" />
			<column name="all_column_self_list" type="text" />
			<column name="all_column_dto_list" type="text" />
			<column name="all_column_dict_list" type="text" />
			<column name="all_cols_type_definition" type="text" />
			<column name="all_init_definition" type="text" />
			<column name="all_python_empty_values" type="text" />
			<column name="all_python_default_values" type="text" />
			<column name="all_python_random_values" type="text" />
			<column name="all_python_definition_defaults" type="text" />
			<column name="all_python_map_definitions" type="text" />
			<column name="attr_column_list" type="text" />
			<column name="attr_column_names_list" type="text" />
			<column name="attr_column_list_with_type" type="text" />
			<column name="attr_column_dictionary" type="text" />
			<column name="attr_column_self_list" type="text" />
			<column name="attr_column_dto_list" type="text" />
			<column name="attr_column_dict_list" type="text" />
			<column name="attr_cols_type_definition" type="text" />
			<column name="attr_init_definition" type="text" />
			<column name="attr_python_empty_values" type="text" />
			<column name="attr_python_default_values" type="text" />
			<column name="attr_python_random_values" type="text" />
			<column name="attr_python_definition_defaults" type="text" />
			<column name="attr_python_map_definitions" type="text" />
			<column name="attrnonkey_column_list" type="text" />
			<column name="attrnonkey_column_names_list" type="text" />
			<column name="attrnonkey_column_list_with_type" type="text" />
			<column name="attrnonkey_column_dictionary" type="text" />
			<column name="attrnonkey_column_self_list" type="text" />
			<column name="attrnonkey_column_dto_list" type="text" />
			<column name="attrnonkey_column_dict_list" type="text" />
			<column name="attrnonkey_cols_type_definition" type="text" />
			<column name="attrnonkey_init_definition" type="text" />
			<column name="attrnonkey_python_empty_values" type="text" />
			<column name="attrnonkey_python_default_values" type="text" />
			<column name="attrnonkey_python_random_values" type="text" />
			<column name="attrnonkey_python_definition_defaults" type="text" />
			<column name="attrnonkey_python_map_definitions" type="text" />
			<column name="fk_columns_definition" type="text" />
		</view>
		<view name="v_definition_table_column_rich" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    table_full_name,
    full_name,
    dtos_class,
    dtos_class_name,
    dto_write_class,
    dto_write_class_name,
    dto_write_class_name_list,
    dto_read_class_definition,
    dto_read_class_name,
    dto_read_class_name_list,
    dto_thin_class_name,
    dao_class_definition,
    dao_class_name,
    service_class_definition,
    service_class_name,
    controller_class_definition,
    controller_class_name,
    get_model_object_definition,
    empty_line_definition,
    table_comment,
    is_base,
    is_rich,
    is_custom,
    is_definition,
    all_column_list,
    all_column_names_list,
    all_column_list_with_type,
    all_column_dictionary,
    all_column_self_list,
    all_column_dto_list,
    all_column_dict_list,
    all_cols_type_definition,
    all_init_definition,
    all_python_empty_values,
    all_python_default_values,
    all_python_random_values,
    all_python_definition_defaults,
    all_python_map_definitions,
    attr_column_list,
    attr_column_names_list,
    attr_column_list_with_type,
    attr_column_dictionary,
    attr_column_self_list,
    attr_column_dto_list,
    attr_column_dict_list,
    attr_cols_type_definition,
    attr_init_definition,
    attr_python_empty_values,
    attr_python_default_values,
    attr_python_random_values,
    attr_python_definition_defaults,
    attr_python_map_definitions,
    attrnonkey_column_list,
    attrnonkey_column_names_list,
    attrnonkey_column_list_with_type,
    attrnonkey_column_dictionary,
    attrnonkey_column_self_list,
    attrnonkey_column_dto_list,
    attrnonkey_column_dict_list,
    attrnonkey_cols_type_definition,
    attrnonkey_init_definition,
    attrnonkey_python_empty_values,
    attrnonkey_python_default_values,
    attrnonkey_python_random_values,
    attrnonkey_python_definition_defaults,
    attrnonkey_python_map_definitions,
    fk_columns_definition
   FROM v_definition_table_column_all
  WHERE (is_rich = 1)]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
			<column name="all_column_list" type="text" />
			<column name="all_column_names_list" type="text" />
			<column name="all_column_list_with_type" type="text" />
			<column name="all_column_dictionary" type="text" />
			<column name="all_column_self_list" type="text" />
			<column name="all_column_dto_list" type="text" />
			<column name="all_column_dict_list" type="text" />
			<column name="all_cols_type_definition" type="text" />
			<column name="all_init_definition" type="text" />
			<column name="all_python_empty_values" type="text" />
			<column name="all_python_default_values" type="text" />
			<column name="all_python_random_values" type="text" />
			<column name="all_python_definition_defaults" type="text" />
			<column name="all_python_map_definitions" type="text" />
			<column name="attr_column_list" type="text" />
			<column name="attr_column_names_list" type="text" />
			<column name="attr_column_list_with_type" type="text" />
			<column name="attr_column_dictionary" type="text" />
			<column name="attr_column_self_list" type="text" />
			<column name="attr_column_dto_list" type="text" />
			<column name="attr_column_dict_list" type="text" />
			<column name="attr_cols_type_definition" type="text" />
			<column name="attr_init_definition" type="text" />
			<column name="attr_python_empty_values" type="text" />
			<column name="attr_python_default_values" type="text" />
			<column name="attr_python_random_values" type="text" />
			<column name="attr_python_definition_defaults" type="text" />
			<column name="attr_python_map_definitions" type="text" />
			<column name="attrnonkey_column_list" type="text" />
			<column name="attrnonkey_column_names_list" type="text" />
			<column name="attrnonkey_column_list_with_type" type="text" />
			<column name="attrnonkey_column_dictionary" type="text" />
			<column name="attrnonkey_column_self_list" type="text" />
			<column name="attrnonkey_column_dto_list" type="text" />
			<column name="attrnonkey_column_dict_list" type="text" />
			<column name="attrnonkey_cols_type_definition" type="text" />
			<column name="attrnonkey_init_definition" type="text" />
			<column name="attrnonkey_python_empty_values" type="text" />
			<column name="attrnonkey_python_default_values" type="text" />
			<column name="attrnonkey_python_random_values" type="text" />
			<column name="attrnonkey_python_definition_defaults" type="text" />
			<column name="attrnonkey_python_map_definitions" type="text" />
			<column name="fk_columns_definition" type="text" />
		</view>
		<view name="v_definition_table_custom_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    table_full_name,
    full_name,
    dtos_class,
    dtos_class_name,
    dto_write_class,
    dto_write_class_name,
    dto_write_class_name_list,
    dto_read_class_definition,
    dto_read_class_name,
    dto_read_class_name_list,
    dto_thin_class_name,
    dao_class_definition,
    dao_class_name,
    service_class_definition,
    service_class_name,
    controller_class_definition,
    controller_class_name,
    get_model_object_definition,
    empty_line_definition,
    table_comment,
    is_base,
    is_rich,
    is_custom,
    is_definition
   FROM v_definition_table_all_list
  WHERE (is_rich = 1)]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_table_rich_list" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    table_full_name,
    full_name,
    dtos_class,
    dtos_class_name,
    dto_write_class,
    dto_write_class_name,
    dto_write_class_name_list,
    dto_read_class_definition,
    dto_read_class_name,
    dto_read_class_name_list,
    dto_thin_class_name,
    dao_class_definition,
    dao_class_name,
    service_class_definition,
    service_class_name,
    controller_class_definition,
    controller_class_name,
    get_model_object_definition,
    empty_line_definition,
    table_comment,
    is_base,
    is_rich,
    is_custom,
    is_definition
   FROM v_definition_table_all_list
  WHERE (is_rich = 1)]]></view_script>
			<column name="table_name" type="text" />
			<column name="table_full_name" type="&quot;sql_identifier&quot;" />
			<column name="full_name" type="text" />
			<column name="dtos_class" type="text" />
			<column name="dtos_class_name" type="text" />
			<column name="dto_write_class" type="text" />
			<column name="dto_write_class_name" type="text" />
			<column name="dto_write_class_name_list" type="text" />
			<column name="dto_read_class_definition" type="text" />
			<column name="dto_read_class_name" type="text" />
			<column name="dto_read_class_name_list" type="text" />
			<column name="dto_thin_class_name" type="text" />
			<column name="dao_class_definition" type="text" />
			<column name="dao_class_name" type="text" />
			<column name="service_class_definition" type="text" />
			<column name="service_class_name" type="text" />
			<column name="controller_class_definition" type="text" />
			<column name="controller_class_name" type="text" />
			<column name="get_model_object_definition" type="text" />
			<column name="empty_line_definition" type="text" />
			<column name="table_comment" type="text" />
			<column name="is_base" type="integer" />
			<column name="is_rich" type="integer" />
			<column name="is_custom" type="integer" />
			<column name="is_definition" type="integer" />
		</view>
		<view name="v_definition_thin_dto" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_thin_dto(base_dto):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            201,
            concat('    ', v_definition_table_base_list.table_name, '_uid: str') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            202,
            concat('    ', v_definition_table_base_list.table_name, '_name: str') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            203,
            concat('    created_date: datetime.datetime') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            204,
            concat('    is_active: int') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            210,
            concat('    def __init__(self, ', v_definition_table_base_list.table_name, '_uid: str,', v_definition_table_base_list.table_name, '_name: str, created_date: datetime.datetime, is_active: int):') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            211,
            concat('        self.', v_definition_table_base_list.table_name, '_uid = ', v_definition_table_base_list.table_name, '_uid') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            212,
            concat('        self.', v_definition_table_base_list.table_name, '_name = ', v_definition_table_base_list.table_name, '_name') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            213,
            concat('        self.created_date = created_date') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            214,
            concat('        self.is_active = is_active') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_definition_write_dto" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    ordinal_position,
    python
   FROM ( SELECT ''::text AS table_name,
            1 AS ordinal_position,
            '# auto-generated - ${view} - START'::text AS python
        UNION ALL
         SELECT ''::text AS table_name,
            2 AS ordinal_position,
            'import datetime'::text
        UNION ALL
         SELECT ''::text AS table_name,
            3 AS ordinal_position,
            'from abc import abstractmethod'::text
        UNION ALL
         SELECT ''::text AS table_name,
            4 AS ordinal_position,
            'from dataclasses import dataclass, asdict'::text
        UNION ALL
         SELECT ''::text AS table_name,
            5 AS ordinal_position,
            'import json'::text
        UNION ALL
         SELECT ''::text AS table_name,
            6 AS ordinal_position,
            'from base.base_objects import objects'::text
        UNION ALL
         SELECT ''::text AS table_name,
            7 AS ordinal_position,
            'from dto.dtos import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            8 AS ordinal_position,
            'from dto.dtos_models import *'::text
        UNION ALL
         SELECT ''::text AS table_name,
            9 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT ''::text AS table_name,
            10 AS ordinal_position,
            ''::text
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            100 AS ordinal_position,
            '@dataclass(frozen=False)'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            110 AS ordinal_position,
            concat('class ', v_definition_table_base_list.table_name, '_write_dto(base_write_dto):') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (200 + (v_definition_column_base_list.ordinal_position)::integer),
            concat('    ', v_definition_column_base_list.python_definition) AS concat
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            400 AS ordinal_position,
            concat('    def __init__(self, ', v_definition_table_column_base.attr_column_list_with_type, ', custom_attributes: str = "{}"):') AS concat
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (500 + (v_definition_column_base_list.ordinal_position)::integer),
            v_definition_column_base_list.self_set
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            599 AS ordinal_position,
            concat('        self.custom_attributes = custom_attributes') AS concat
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1110 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1120 AS ordinal_position,
            '    def empty_write(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1130 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_python_empty_values, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1210 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1220 AS ordinal_position,
            '    def default_write(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1230 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_python_default_values, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1310 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1320 AS ordinal_position,
            '    def random_write(cls):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1330 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_python_random_values, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1410 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1420 AS ordinal_position,
            concat('    def new_write(cls, ', v_definition_table_column_base.attr_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1430 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_column_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1441 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1442 AS ordinal_position,
            concat('    def new_write_with_defaults(cls, ', v_definition_table_column_base.attr_python_definition_defaults, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1443 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_column_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1510 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1520 AS ordinal_position,
            concat('    def new_write_random_uid(cls, ', v_definition_table_column_base.attrnonkey_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1530 AS ordinal_position,
            concat('        return cls(base_dto.get_random_uid(), ', v_definition_table_column_base.attrnonkey_column_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1810 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1811 AS ordinal_position,
            '    def get_class_model(cls) -> base_model:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1812 AS ordinal_position,
            concat('        return db_models.', v_definition_table_base_list.table_name, '_model') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1821 AS ordinal_position,
            '    @classmethod'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1822 AS ordinal_position,
            '    def from_dictionary(cls, d: dict[str, any]):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            1823 AS ordinal_position,
            concat('        return cls(', v_definition_table_column_base.attr_column_dict_list, ')') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1900,
            concat('    def to_write_dict(self) -> dict:') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            1901,
            concat('        return asdict(self)') AS concat
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2120 AS ordinal_position,
            '    def clone_write(self):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2130 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_write_class_name, '(', v_definition_table_column_base.attr_column_self_list, ', self.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2210 AS ordinal_position,
            '    def clone_write_new_uid(self):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2220 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_write_class_name, '(base_dto.get_random_uid(), ', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            2310 AS ordinal_position,
            '    def clone_with_uid(self, uid: str):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            2320 AS ordinal_position,
            concat('        return ', v_definition_table_column_base.dto_write_class_name, '(uid, ', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes)') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3110 AS ordinal_position,
            '    def get_model(self) -> base_model:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3111 AS ordinal_position,
            concat('        return db_models.', v_definition_table_base_list.table_name, '_model') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3221 AS ordinal_position,
            '    def get_uid(self) -> str:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3222 AS ordinal_position,
            concat('        return self.', v_definition_table_base_list.table_name, '_uid') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3223 AS ordinal_position,
            '    def get_name(self) -> str:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3224 AS ordinal_position,
            concat('        return self.', v_definition_table_base_list.table_name, '_name') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3310 AS ordinal_position,
            '    def get_list_values(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3311 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attr_column_self_list, ', self.custom_attributes]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3321 AS ordinal_position,
            '    def get_list_values_no_custom(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3322 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attr_column_self_list, ']') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3331 AS ordinal_position,
            '    def get_list_write_update(self, updated_by: str) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3332 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes, updated_by, self.', v_definition_table_column_base.table_name, '_uid]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3341 AS ordinal_position,
            '    def get_list_write_insert(self, created_by: str) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3342 AS ordinal_position,
            concat('        return [self.', v_definition_table_column_base.table_name, '_uid, ', v_definition_table_column_base.attrnonkey_column_self_list, ', created_by, created_by, self.custom_attributes]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3410 AS ordinal_position,
            '    def get_nonkey_values(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3411 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attrnonkey_column_self_list, ']') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3420 AS ordinal_position,
            '    def get_nonkey_values_with_custom(self) -> list[any]:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3421 AS ordinal_position,
            concat('        return [', v_definition_table_column_base.attrnonkey_column_self_list, ', self.custom_attributes]') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3431 AS ordinal_position,
            '    def to_json_write(self) -> str:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3432 AS ordinal_position,
            concat('        return json.dumps(self.to_write_dict())') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            3510 AS ordinal_position,
            '    def compare_uid(self, obj: base_write_dto) -> bool:'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            3520 AS ordinal_position,
            concat('        return self.get_uid() == obj.get_uid()') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4110 AS ordinal_position,
            '    def update_uid(self, uid: str):'::text AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            4111 AS ordinal_position,
            concat('        self.', v_definition_table_base_list.table_name, '_uid = uid') AS python
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4202 AS ordinal_position,
            concat('    def update_uid_attributes(self, ', v_definition_table_column_base.attr_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (4203 + (v_definition_column_base_list.ordinal_position)::integer) AS ordinal_position,
            concat('        self.', v_definition_column_base_list.column_name, ' = ', v_definition_column_base_list.column_name, '') AS python
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_attribute = 1)
        UNION ALL
         SELECT v_definition_table_column_base.table_name,
            4302 AS ordinal_position,
            concat('    def update_attributes(self, ', v_definition_table_column_base.attrnonkey_column_list_with_type, '):') AS python
           FROM v_definition_table_column_base
        UNION ALL
         SELECT v_definition_column_base_list.table_name,
            (4303 + (v_definition_column_base_list.ordinal_position)::integer) AS ordinal_position,
            concat('        self.', v_definition_column_base_list.column_name, ' = ', v_definition_column_base_list.column_name, '') AS python
           FROM v_definition_column_base_list
          WHERE (v_definition_column_base_list.is_non_key_attribute = 1)
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99900,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list
        UNION ALL
         SELECT v_definition_table_base_list.table_name,
            99901,
            v_definition_table_base_list.empty_line_definition
           FROM v_definition_table_base_list) x
  ORDER BY table_name, ordinal_position]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_models_register" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT table_name,
    1 AS ordinal_position,
    concat('        self.all_models["', table_name, '"] = self.', table_name, '_model') AS python
   FROM v_definition_table_column_base
  ORDER BY table_name]]></view_script>
			<column name="table_name" type="text" />
			<column name="ordinal_position" type="integer" />
			<column name="python" type="text" />
		</view>
		<view name="v_rich_account" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_account AS SELECT ${view},
    account.account_name,
    account.tenant_uid,
    account.account_type_uid,
    account.account_title_uid,
    account.account_division_uid,
    account.account_group_uid,
    account.auth_identity_uid,
    account.account_email,
    account.display_name,
    account.is_system,
    account.row_instance,
    account.row_lock,
    account.row_owner,
    account.row_seq,
    account.row_guid,
    account.row_version,
    account.is_active,
    account.created_date,
    account.created_by,
    account.last_updated_date,
    account.last_updated_by,
    account.removed_date,
    account.removed_by,
    account.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_type_uid.account_type_name AS account_type_uid_account_type_name,
    _account_type_uid.account_type_description AS account_type_uid_account_type_description,
    _account_title_uid.account_title_name AS account_title_uid_account_title_name,
    _account_title_uid.title_description AS account_title_uid_title_description,
    _account_division_uid.account_division_name AS account_division_uid_account_division_name,
    _account_division_uid.tenant_uid AS account_division_uid_tenant_uid,
    _account_division_uid.account_uid AS account_division_uid_account_uid,
    _account_division_uid.account_division_template_uid AS account_division_uid_account_division_template_uid,
    _account_division_uid.division_description AS account_division_uid_division_description,
    _account_group_uid.account_group_name AS account_group_uid_account_group_name,
    _account_group_uid.tenant_uid AS account_group_uid_tenant_uid,
    _account_group_uid.account_group_description AS account_group_uid_account_group_description,
    _auth_identity_uid.auth_identity_name AS auth_identity_uid_auth_identity_name,
    _auth_identity_uid.class_name AS auth_identity_uid_class_name,
    _auth_identity_uid.default_parameters_json AS auth_identity_uid_default_parameters_json
   FROM ((((((account
     LEFT JOIN tenant _tenant_uid ON ((account.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account_type _account_type_uid ON ((account.account_type_uid = _account_type_uid.account_type_uid)))
     LEFT JOIN account_title _account_title_uid ON ((account.account_title_uid = _account_title_uid.account_title_uid)))
     LEFT JOIN account_division _account_division_uid ON ((account.account_division_uid = _account_division_uid.account_division_uid)))
     LEFT JOIN account_group _account_group_uid ON ((account.account_group_uid = _account_group_uid.account_group_uid)))
     LEFT JOIN auth_identity _auth_identity_uid ON ((account.auth_identity_uid = _auth_identity_uid.auth_identity_uid)))]]></view_script>
			<column name="account_uid" type="text" />
			<column name="account_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_type_uid" type="text" />
			<column name="account_title_uid" type="text" />
			<column name="account_division_uid" type="text" />
			<column name="account_group_uid" type="text" />
			<column name="auth_identity_uid" type="text" />
			<column name="account_email" type="text" />
			<column name="display_name" type="text" />
			<column name="is_system" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_type_uid_account_type_name" type="text" />
			<column name="account_type_uid_account_type_description" type="text" />
			<column name="account_title_uid_account_title_name" type="text" />
			<column name="account_title_uid_title_description" type="text" />
			<column name="account_division_uid_account_division_name" type="text" />
			<column name="account_division_uid_tenant_uid" type="text" />
			<column name="account_division_uid_account_uid" type="text" />
			<column name="account_division_uid_account_division_template_uid" type="text" />
			<column name="account_division_uid_division_description" type="text" />
			<column name="account_group_uid_account_group_name" type="text" />
			<column name="account_group_uid_tenant_uid" type="text" />
			<column name="account_group_uid_account_group_description" type="text" />
			<column name="auth_identity_uid_auth_identity_name" type="text" />
			<column name="auth_identity_uid_class_name" type="text" />
			<column name="auth_identity_uid_default_parameters_json" type="text" />
		</view>
		<view name="v_rich_account_division" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_account_division AS SELECT ${view},
    account_division.account_division_name,
    account_division.tenant_uid,
    account_division.account_uid,
    account_division.account_division_template_uid,
    account_division.division_description,
    account_division.row_instance,
    account_division.row_lock,
    account_division.row_owner,
    account_division.row_seq,
    account_division.row_guid,
    account_division.row_version,
    account_division.is_active,
    account_division.created_date,
    account_division.created_by,
    account_division.last_updated_date,
    account_division.last_updated_by,
    account_division.removed_date,
    account_division.removed_by,
    account_division.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _account_division_template_uid.account_division_template_name AS account_division_template_uid_account_division_template_name,
    _account_division_template_uid.division_description AS account_division_template_uid_division_description
   FROM (((account_division
     LEFT JOIN tenant _tenant_uid ON ((account_division.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((account_division.account_uid = _account_uid.account_uid)))
     LEFT JOIN account_division_template _account_division_template_uid ON ((account_division.account_division_template_uid = _account_division_template_uid.account_division_template_uid)))]]></view_script>
			<column name="account_division_uid" type="text" />
			<column name="account_division_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="account_division_template_uid" type="text" />
			<column name="division_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="account_division_template_uid_account_division_template_name" type="text" />
			<column name="account_division_template_uid_division_description" type="text" />
		</view>
		<view name="v_rich_account_division_template" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT account_division_template_uid,
    account_division_template_name,
    division_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM account_division_template]]></view_script>
			<column name="account_division_template_uid" type="text" />
			<column name="account_division_template_name" type="text" />
			<column name="division_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_account_group" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_account_group AS SELECT ${view},
    account_group.account_group_name,
    account_group.tenant_uid,
    account_group.account_group_description,
    account_group.row_instance,
    account_group.row_lock,
    account_group.row_owner,
    account_group.row_seq,
    account_group.row_guid,
    account_group.row_version,
    account_group.is_active,
    account_group.created_date,
    account_group.created_by,
    account_group.last_updated_date,
    account_group.last_updated_by,
    account_group.removed_date,
    account_group.removed_by,
    account_group.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid
   FROM (account_group
     LEFT JOIN tenant _tenant_uid ON ((account_group.tenant_uid = _tenant_uid.tenant_uid)))]]></view_script>
			<column name="account_group_uid" type="text" />
			<column name="account_group_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_group_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
		</view>
		<view name="v_rich_account_hierarchy" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_account_hierarchy AS SELECT ${view},
    account_hierarchy.account_hierarchy_name,
    account_hierarchy.tenant_uid,
    account_hierarchy.parent_account_uid,
    account_hierarchy.child_account_uid,
    account_hierarchy.row_instance,
    account_hierarchy.row_lock,
    account_hierarchy.row_owner,
    account_hierarchy.row_seq,
    account_hierarchy.row_guid,
    account_hierarchy.row_version,
    account_hierarchy.is_active,
    account_hierarchy.created_date,
    account_hierarchy.created_by,
    account_hierarchy.last_updated_date,
    account_hierarchy.last_updated_by,
    account_hierarchy.removed_date,
    account_hierarchy.removed_by,
    account_hierarchy.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _parent_account_uid.account_name AS parent_account_uid_account_name,
    _parent_account_uid.tenant_uid AS parent_account_uid_tenant_uid,
    _parent_account_uid.account_type_uid AS parent_account_uid_account_type_uid,
    _parent_account_uid.account_title_uid AS parent_account_uid_account_title_uid,
    _parent_account_uid.account_division_uid AS parent_account_uid_account_division_uid,
    _parent_account_uid.account_group_uid AS parent_account_uid_account_group_uid,
    _parent_account_uid.auth_identity_uid AS parent_account_uid_auth_identity_uid,
    _parent_account_uid.account_email AS parent_account_uid_account_email,
    _parent_account_uid.display_name AS parent_account_uid_display_name,
    _parent_account_uid.is_system AS parent_account_uid_is_system,
    _child_account_uid.account_name AS child_account_uid_account_name,
    _child_account_uid.tenant_uid AS child_account_uid_tenant_uid,
    _child_account_uid.account_type_uid AS child_account_uid_account_type_uid,
    _child_account_uid.account_title_uid AS child_account_uid_account_title_uid,
    _child_account_uid.account_division_uid AS child_account_uid_account_division_uid,
    _child_account_uid.account_group_uid AS child_account_uid_account_group_uid,
    _child_account_uid.auth_identity_uid AS child_account_uid_auth_identity_uid,
    _child_account_uid.account_email AS child_account_uid_account_email,
    _child_account_uid.display_name AS child_account_uid_display_name,
    _child_account_uid.is_system AS child_account_uid_is_system
   FROM (((account_hierarchy
     LEFT JOIN tenant _tenant_uid ON ((account_hierarchy.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _parent_account_uid ON ((account_hierarchy.parent_account_uid = _parent_account_uid.account_uid)))
     LEFT JOIN account _child_account_uid ON ((account_hierarchy.child_account_uid = _child_account_uid.account_uid)))]]></view_script>
			<column name="account_hierarchy_uid" type="text" />
			<column name="account_hierarchy_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="parent_account_uid" type="text" />
			<column name="child_account_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="parent_account_uid_account_name" type="text" />
			<column name="parent_account_uid_tenant_uid" type="text" />
			<column name="parent_account_uid_account_type_uid" type="text" />
			<column name="parent_account_uid_account_title_uid" type="text" />
			<column name="parent_account_uid_account_division_uid" type="text" />
			<column name="parent_account_uid_account_group_uid" type="text" />
			<column name="parent_account_uid_auth_identity_uid" type="text" />
			<column name="parent_account_uid_account_email" type="text" />
			<column name="parent_account_uid_display_name" type="text" />
			<column name="parent_account_uid_is_system" type="bigint" />
			<column name="child_account_uid_account_name" type="text" />
			<column name="child_account_uid_tenant_uid" type="text" />
			<column name="child_account_uid_account_type_uid" type="text" />
			<column name="child_account_uid_account_title_uid" type="text" />
			<column name="child_account_uid_account_division_uid" type="text" />
			<column name="child_account_uid_account_group_uid" type="text" />
			<column name="child_account_uid_auth_identity_uid" type="text" />
			<column name="child_account_uid_account_email" type="text" />
			<column name="child_account_uid_display_name" type="text" />
			<column name="child_account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_account_rate" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_account_rate AS SELECT ${view},
    account_rate.account_rate_name,
    account_rate.tenant_uid,
    account_rate.account_uid,
    account_rate.currency_uid,
    account_rate.rate,
    account_rate.start_date,
    account_rate.end_date,
    account_rate.row_instance,
    account_rate.row_lock,
    account_rate.row_owner,
    account_rate.row_seq,
    account_rate.row_guid,
    account_rate.row_version,
    account_rate.is_active,
    account_rate.created_date,
    account_rate.created_by,
    account_rate.last_updated_date,
    account_rate.last_updated_by,
    account_rate.removed_date,
    account_rate.removed_by,
    account_rate.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _currency_uid.currency_name AS currency_uid_currency_name,
    _currency_uid.is_focused AS currency_uid_is_focused
   FROM (((account_rate
     LEFT JOIN tenant _tenant_uid ON ((account_rate.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((account_rate.account_uid = _account_uid.account_uid)))
     LEFT JOIN currency _currency_uid ON ((account_rate.currency_uid = _currency_uid.currency_uid)))]]></view_script>
			<column name="account_rate_uid" type="text" />
			<column name="account_rate_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="currency_uid" type="text" />
			<column name="rate" type="double precision" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="currency_uid_currency_name" type="text" />
			<column name="currency_uid_is_focused" type="bigint" />
		</view>
		<view name="v_rich_account_skill" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT account_skill_uid,
    account_skill_name,
    account_skill_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM account_skill]]></view_script>
			<column name="account_skill_uid" type="text" />
			<column name="account_skill_name" type="text" />
			<column name="account_skill_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_account_team" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_account_team AS SELECT ${view},
    account_team.account_team_name,
    account_team.tenant_uid,
    account_team.owner_account_uid,
    account_team.is_public,
    account_team.is_tenant,
    account_team.is_private,
    account_team.row_instance,
    account_team.row_lock,
    account_team.row_owner,
    account_team.row_seq,
    account_team.row_guid,
    account_team.row_version,
    account_team.is_active,
    account_team.created_date,
    account_team.created_by,
    account_team.last_updated_date,
    account_team.last_updated_by,
    account_team.removed_date,
    account_team.removed_by,
    account_team.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _owner_account_uid.account_name AS owner_account_uid_account_name,
    _owner_account_uid.tenant_uid AS owner_account_uid_tenant_uid,
    _owner_account_uid.account_type_uid AS owner_account_uid_account_type_uid,
    _owner_account_uid.account_title_uid AS owner_account_uid_account_title_uid,
    _owner_account_uid.account_division_uid AS owner_account_uid_account_division_uid,
    _owner_account_uid.account_group_uid AS owner_account_uid_account_group_uid,
    _owner_account_uid.auth_identity_uid AS owner_account_uid_auth_identity_uid,
    _owner_account_uid.account_email AS owner_account_uid_account_email,
    _owner_account_uid.display_name AS owner_account_uid_display_name,
    _owner_account_uid.is_system AS owner_account_uid_is_system
   FROM ((account_team
     LEFT JOIN tenant _tenant_uid ON ((account_team.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _owner_account_uid ON ((account_team.owner_account_uid = _owner_account_uid.account_uid)))]]></view_script>
			<column name="account_team_uid" type="text" />
			<column name="account_team_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="owner_account_uid" type="text" />
			<column name="is_public" type="bigint" />
			<column name="is_tenant" type="bigint" />
			<column name="is_private" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="owner_account_uid_account_name" type="text" />
			<column name="owner_account_uid_tenant_uid" type="text" />
			<column name="owner_account_uid_account_type_uid" type="text" />
			<column name="owner_account_uid_account_title_uid" type="text" />
			<column name="owner_account_uid_account_division_uid" type="text" />
			<column name="owner_account_uid_account_group_uid" type="text" />
			<column name="owner_account_uid_auth_identity_uid" type="text" />
			<column name="owner_account_uid_account_email" type="text" />
			<column name="owner_account_uid_display_name" type="text" />
			<column name="owner_account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_account_title" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT account_title_uid,
    account_title_name,
    title_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM account_title]]></view_script>
			<column name="account_title_uid" type="text" />
			<column name="account_title_name" type="text" />
			<column name="title_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_account_title_responsibility" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_account_title_responsibility AS SELECT ${view},
    account_title_responsibility.account_title_responsibility_name,
    account_title_responsibility.tenant_uid,
    account_title_responsibility.account_title_uid,
    account_title_responsibility.responsibility_description,
    account_title_responsibility.responsibility_priority,
    account_title_responsibility.row_instance,
    account_title_responsibility.row_lock,
    account_title_responsibility.row_owner,
    account_title_responsibility.row_seq,
    account_title_responsibility.row_guid,
    account_title_responsibility.row_version,
    account_title_responsibility.is_active,
    account_title_responsibility.created_date,
    account_title_responsibility.created_by,
    account_title_responsibility.last_updated_date,
    account_title_responsibility.last_updated_by,
    account_title_responsibility.removed_date,
    account_title_responsibility.removed_by,
    account_title_responsibility.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_title_uid.account_title_name AS account_title_uid_account_title_name,
    _account_title_uid.title_description AS account_title_uid_title_description
   FROM ((account_title_responsibility
     LEFT JOIN tenant _tenant_uid ON ((account_title_responsibility.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account_title _account_title_uid ON ((account_title_responsibility.account_title_uid = _account_title_uid.account_title_uid)))]]></view_script>
			<column name="account_title_responsibility_uid" type="text" />
			<column name="account_title_responsibility_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_title_uid" type="text" />
			<column name="responsibility_description" type="text" />
			<column name="responsibility_priority" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_title_uid_account_title_name" type="text" />
			<column name="account_title_uid_title_description" type="text" />
		</view>
		<view name="v_rich_account_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT account_type_uid,
    account_type_name,
    account_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM account_type]]></view_script>
			<column name="account_type_uid" type="text" />
			<column name="account_type_name" type="text" />
			<column name="account_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_audit_change" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_audit_change AS SELECT ${view},
    audit_change.system_change_name,
    audit_change.account_uid,
    audit_change.audit_type_uid,
    audit_change.change_type,
    audit_change.change_json,
    audit_change.row_instance,
    audit_change.row_lock,
    audit_change.row_owner,
    audit_change.row_seq,
    audit_change.row_guid,
    audit_change.row_version,
    audit_change.is_active,
    audit_change.created_date,
    audit_change.created_by,
    audit_change.last_updated_date,
    audit_change.last_updated_by,
    audit_change.removed_date,
    audit_change.removed_by,
    audit_change.custom_attributes,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _audit_type_uid.audit_type_name AS audit_type_uid_audit_type_name
   FROM ((audit_change
     LEFT JOIN account _account_uid ON ((audit_change.account_uid = _account_uid.account_uid)))
     LEFT JOIN audit_type _audit_type_uid ON ((audit_change.audit_type_uid = _audit_type_uid.audit_type_uid)))]]></view_script>
			<column name="system_change_uid" type="text" />
			<column name="system_change_name" type="text" />
			<column name="account_uid" type="text" />
			<column name="audit_type_uid" type="text" />
			<column name="change_type" type="text" />
			<column name="change_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="audit_type_uid_audit_type_name" type="text" />
		</view>
		<view name="v_rich_audit_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT audit_type_uid,
    audit_type_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM audit_type]]></view_script>
			<column name="audit_type_uid" type="text" />
			<column name="audit_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_auth_attempt" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_attempt AS SELECT ${view},
    auth_attempt.auth_attempt_name,
    auth_attempt.tenant_uid,
    auth_attempt.account_uid,
    auth_attempt.account_login,
    auth_attempt.identity_type,
    auth_attempt.identity_parameters,
    auth_attempt.last_status_name,
    auth_attempt.row_instance,
    auth_attempt.row_lock,
    auth_attempt.row_owner,
    auth_attempt.row_seq,
    auth_attempt.row_guid,
    auth_attempt.row_version,
    auth_attempt.is_active,
    auth_attempt.created_date,
    auth_attempt.created_by,
    auth_attempt.last_updated_date,
    auth_attempt.last_updated_by,
    auth_attempt.removed_date,
    auth_attempt.removed_by,
    auth_attempt.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((auth_attempt
     LEFT JOIN tenant _tenant_uid ON ((auth_attempt.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((auth_attempt.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="auth_attempt_uid" type="text" />
			<column name="auth_attempt_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="account_login" type="text" />
			<column name="identity_type" type="text" />
			<column name="identity_parameters" type="text" />
			<column name="last_status_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_auth_identity" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT auth_identity_uid,
    auth_identity_name,
    class_name,
    default_parameters_json,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM auth_identity]]></view_script>
			<column name="auth_identity_uid" type="text" />
			<column name="auth_identity_name" type="text" />
			<column name="class_name" type="text" />
			<column name="default_parameters_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_auth_identity_tenant" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_identity_tenant AS SELECT ${view},
    auth_identity_tenant.auth_identity_tenant_name,
    auth_identity_tenant.tenant_uid,
    auth_identity_tenant.auth_identity_uid,
    auth_identity_tenant.auth_sso_uid,
    auth_identity_tenant.identity_parameters_json,
    auth_identity_tenant.last_status_name,
    auth_identity_tenant.row_instance,
    auth_identity_tenant.row_lock,
    auth_identity_tenant.row_owner,
    auth_identity_tenant.row_seq,
    auth_identity_tenant.row_guid,
    auth_identity_tenant.row_version,
    auth_identity_tenant.is_active,
    auth_identity_tenant.created_date,
    auth_identity_tenant.created_by,
    auth_identity_tenant.last_updated_date,
    auth_identity_tenant.last_updated_by,
    auth_identity_tenant.removed_date,
    auth_identity_tenant.removed_by,
    auth_identity_tenant.custom_attributes,
    _auth_identity_tenant_uid.tenant_name AS auth_identity_tenant_uid_tenant_name,
    _auth_identity_tenant_uid.country_uid AS auth_identity_tenant_uid_country_uid,
    _auth_identity_tenant_uid.tenant_type_uid AS auth_identity_tenant_uid_tenant_type_uid,
    _auth_identity_tenant_uid.tenant_category_uid AS auth_identity_tenant_uid_tenant_category_uid,
    _auth_identity_tenant_uid.tenant_code AS auth_identity_tenant_uid_tenant_code,
    _auth_identity_tenant_uid.tenant_description AS auth_identity_tenant_uid_tenant_description,
    _auth_identity_tenant_uid.start_date AS auth_identity_tenant_uid_start_date,
    _auth_identity_tenant_uid.end_date AS auth_identity_tenant_uid_end_date,
    _auth_identity_tenant_uid.is_internal AS auth_identity_tenant_uid_is_internal,
    _auth_identity_tenant_uid.is_system AS auth_identity_tenant_uid_is_system,
    _auth_identity_tenant_uid.is_test AS auth_identity_tenant_uid_is_test,
    _auth_identity_tenant_uid.account_uid AS auth_identity_tenant_uid_account_uid,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _auth_identity_uid.auth_identity_name AS auth_identity_uid_auth_identity_name,
    _auth_identity_uid.class_name AS auth_identity_uid_class_name,
    _auth_identity_uid.default_parameters_json AS auth_identity_uid_default_parameters_json,
    _auth_sso_uid.auth_sso_name AS auth_sso_uid_auth_sso_name,
    _auth_sso_uid.tenant_uid AS auth_sso_uid_tenant_uid,
    _auth_sso_uid.owner_account_uid AS auth_sso_uid_owner_account_uid,
    _auth_sso_uid.sso_name AS auth_sso_uid_sso_name,
    _auth_sso_uid.sso_url AS auth_sso_uid_sso_url,
    _auth_sso_uid.sso_key AS auth_sso_uid_sso_key,
    _auth_sso_uid.sso_secret AS auth_sso_uid_sso_secret,
    _auth_sso_uid.sso_code AS auth_sso_uid_sso_code,
    _auth_sso_uid.clientid AS auth_sso_uid_clientid,
    _auth_sso_uid.clientsecret AS auth_sso_uid_clientsecret,
    _auth_sso_uid.callback_url AS auth_sso_uid_callback_url
   FROM ((((auth_identity_tenant
     LEFT JOIN tenant _auth_identity_tenant_uid ON ((${view} = _auth_identity_tenant_uid.tenant_uid)))
     LEFT JOIN tenant _tenant_uid ON ((auth_identity_tenant.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN auth_identity _auth_identity_uid ON ((auth_identity_tenant.auth_identity_uid = _auth_identity_uid.auth_identity_uid)))
     LEFT JOIN auth_sso _auth_sso_uid ON ((auth_identity_tenant.auth_sso_uid = _auth_sso_uid.auth_sso_uid)))]]></view_script>
			<column name="auth_identity_tenant_uid" type="text" />
			<column name="auth_identity_tenant_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="auth_identity_uid" type="text" />
			<column name="auth_sso_uid" type="text" />
			<column name="identity_parameters_json" type="text" />
			<column name="last_status_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="auth_identity_tenant_uid_tenant_name" type="text" />
			<column name="auth_identity_tenant_uid_country_uid" type="text" />
			<column name="auth_identity_tenant_uid_tenant_type_uid" type="text" />
			<column name="auth_identity_tenant_uid_tenant_category_uid" type="text" />
			<column name="auth_identity_tenant_uid_tenant_code" type="text" />
			<column name="auth_identity_tenant_uid_tenant_description" type="text" />
			<column name="auth_identity_tenant_uid_start_date" type="timestamp" />
			<column name="auth_identity_tenant_uid_end_date" type="timestamp" />
			<column name="auth_identity_tenant_uid_is_internal" type="bigint" />
			<column name="auth_identity_tenant_uid_is_system" type="bigint" />
			<column name="auth_identity_tenant_uid_is_test" type="bigint" />
			<column name="auth_identity_tenant_uid_account_uid" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="auth_identity_uid_auth_identity_name" type="text" />
			<column name="auth_identity_uid_class_name" type="text" />
			<column name="auth_identity_uid_default_parameters_json" type="text" />
			<column name="auth_sso_uid_auth_sso_name" type="text" />
			<column name="auth_sso_uid_tenant_uid" type="text" />
			<column name="auth_sso_uid_owner_account_uid" type="text" />
			<column name="auth_sso_uid_sso_name" type="text" />
			<column name="auth_sso_uid_sso_url" type="text" />
			<column name="auth_sso_uid_sso_key" type="text" />
			<column name="auth_sso_uid_sso_secret" type="text" />
			<column name="auth_sso_uid_sso_code" type="text" />
			<column name="auth_sso_uid_clientid" type="text" />
			<column name="auth_sso_uid_clientsecret" type="text" />
			<column name="auth_sso_uid_callback_url" type="text" />
		</view>
		<view name="v_rich_auth_key" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_key AS SELECT ${view},
    auth_key.auth_key_name,
    auth_key.tenant_uid,
    auth_key.owner_account_uid,
    auth_key.auth_key_type_uid,
    auth_key.key_private,
    auth_key.key_public,
    auth_key.key_length,
    auth_key.key_exponent,
    auth_key.key_modulus,
    auth_key.key_parameters_json,
    auth_key.row_instance,
    auth_key.row_lock,
    auth_key.row_owner,
    auth_key.row_seq,
    auth_key.row_guid,
    auth_key.row_version,
    auth_key.is_active,
    auth_key.created_date,
    auth_key.created_by,
    auth_key.last_updated_date,
    auth_key.last_updated_by,
    auth_key.removed_date,
    auth_key.removed_by,
    auth_key.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _owner_account_uid.account_name AS owner_account_uid_account_name,
    _owner_account_uid.tenant_uid AS owner_account_uid_tenant_uid,
    _owner_account_uid.account_type_uid AS owner_account_uid_account_type_uid,
    _owner_account_uid.account_title_uid AS owner_account_uid_account_title_uid,
    _owner_account_uid.account_division_uid AS owner_account_uid_account_division_uid,
    _owner_account_uid.account_group_uid AS owner_account_uid_account_group_uid,
    _owner_account_uid.auth_identity_uid AS owner_account_uid_auth_identity_uid,
    _owner_account_uid.account_email AS owner_account_uid_account_email,
    _owner_account_uid.display_name AS owner_account_uid_display_name,
    _owner_account_uid.is_system AS owner_account_uid_is_system,
    _auth_key_type_uid.auth_key_type_name AS auth_key_type_uid_auth_key_type_name,
    _auth_key_type_uid.class_name AS auth_key_type_uid_class_name
   FROM (((auth_key
     LEFT JOIN tenant _tenant_uid ON ((auth_key.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _owner_account_uid ON ((auth_key.owner_account_uid = _owner_account_uid.account_uid)))
     LEFT JOIN auth_key_type _auth_key_type_uid ON ((auth_key.auth_key_type_uid = _auth_key_type_uid.auth_key_type_uid)))]]></view_script>
			<column name="auth_key_uid" type="text" />
			<column name="auth_key_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="owner_account_uid" type="text" />
			<column name="auth_key_type_uid" type="text" />
			<column name="key_private" type="text" />
			<column name="key_public" type="text" />
			<column name="key_length" type="bigint" />
			<column name="key_exponent" type="text" />
			<column name="key_modulus" type="text" />
			<column name="key_parameters_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="owner_account_uid_account_name" type="text" />
			<column name="owner_account_uid_tenant_uid" type="text" />
			<column name="owner_account_uid_account_type_uid" type="text" />
			<column name="owner_account_uid_account_title_uid" type="text" />
			<column name="owner_account_uid_account_division_uid" type="text" />
			<column name="owner_account_uid_account_group_uid" type="text" />
			<column name="owner_account_uid_auth_identity_uid" type="text" />
			<column name="owner_account_uid_account_email" type="text" />
			<column name="owner_account_uid_display_name" type="text" />
			<column name="owner_account_uid_is_system" type="bigint" />
			<column name="auth_key_type_uid_auth_key_type_name" type="text" />
			<column name="auth_key_type_uid_class_name" type="text" />
		</view>
		<view name="v_rich_auth_key_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT auth_key_type_uid,
    auth_key_type_name,
    class_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM auth_key_type]]></view_script>
			<column name="auth_key_type_uid" type="text" />
			<column name="auth_key_type_name" type="text" />
			<column name="class_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_auth_password" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_password AS SELECT ${view},
    auth_password.auth_password_name,
    auth_password.tenant_uid,
    auth_password.account_uid,
    auth_password.password_hash,
    auth_password.password_salt,
    auth_password.date_from,
    auth_password.date_to,
    auth_password.usage_count,
    auth_password.row_instance,
    auth_password.row_lock,
    auth_password.row_owner,
    auth_password.row_seq,
    auth_password.row_guid,
    auth_password.row_version,
    auth_password.is_active,
    auth_password.created_date,
    auth_password.created_by,
    auth_password.last_updated_date,
    auth_password.last_updated_by,
    auth_password.removed_date,
    auth_password.removed_by,
    auth_password.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((auth_password
     LEFT JOIN tenant _tenant_uid ON ((auth_password.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((auth_password.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="auth_password_uid" type="text" />
			<column name="auth_password_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="password_hash" type="text" />
			<column name="password_salt" type="text" />
			<column name="date_from" type="timestamp" />
			<column name="date_to" type="timestamp" />
			<column name="usage_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_auth_password_current" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_password_current AS SELECT ${view},
    auth_password_current.auth_password_current_name,
    auth_password_current.tenant_uid,
    auth_password_current.account_uid,
    auth_password_current.password_hash,
    auth_password_current.password_salt,
    auth_password_current.date_from,
    auth_password_current.date_to,
    auth_password_current.usage_count,
    auth_password_current.row_instance,
    auth_password_current.row_lock,
    auth_password_current.row_owner,
    auth_password_current.row_seq,
    auth_password_current.row_guid,
    auth_password_current.row_version,
    auth_password_current.is_active,
    auth_password_current.created_date,
    auth_password_current.created_by,
    auth_password_current.last_updated_date,
    auth_password_current.last_updated_by,
    auth_password_current.removed_date,
    auth_password_current.removed_by,
    auth_password_current.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((auth_password_current
     LEFT JOIN tenant _tenant_uid ON ((auth_password_current.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((auth_password_current.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="auth_password_current_uid" type="text" />
			<column name="auth_password_current_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="password_hash" type="text" />
			<column name="password_salt" type="text" />
			<column name="date_from" type="timestamp" />
			<column name="date_to" type="timestamp" />
			<column name="usage_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_auth_password_rule" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_password_rule AS SELECT ${view},
    auth_password_rule.auth_password_name,
    auth_password_rule.rule_type,
    auth_password_rule.rule_parameters,
    auth_password_rule.user_scope,
    auth_password_rule.row_instance,
    auth_password_rule.row_lock,
    auth_password_rule.row_owner,
    auth_password_rule.row_seq,
    auth_password_rule.row_guid,
    auth_password_rule.row_version,
    auth_password_rule.is_active,
    auth_password_rule.created_date,
    auth_password_rule.created_by,
    auth_password_rule.last_updated_date,
    auth_password_rule.last_updated_by,
    auth_password_rule.removed_date,
    auth_password_rule.removed_by,
    auth_password_rule.custom_attributes,
    _auth_password_uid.auth_password_name AS auth_password_uid_auth_password_name,
    _auth_password_uid.tenant_uid AS auth_password_uid_tenant_uid,
    _auth_password_uid.account_uid AS auth_password_uid_account_uid,
    _auth_password_uid.password_hash AS auth_password_uid_password_hash,
    _auth_password_uid.password_salt AS auth_password_uid_password_salt,
    _auth_password_uid.date_from AS auth_password_uid_date_from,
    _auth_password_uid.date_to AS auth_password_uid_date_to,
    _auth_password_uid.usage_count AS auth_password_uid_usage_count
   FROM (auth_password_rule
     LEFT JOIN auth_password _auth_password_uid ON ((${view} = _auth_password_uid.auth_password_uid)))]]></view_script>
			<column name="auth_password_uid" type="text" />
			<column name="auth_password_name" type="text" />
			<column name="rule_type" type="bigint" />
			<column name="rule_parameters" type="text" />
			<column name="user_scope" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="auth_password_uid_auth_password_name" type="text" />
			<column name="auth_password_uid_tenant_uid" type="text" />
			<column name="auth_password_uid_account_uid" type="text" />
			<column name="auth_password_uid_password_hash" type="text" />
			<column name="auth_password_uid_password_salt" type="text" />
			<column name="auth_password_uid_date_from" type="timestamp" />
			<column name="auth_password_uid_date_to" type="timestamp" />
			<column name="auth_password_uid_usage_count" type="bigint" />
		</view>
		<view name="v_rich_auth_permission" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_permission AS SELECT ${view},
    auth_permission.auth_permission_name,
    auth_permission.tenant_uid,
    auth_permission.account_uid,
    auth_permission.auth_role_uid,
    auth_permission.client_uid,
    auth_permission.project_instance_uid,
    auth_permission.valid_from_date,
    auth_permission.valid_till_date,
    auth_permission.row_instance,
    auth_permission.row_lock,
    auth_permission.row_owner,
    auth_permission.row_seq,
    auth_permission.row_guid,
    auth_permission.row_version,
    auth_permission.is_active,
    auth_permission.created_date,
    auth_permission.created_by,
    auth_permission.last_updated_date,
    auth_permission.last_updated_by,
    auth_permission.removed_date,
    auth_permission.removed_by,
    auth_permission.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _auth_role_uid.auth_role_name AS auth_role_uid_auth_role_name,
    _auth_role_uid.parent_auth_role_uid AS auth_role_uid_parent_auth_role_uid,
    _auth_role_uid.tenant_uid AS auth_role_uid_tenant_uid,
    _auth_role_uid.role_description AS auth_role_uid_role_description,
    _auth_role_uid.access_uris AS auth_role_uid_access_uris,
    _auth_role_uid.is_project AS auth_role_uid_is_project,
    _auth_role_uid.is_tenant AS auth_role_uid_is_tenant,
    _auth_role_uid.is_client AS auth_role_uid_is_client,
    _auth_role_uid.is_custom AS auth_role_uid_is_custom,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _project_instance_uid.project_instance_name AS project_instance_uid_project_instance_name,
    _project_instance_uid.tenant_uid AS project_instance_uid_tenant_uid,
    _project_instance_uid.client_uid AS project_instance_uid_client_uid,
    _project_instance_uid.project_type_uid AS project_instance_uid_project_type_uid,
    _project_instance_uid.manager_account_uid AS project_instance_uid_manager_account_uid,
    _project_instance_uid.project_group_uid AS project_instance_uid_project_group_uid,
    _project_instance_uid.project_code AS project_instance_uid_project_code,
    _project_instance_uid.project_description AS project_instance_uid_project_description,
    _project_instance_uid.is_billable AS project_instance_uid_is_billable,
    _project_instance_uid.start_date AS project_instance_uid_start_date,
    _project_instance_uid.end_date AS project_instance_uid_end_date,
    _project_instance_uid.current_billed AS project_instance_uid_current_billed,
    _project_instance_uid.budget AS project_instance_uid_budget
   FROM (((((auth_permission
     LEFT JOIN tenant _tenant_uid ON ((auth_permission.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((auth_permission.account_uid = _account_uid.account_uid)))
     LEFT JOIN auth_role _auth_role_uid ON ((auth_permission.auth_role_uid = _auth_role_uid.auth_role_uid)))
     LEFT JOIN client _client_uid ON ((auth_permission.client_uid = _client_uid.client_uid)))
     LEFT JOIN project_instance _project_instance_uid ON ((auth_permission.project_instance_uid = _project_instance_uid.project_instance_uid)))]]></view_script>
			<column name="auth_permission_uid" type="text" />
			<column name="auth_permission_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="auth_role_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="project_instance_uid" type="text" />
			<column name="valid_from_date" type="timestamp" />
			<column name="valid_till_date" type="timestamp" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="auth_role_uid_auth_role_name" type="text" />
			<column name="auth_role_uid_parent_auth_role_uid" type="text" />
			<column name="auth_role_uid_tenant_uid" type="text" />
			<column name="auth_role_uid_role_description" type="text" />
			<column name="auth_role_uid_access_uris" type="text" />
			<column name="auth_role_uid_is_project" type="bigint" />
			<column name="auth_role_uid_is_tenant" type="bigint" />
			<column name="auth_role_uid_is_client" type="bigint" />
			<column name="auth_role_uid_is_custom" type="bigint" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="project_instance_uid_project_instance_name" type="text" />
			<column name="project_instance_uid_tenant_uid" type="text" />
			<column name="project_instance_uid_client_uid" type="text" />
			<column name="project_instance_uid_project_type_uid" type="text" />
			<column name="project_instance_uid_manager_account_uid" type="text" />
			<column name="project_instance_uid_project_group_uid" type="text" />
			<column name="project_instance_uid_project_code" type="text" />
			<column name="project_instance_uid_project_description" type="text" />
			<column name="project_instance_uid_is_billable" type="bigint" />
			<column name="project_instance_uid_start_date" type="timestamp" />
			<column name="project_instance_uid_end_date" type="timestamp" />
			<column name="project_instance_uid_current_billed" type="double precision" />
			<column name="project_instance_uid_budget" type="double precision" />
		</view>
		<view name="v_rich_auth_request" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_request AS SELECT ${view},
    auth_request.auth_request_name,
    auth_request.tenant_uid,
    auth_request.account_uid,
    auth_request.requestor_email,
    auth_request.reset_guid,
    auth_request.valid_till_date,
    auth_request.lock_guid,
    auth_request.lock_by,
    auth_request.lock_date,
    auth_request.is_checked,
    auth_request.is_used,
    auth_request.check_date,
    auth_request.use_date,
    auth_request.event_notification_uid,
    auth_request.row_instance,
    auth_request.row_lock,
    auth_request.row_owner,
    auth_request.row_seq,
    auth_request.row_guid,
    auth_request.row_version,
    auth_request.is_active,
    auth_request.created_date,
    auth_request.created_by,
    auth_request.last_updated_date,
    auth_request.last_updated_by,
    auth_request.removed_date,
    auth_request.removed_by,
    auth_request.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _event_notification_uid.event_notification_name AS event_notification_uid_event_notification_name,
    _event_notification_uid.tenant_uid AS event_notification_uid_tenant_uid,
    _event_notification_uid.account_uid AS event_notification_uid_account_uid,
    _event_notification_uid.notification_type AS event_notification_uid_notification_type,
    _event_notification_uid.notification_topic AS event_notification_uid_notification_topic,
    _event_notification_uid.notification_format AS event_notification_uid_notification_format,
    _event_notification_uid.notification_content AS event_notification_uid_notification_content,
    _event_notification_uid.sending_status AS event_notification_uid_sending_status
   FROM (((auth_request
     LEFT JOIN tenant _tenant_uid ON ((auth_request.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((auth_request.account_uid = _account_uid.account_uid)))
     LEFT JOIN event_notification _event_notification_uid ON ((auth_request.event_notification_uid = _event_notification_uid.event_notification_uid)))]]></view_script>
			<column name="auth_request_uid" type="text" />
			<column name="auth_request_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="requestor_email" type="text" />
			<column name="reset_guid" type="text" />
			<column name="valid_till_date" type="timestamp" />
			<column name="lock_guid" type="text" />
			<column name="lock_by" type="text" />
			<column name="lock_date" type="timestamp" />
			<column name="is_checked" type="bigint" />
			<column name="is_used" type="bigint" />
			<column name="check_date" type="timestamp" />
			<column name="use_date" type="timestamp" />
			<column name="event_notification_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="event_notification_uid_event_notification_name" type="text" />
			<column name="event_notification_uid_tenant_uid" type="text" />
			<column name="event_notification_uid_account_uid" type="text" />
			<column name="event_notification_uid_notification_type" type="text" />
			<column name="event_notification_uid_notification_topic" type="text" />
			<column name="event_notification_uid_notification_format" type="text" />
			<column name="event_notification_uid_notification_content" type="text" />
			<column name="event_notification_uid_sending_status" type="text" />
		</view>
		<view name="v_rich_auth_role" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_role AS SELECT ${view},
    auth_role.auth_role_name,
    auth_role.parent_auth_role_uid,
    auth_role.tenant_uid,
    auth_role.role_description,
    auth_role.access_uris,
    auth_role.is_project,
    auth_role.is_tenant,
    auth_role.is_client,
    auth_role.is_custom,
    auth_role.row_instance,
    auth_role.row_lock,
    auth_role.row_owner,
    auth_role.row_seq,
    auth_role.row_guid,
    auth_role.row_version,
    auth_role.is_active,
    auth_role.created_date,
    auth_role.created_by,
    auth_role.last_updated_date,
    auth_role.last_updated_by,
    auth_role.removed_date,
    auth_role.removed_by,
    auth_role.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid
   FROM (auth_role
     LEFT JOIN tenant _tenant_uid ON ((auth_role.tenant_uid = _tenant_uid.tenant_uid)))]]></view_script>
			<column name="auth_role_uid" type="text" />
			<column name="auth_role_name" type="text" />
			<column name="parent_auth_role_uid" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="role_description" type="text" />
			<column name="access_uris" type="text" />
			<column name="is_project" type="bigint" />
			<column name="is_tenant" type="bigint" />
			<column name="is_client" type="bigint" />
			<column name="is_custom" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
		</view>
		<view name="v_rich_auth_role_uri" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_role_uri AS SELECT ${view},
    auth_role_uri.auth_role_uri_name,
    auth_role_uri.auth_role_uid,
    auth_role_uri.uri,
    auth_role_uri.row_instance,
    auth_role_uri.row_lock,
    auth_role_uri.row_owner,
    auth_role_uri.row_seq,
    auth_role_uri.row_guid,
    auth_role_uri.row_version,
    auth_role_uri.is_active,
    auth_role_uri.created_date,
    auth_role_uri.created_by,
    auth_role_uri.last_updated_date,
    auth_role_uri.last_updated_by,
    auth_role_uri.removed_date,
    auth_role_uri.removed_by,
    auth_role_uri.custom_attributes,
    _auth_role_uid.auth_role_name AS auth_role_uid_auth_role_name,
    _auth_role_uid.parent_auth_role_uid AS auth_role_uid_parent_auth_role_uid,
    _auth_role_uid.tenant_uid AS auth_role_uid_tenant_uid,
    _auth_role_uid.role_description AS auth_role_uid_role_description,
    _auth_role_uid.access_uris AS auth_role_uid_access_uris,
    _auth_role_uid.is_project AS auth_role_uid_is_project,
    _auth_role_uid.is_tenant AS auth_role_uid_is_tenant,
    _auth_role_uid.is_client AS auth_role_uid_is_client,
    _auth_role_uid.is_custom AS auth_role_uid_is_custom
   FROM (auth_role_uri
     LEFT JOIN auth_role _auth_role_uid ON ((auth_role_uri.auth_role_uid = _auth_role_uid.auth_role_uid)))]]></view_script>
			<column name="auth_role_uri_uid" type="text" />
			<column name="auth_role_uri_name" type="text" />
			<column name="auth_role_uid" type="text" />
			<column name="uri" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="auth_role_uid_auth_role_name" type="text" />
			<column name="auth_role_uid_parent_auth_role_uid" type="text" />
			<column name="auth_role_uid_tenant_uid" type="text" />
			<column name="auth_role_uid_role_description" type="text" />
			<column name="auth_role_uid_access_uris" type="text" />
			<column name="auth_role_uid_is_project" type="bigint" />
			<column name="auth_role_uid_is_tenant" type="bigint" />
			<column name="auth_role_uid_is_client" type="bigint" />
			<column name="auth_role_uid_is_custom" type="bigint" />
		</view>
		<view name="v_rich_auth_session" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_session AS SELECT ${view},
    auth_session.auth_session_name,
    auth_session.tenant_uid,
    auth_session.account_uid,
    auth_session.session_token,
    auth_session.browser_name,
    auth_session.browser_,
    auth_session.row_instance,
    auth_session.row_lock,
    auth_session.row_owner,
    auth_session.row_seq,
    auth_session.row_guid,
    auth_session.row_version,
    auth_session.is_active,
    auth_session.created_date,
    auth_session.created_by,
    auth_session.last_updated_date,
    auth_session.last_updated_by,
    auth_session.removed_date,
    auth_session.removed_by,
    auth_session.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((auth_session
     LEFT JOIN tenant _tenant_uid ON ((auth_session.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((auth_session.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="auth_session_uid" type="text" />
			<column name="auth_session_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="session_token" type="text" />
			<column name="browser_name" type="text" />
			<column name="browser_" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_auth_sso" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_sso AS SELECT ${view},
    auth_sso.auth_sso_name,
    auth_sso.tenant_uid,
    auth_sso.owner_account_uid,
    auth_sso.sso_name,
    auth_sso.sso_url,
    auth_sso.sso_key,
    auth_sso.sso_secret,
    auth_sso.sso_code,
    auth_sso.clientid,
    auth_sso.clientsecret,
    auth_sso.callback_url,
    auth_sso.row_instance,
    auth_sso.row_lock,
    auth_sso.row_owner,
    auth_sso.row_seq,
    auth_sso.row_guid,
    auth_sso.row_version,
    auth_sso.is_active,
    auth_sso.created_date,
    auth_sso.created_by,
    auth_sso.last_updated_date,
    auth_sso.last_updated_by,
    auth_sso.removed_date,
    auth_sso.removed_by,
    auth_sso.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _owner_account_uid.account_name AS owner_account_uid_account_name,
    _owner_account_uid.tenant_uid AS owner_account_uid_tenant_uid,
    _owner_account_uid.account_type_uid AS owner_account_uid_account_type_uid,
    _owner_account_uid.account_title_uid AS owner_account_uid_account_title_uid,
    _owner_account_uid.account_division_uid AS owner_account_uid_account_division_uid,
    _owner_account_uid.account_group_uid AS owner_account_uid_account_group_uid,
    _owner_account_uid.auth_identity_uid AS owner_account_uid_auth_identity_uid,
    _owner_account_uid.account_email AS owner_account_uid_account_email,
    _owner_account_uid.display_name AS owner_account_uid_display_name,
    _owner_account_uid.is_system AS owner_account_uid_is_system
   FROM ((auth_sso
     LEFT JOIN tenant _tenant_uid ON ((auth_sso.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _owner_account_uid ON ((auth_sso.owner_account_uid = _owner_account_uid.account_uid)))]]></view_script>
			<column name="auth_sso_uid" type="text" />
			<column name="auth_sso_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="owner_account_uid" type="text" />
			<column name="sso_name" type="text" />
			<column name="sso_url" type="text" />
			<column name="sso_key" type="text" />
			<column name="sso_secret" type="text" />
			<column name="sso_code" type="text" />
			<column name="clientid" type="text" />
			<column name="clientsecret" type="text" />
			<column name="callback_url" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="owner_account_uid_account_name" type="text" />
			<column name="owner_account_uid_tenant_uid" type="text" />
			<column name="owner_account_uid_account_type_uid" type="text" />
			<column name="owner_account_uid_account_title_uid" type="text" />
			<column name="owner_account_uid_account_division_uid" type="text" />
			<column name="owner_account_uid_account_group_uid" type="text" />
			<column name="owner_account_uid_auth_identity_uid" type="text" />
			<column name="owner_account_uid_account_email" type="text" />
			<column name="owner_account_uid_display_name" type="text" />
			<column name="owner_account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_auth_token" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_auth_token AS SELECT ${view},
    auth_token.auth_token_name,
    auth_token.tenant_uid,
    auth_token.account_uid,
    auth_token.token_seq,
    auth_token.token_hash,
    auth_token.token_salt,
    auth_token.valid_till_date,
    auth_token.last_use_date,
    auth_token.is_last,
    auth_token.row_instance,
    auth_token.row_lock,
    auth_token.row_owner,
    auth_token.row_seq,
    auth_token.row_guid,
    auth_token.row_version,
    auth_token.is_active,
    auth_token.created_date,
    auth_token.created_by,
    auth_token.last_updated_date,
    auth_token.last_updated_by,
    auth_token.removed_date,
    auth_token.removed_by,
    auth_token.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((auth_token
     LEFT JOIN tenant _tenant_uid ON ((auth_token.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((auth_token.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="auth_token_uid" type="text" />
			<column name="auth_token_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="token_seq" type="bigint" />
			<column name="token_hash" type="text" />
			<column name="token_salt" type="text" />
			<column name="valid_till_date" type="timestamp" />
			<column name="last_use_date" type="timestamp" />
			<column name="is_last" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_calendar_account" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_calendar_account AS SELECT ${view},
    calendar_account.calendar_account_name,
    calendar_account.tenant_uid,
    calendar_account.account_uid,
    calendar_account.calendar_type_uid,
    calendar_account.row_instance,
    calendar_account.row_lock,
    calendar_account.row_owner,
    calendar_account.row_seq,
    calendar_account.row_guid,
    calendar_account.row_version,
    calendar_account.is_active,
    calendar_account.created_date,
    calendar_account.created_by,
    calendar_account.last_updated_date,
    calendar_account.last_updated_by,
    calendar_account.removed_date,
    calendar_account.removed_by,
    calendar_account.custom_attributes,
    _calendar_account_uid.account_name AS calendar_account_uid_account_name,
    _calendar_account_uid.tenant_uid AS calendar_account_uid_tenant_uid,
    _calendar_account_uid.account_type_uid AS calendar_account_uid_account_type_uid,
    _calendar_account_uid.account_title_uid AS calendar_account_uid_account_title_uid,
    _calendar_account_uid.account_division_uid AS calendar_account_uid_account_division_uid,
    _calendar_account_uid.account_group_uid AS calendar_account_uid_account_group_uid,
    _calendar_account_uid.auth_identity_uid AS calendar_account_uid_auth_identity_uid,
    _calendar_account_uid.account_email AS calendar_account_uid_account_email,
    _calendar_account_uid.display_name AS calendar_account_uid_display_name,
    _calendar_account_uid.is_system AS calendar_account_uid_is_system,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _calendar_type_uid.calendar_type_name AS calendar_type_uid_calendar_type_name
   FROM ((((calendar_account
     LEFT JOIN account _calendar_account_uid ON ((${view} = _calendar_account_uid.account_uid)))
     LEFT JOIN tenant _tenant_uid ON ((calendar_account.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((calendar_account.account_uid = _account_uid.account_uid)))
     LEFT JOIN calendar_type _calendar_type_uid ON ((calendar_account.calendar_type_uid = _calendar_type_uid.calendar_type_uid)))]]></view_script>
			<column name="calendar_account_uid" type="text" />
			<column name="calendar_account_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="calendar_type_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="calendar_account_uid_account_name" type="text" />
			<column name="calendar_account_uid_tenant_uid" type="text" />
			<column name="calendar_account_uid_account_type_uid" type="text" />
			<column name="calendar_account_uid_account_title_uid" type="text" />
			<column name="calendar_account_uid_account_division_uid" type="text" />
			<column name="calendar_account_uid_account_group_uid" type="text" />
			<column name="calendar_account_uid_auth_identity_uid" type="text" />
			<column name="calendar_account_uid_account_email" type="text" />
			<column name="calendar_account_uid_display_name" type="text" />
			<column name="calendar_account_uid_is_system" type="bigint" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="calendar_type_uid_calendar_type_name" type="text" />
		</view>
		<view name="v_rich_calendar_approval" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_calendar_approval AS SELECT ${view},
    calendar_approval.calendar_approval_name,
    calendar_approval.client_uid,
    calendar_approval.account_uid,
    calendar_approval.calendar_approval_type_uid,
    calendar_approval.calendar_event_group_uid,
    calendar_approval.calendar_type_uid,
    calendar_approval.time_submit_type_name,
    calendar_approval.row_instance,
    calendar_approval.row_lock,
    calendar_approval.row_owner,
    calendar_approval.row_seq,
    calendar_approval.row_guid,
    calendar_approval.row_version,
    calendar_approval.is_active,
    calendar_approval.created_date,
    calendar_approval.created_by,
    calendar_approval.last_updated_date,
    calendar_approval.last_updated_by,
    calendar_approval.removed_date,
    calendar_approval.removed_by,
    calendar_approval.custom_attributes,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _calendar_approval_type_uid.calendar_approval_type_name AS calendar_approval_type_uid_calendar_approval_type_name,
    _calendar_event_group_uid.calendar_event_group_name AS calendar_event_group_uid_calendar_event_group_name,
    _calendar_event_group_uid.client_uid AS calendar_event_group_uid_client_uid,
    _calendar_event_group_uid.account_uid AS calendar_event_group_uid_account_uid,
    _calendar_event_group_uid.calendar_account_uid AS calendar_event_group_uid_calendar_account_uid,
    _calendar_event_group_uid.calendar_event_type_uid AS calendar_event_group_uid_calendar_event_type_uid,
    _calendar_event_group_uid.group_comment AS calendar_event_group_uid_group_comment,
    _calendar_event_group_uid.event_start_date AS calendar_event_group_uid_event_start_date,
    _calendar_event_group_uid.event_end_date AS calendar_event_group_uid_event_end_date,
    _calendar_event_group_uid.is_approved AS calendar_event_group_uid_is_approved,
    _calendar_type_uid.calendar_type_name AS calendar_type_uid_calendar_type_name
   FROM (((((calendar_approval
     LEFT JOIN client _client_uid ON ((calendar_approval.client_uid = _client_uid.client_uid)))
     LEFT JOIN account _account_uid ON ((calendar_approval.account_uid = _account_uid.account_uid)))
     LEFT JOIN calendar_approval_type _calendar_approval_type_uid ON ((calendar_approval.calendar_approval_type_uid = _calendar_approval_type_uid.calendar_approval_type_uid)))
     LEFT JOIN calendar_event_group _calendar_event_group_uid ON ((calendar_approval.calendar_event_group_uid = _calendar_event_group_uid.calendar_event_group_uid)))
     LEFT JOIN calendar_type _calendar_type_uid ON ((calendar_approval.calendar_type_uid = _calendar_type_uid.calendar_type_uid)))]]></view_script>
			<column name="calendar_approval_uid" type="text" />
			<column name="calendar_approval_name" type="text" />
			<column name="client_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="calendar_approval_type_uid" type="text" />
			<column name="calendar_event_group_uid" type="text" />
			<column name="calendar_type_uid" type="text" />
			<column name="time_submit_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="calendar_approval_type_uid_calendar_approval_type_name" type="text" />
			<column name="calendar_event_group_uid_calendar_event_group_name" type="text" />
			<column name="calendar_event_group_uid_client_uid" type="text" />
			<column name="calendar_event_group_uid_account_uid" type="text" />
			<column name="calendar_event_group_uid_calendar_account_uid" type="text" />
			<column name="calendar_event_group_uid_calendar_event_type_uid" type="text" />
			<column name="calendar_event_group_uid_group_comment" type="text" />
			<column name="calendar_event_group_uid_event_start_date" type="timestamp" />
			<column name="calendar_event_group_uid_event_end_date" type="timestamp" />
			<column name="calendar_event_group_uid_is_approved" type="bigint" />
			<column name="calendar_type_uid_calendar_type_name" type="text" />
		</view>
		<view name="v_rich_calendar_approval_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT calendar_approval_type_uid,
    calendar_approval_type_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM calendar_approval_type]]></view_script>
			<column name="calendar_approval_type_uid" type="text" />
			<column name="calendar_approval_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_calendar_event" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_calendar_event AS SELECT ${view},
    calendar_event.calendar_event_name,
    calendar_event.client_uid,
    calendar_event.account_uid,
    calendar_event.calendar_event_group_uid,
    calendar_event.calendar_type_uid,
    calendar_event.row_instance,
    calendar_event.row_lock,
    calendar_event.row_owner,
    calendar_event.row_seq,
    calendar_event.row_guid,
    calendar_event.row_version,
    calendar_event.is_active,
    calendar_event.created_date,
    calendar_event.created_by,
    calendar_event.last_updated_date,
    calendar_event.last_updated_by,
    calendar_event.removed_date,
    calendar_event.removed_by,
    calendar_event.custom_attributes,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _calendar_event_group_uid.calendar_event_group_name AS calendar_event_group_uid_calendar_event_group_name,
    _calendar_event_group_uid.client_uid AS calendar_event_group_uid_client_uid,
    _calendar_event_group_uid.account_uid AS calendar_event_group_uid_account_uid,
    _calendar_event_group_uid.calendar_account_uid AS calendar_event_group_uid_calendar_account_uid,
    _calendar_event_group_uid.calendar_event_type_uid AS calendar_event_group_uid_calendar_event_type_uid,
    _calendar_event_group_uid.group_comment AS calendar_event_group_uid_group_comment,
    _calendar_event_group_uid.event_start_date AS calendar_event_group_uid_event_start_date,
    _calendar_event_group_uid.event_end_date AS calendar_event_group_uid_event_end_date,
    _calendar_event_group_uid.is_approved AS calendar_event_group_uid_is_approved,
    _calendar_type_uid.calendar_type_name AS calendar_type_uid_calendar_type_name
   FROM ((((calendar_event
     LEFT JOIN client _client_uid ON ((calendar_event.client_uid = _client_uid.client_uid)))
     LEFT JOIN account _account_uid ON ((calendar_event.account_uid = _account_uid.account_uid)))
     LEFT JOIN calendar_event_group _calendar_event_group_uid ON ((calendar_event.calendar_event_group_uid = _calendar_event_group_uid.calendar_event_group_uid)))
     LEFT JOIN calendar_type _calendar_type_uid ON ((calendar_event.calendar_type_uid = _calendar_type_uid.calendar_type_uid)))]]></view_script>
			<column name="calendar_event_uid" type="text" />
			<column name="calendar_event_name" type="text" />
			<column name="client_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="calendar_event_group_uid" type="text" />
			<column name="calendar_type_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="calendar_event_group_uid_calendar_event_group_name" type="text" />
			<column name="calendar_event_group_uid_client_uid" type="text" />
			<column name="calendar_event_group_uid_account_uid" type="text" />
			<column name="calendar_event_group_uid_calendar_account_uid" type="text" />
			<column name="calendar_event_group_uid_calendar_event_type_uid" type="text" />
			<column name="calendar_event_group_uid_group_comment" type="text" />
			<column name="calendar_event_group_uid_event_start_date" type="timestamp" />
			<column name="calendar_event_group_uid_event_end_date" type="timestamp" />
			<column name="calendar_event_group_uid_is_approved" type="bigint" />
			<column name="calendar_type_uid_calendar_type_name" type="text" />
		</view>
		<view name="v_rich_calendar_event_group" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_calendar_event_group AS SELECT ${view},
    calendar_event_group.calendar_event_group_name,
    calendar_event_group.client_uid,
    calendar_event_group.account_uid,
    calendar_event_group.calendar_account_uid,
    calendar_event_group.calendar_event_type_uid,
    calendar_event_group.group_comment,
    calendar_event_group.event_start_date,
    calendar_event_group.event_end_date,
    calendar_event_group.is_approved,
    calendar_event_group.row_instance,
    calendar_event_group.row_lock,
    calendar_event_group.row_owner,
    calendar_event_group.row_seq,
    calendar_event_group.row_guid,
    calendar_event_group.row_version,
    calendar_event_group.is_active,
    calendar_event_group.created_date,
    calendar_event_group.created_by,
    calendar_event_group.last_updated_date,
    calendar_event_group.last_updated_by,
    calendar_event_group.removed_date,
    calendar_event_group.removed_by,
    calendar_event_group.custom_attributes,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _calendar_account_uid.account_name AS calendar_account_uid_account_name,
    _calendar_account_uid.tenant_uid AS calendar_account_uid_tenant_uid,
    _calendar_account_uid.account_type_uid AS calendar_account_uid_account_type_uid,
    _calendar_account_uid.account_title_uid AS calendar_account_uid_account_title_uid,
    _calendar_account_uid.account_division_uid AS calendar_account_uid_account_division_uid,
    _calendar_account_uid.account_group_uid AS calendar_account_uid_account_group_uid,
    _calendar_account_uid.auth_identity_uid AS calendar_account_uid_auth_identity_uid,
    _calendar_account_uid.account_email AS calendar_account_uid_account_email,
    _calendar_account_uid.display_name AS calendar_account_uid_display_name,
    _calendar_account_uid.is_system AS calendar_account_uid_is_system,
    _calendar_event_type_uid.calendar_event_type_name AS calendar_event_type_uid_calendar_event_type_name,
    _calendar_event_type_uid.client_uid AS calendar_event_type_uid_client_uid,
    _calendar_event_type_uid.calendar_type_uid AS calendar_event_type_uid_calendar_type_uid,
    _calendar_event_type_uid.auto_approved AS calendar_event_type_uid_auto_approved
   FROM ((((calendar_event_group
     LEFT JOIN client _client_uid ON ((calendar_event_group.client_uid = _client_uid.client_uid)))
     LEFT JOIN account _account_uid ON ((calendar_event_group.account_uid = _account_uid.account_uid)))
     LEFT JOIN account _calendar_account_uid ON ((calendar_event_group.calendar_account_uid = _calendar_account_uid.account_uid)))
     LEFT JOIN calendar_event_type _calendar_event_type_uid ON ((calendar_event_group.calendar_event_type_uid = _calendar_event_type_uid.calendar_event_type_uid)))]]></view_script>
			<column name="calendar_event_group_uid" type="text" />
			<column name="calendar_event_group_name" type="text" />
			<column name="client_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="calendar_account_uid" type="text" />
			<column name="calendar_event_type_uid" type="text" />
			<column name="group_comment" type="text" />
			<column name="event_start_date" type="timestamp" />
			<column name="event_end_date" type="timestamp" />
			<column name="is_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="calendar_account_uid_account_name" type="text" />
			<column name="calendar_account_uid_tenant_uid" type="text" />
			<column name="calendar_account_uid_account_type_uid" type="text" />
			<column name="calendar_account_uid_account_title_uid" type="text" />
			<column name="calendar_account_uid_account_division_uid" type="text" />
			<column name="calendar_account_uid_account_group_uid" type="text" />
			<column name="calendar_account_uid_auth_identity_uid" type="text" />
			<column name="calendar_account_uid_account_email" type="text" />
			<column name="calendar_account_uid_display_name" type="text" />
			<column name="calendar_account_uid_is_system" type="bigint" />
			<column name="calendar_event_type_uid_calendar_event_type_name" type="text" />
			<column name="calendar_event_type_uid_client_uid" type="text" />
			<column name="calendar_event_type_uid_calendar_type_uid" type="text" />
			<column name="calendar_event_type_uid_auto_approved" type="bigint" />
		</view>
		<view name="v_rich_calendar_event_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_calendar_event_type AS SELECT ${view},
    calendar_event_type.calendar_event_type_name,
    calendar_event_type.client_uid,
    calendar_event_type.calendar_type_uid,
    calendar_event_type.auto_approved,
    calendar_event_type.row_instance,
    calendar_event_type.row_lock,
    calendar_event_type.row_owner,
    calendar_event_type.row_seq,
    calendar_event_type.row_guid,
    calendar_event_type.row_version,
    calendar_event_type.is_active,
    calendar_event_type.created_date,
    calendar_event_type.created_by,
    calendar_event_type.last_updated_date,
    calendar_event_type.last_updated_by,
    calendar_event_type.removed_date,
    calendar_event_type.removed_by,
    calendar_event_type.custom_attributes,
    _calendar_event_type_uid.event_type_name AS calendar_event_type_uid_event_type_name,
    _calendar_event_type_uid.event_type_description AS calendar_event_type_uid_event_type_description,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _calendar_type_uid.calendar_type_name AS calendar_type_uid_calendar_type_name
   FROM (((calendar_event_type
     LEFT JOIN event_type _calendar_event_type_uid ON ((${view} = _calendar_event_type_uid.event_type_uid)))
     LEFT JOIN client _client_uid ON ((calendar_event_type.client_uid = _client_uid.client_uid)))
     LEFT JOIN calendar_type _calendar_type_uid ON ((calendar_event_type.calendar_type_uid = _calendar_type_uid.calendar_type_uid)))]]></view_script>
			<column name="calendar_event_type_uid" type="text" />
			<column name="calendar_event_type_name" type="text" />
			<column name="client_uid" type="text" />
			<column name="calendar_type_uid" type="text" />
			<column name="auto_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="calendar_event_type_uid_event_type_name" type="text" />
			<column name="calendar_event_type_uid_event_type_description" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="calendar_type_uid_calendar_type_name" type="text" />
		</view>
		<view name="v_rich_calendar_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT calendar_type_uid,
    calendar_type_name,
    row_instance,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM calendar_type]]></view_script>
			<column name="calendar_type_uid" type="text" />
			<column name="calendar_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_client" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_client AS SELECT ${view},
    client.client_name,
    client.tenant_uid,
    client.country_uid,
    client.client_type_uid,
    client.client_category_uid,
    client.account_uid,
    client.client_code,
    client.client_description,
    client.start_date,
    client.end_date,
    client.is_internal,
    client.is_system,
    client.is_test,
    client.row_instance,
    client.row_lock,
    client.row_owner,
    client.row_seq,
    client.row_guid,
    client.row_version,
    client.is_active,
    client.created_date,
    client.created_by,
    client.last_updated_date,
    client.last_updated_by,
    client.removed_date,
    client.removed_by,
    client.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _country_uid.country_name AS country_uid_country_name,
    _country_uid.continent_name AS country_uid_continent_name,
    _country_uid.continent_code AS country_uid_continent_code,
    _country_uid.country_iso3 AS country_uid_country_iso3,
    _country_uid.country_code AS country_uid_country_code,
    _country_uid.phone_code AS country_uid_phone_code,
    _country_uid.currency_code AS country_uid_currency_code,
    _country_uid.capital_name AS country_uid_capital_name,
    _country_uid.region_name AS country_uid_region_name,
    _country_uid.subregion_name AS country_uid_subregion_name,
    _country_uid.region_code AS country_uid_region_code,
    _country_uid.latitude AS country_uid_latitude,
    _country_uid.longitude AS country_uid_longitude,
    _country_uid.currency_name AS country_uid_currency_name,
    _country_uid.population AS country_uid_population,
    _country_uid.languages AS country_uid_languages,
    _country_uid.area AS country_uid_area,
    _country_uid.bar_code AS country_uid_bar_code,
    _country_uid.top_level_domain AS country_uid_top_level_domain,
    _country_uid.is_focused AS country_uid_is_focused,
    _client_type_uid.client_type_name AS client_type_uid_client_type_name,
    _client_type_uid.client_type_description AS client_type_uid_client_type_description,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((((client
     LEFT JOIN tenant _tenant_uid ON ((client.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN country _country_uid ON ((client.country_uid = _country_uid.country_uid)))
     LEFT JOIN client_type _client_type_uid ON ((client.client_type_uid = _client_type_uid.client_type_uid)))
     LEFT JOIN account _account_uid ON ((client.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="client_uid" type="text" />
			<column name="client_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="country_uid" type="text" />
			<column name="client_type_uid" type="text" />
			<column name="client_category_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="client_code" type="text" />
			<column name="client_description" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="is_internal" type="bigint" />
			<column name="is_system" type="bigint" />
			<column name="is_test" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="country_uid_country_name" type="text" />
			<column name="country_uid_continent_name" type="text" />
			<column name="country_uid_continent_code" type="text" />
			<column name="country_uid_country_iso3" type="text" />
			<column name="country_uid_country_code" type="text" />
			<column name="country_uid_phone_code" type="text" />
			<column name="country_uid_currency_code" type="text" />
			<column name="country_uid_capital_name" type="text" />
			<column name="country_uid_region_name" type="text" />
			<column name="country_uid_subregion_name" type="text" />
			<column name="country_uid_region_code" type="text" />
			<column name="country_uid_latitude" type="text" />
			<column name="country_uid_longitude" type="text" />
			<column name="country_uid_currency_name" type="text" />
			<column name="country_uid_population" type="text" />
			<column name="country_uid_languages" type="text" />
			<column name="country_uid_area" type="text" />
			<column name="country_uid_bar_code" type="text" />
			<column name="country_uid_top_level_domain" type="text" />
			<column name="country_uid_is_focused" type="bigint" />
			<column name="client_type_uid_client_type_name" type="text" />
			<column name="client_type_uid_client_type_description" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_client_account" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_client_account AS SELECT ${view},
    client_account.client_account_name,
    client_account.tenant_uid,
    client_account.client_uid,
    client_account.account_uid,
    client_account.client_role_uid,
    client_account.row_instance,
    client_account.row_lock,
    client_account.row_owner,
    client_account.row_seq,
    client_account.row_guid,
    client_account.row_version,
    client_account.is_active,
    client_account.created_date,
    client_account.created_by,
    client_account.last_updated_date,
    client_account.last_updated_by,
    client_account.removed_date,
    client_account.removed_by,
    client_account.custom_attributes,
    _client_account_uid.account_name AS client_account_uid_account_name,
    _client_account_uid.tenant_uid AS client_account_uid_tenant_uid,
    _client_account_uid.account_type_uid AS client_account_uid_account_type_uid,
    _client_account_uid.account_title_uid AS client_account_uid_account_title_uid,
    _client_account_uid.account_division_uid AS client_account_uid_account_division_uid,
    _client_account_uid.account_group_uid AS client_account_uid_account_group_uid,
    _client_account_uid.auth_identity_uid AS client_account_uid_auth_identity_uid,
    _client_account_uid.account_email AS client_account_uid_account_email,
    _client_account_uid.display_name AS client_account_uid_display_name,
    _client_account_uid.is_system AS client_account_uid_is_system,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _client_role_uid.client_role_name AS client_role_uid_client_role_name,
    _client_role_uid.role_description AS client_role_uid_role_description
   FROM (((((client_account
     LEFT JOIN account _client_account_uid ON ((${view} = _client_account_uid.account_uid)))
     LEFT JOIN tenant _tenant_uid ON ((client_account.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN client _client_uid ON ((client_account.client_uid = _client_uid.client_uid)))
     LEFT JOIN account _account_uid ON ((client_account.account_uid = _account_uid.account_uid)))
     LEFT JOIN client_role _client_role_uid ON ((client_account.client_role_uid = _client_role_uid.client_role_uid)))]]></view_script>
			<column name="client_account_uid" type="text" />
			<column name="client_account_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="client_role_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="client_account_uid_account_name" type="text" />
			<column name="client_account_uid_tenant_uid" type="text" />
			<column name="client_account_uid_account_type_uid" type="text" />
			<column name="client_account_uid_account_title_uid" type="text" />
			<column name="client_account_uid_account_division_uid" type="text" />
			<column name="client_account_uid_account_group_uid" type="text" />
			<column name="client_account_uid_auth_identity_uid" type="text" />
			<column name="client_account_uid_account_email" type="text" />
			<column name="client_account_uid_display_name" type="text" />
			<column name="client_account_uid_is_system" type="bigint" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="client_role_uid_client_role_name" type="text" />
			<column name="client_role_uid_role_description" type="text" />
		</view>
		<view name="v_rich_client_country" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_client_country AS SELECT ${view},
    client_country.client_country_name,
    client_country.tenant_uid,
    client_country.client_uid,
    client_country.country_uid,
    client_country.row_instance,
    client_country.row_lock,
    client_country.row_owner,
    client_country.row_seq,
    client_country.row_guid,
    client_country.row_version,
    client_country.is_active,
    client_country.created_date,
    client_country.created_by,
    client_country.last_updated_date,
    client_country.last_updated_by,
    client_country.removed_date,
    client_country.removed_by,
    client_country.custom_attributes,
    _client_country_uid.country_name AS client_country_uid_country_name,
    _client_country_uid.continent_name AS client_country_uid_continent_name,
    _client_country_uid.continent_code AS client_country_uid_continent_code,
    _client_country_uid.country_iso3 AS client_country_uid_country_iso3,
    _client_country_uid.country_code AS client_country_uid_country_code,
    _client_country_uid.phone_code AS client_country_uid_phone_code,
    _client_country_uid.currency_code AS client_country_uid_currency_code,
    _client_country_uid.capital_name AS client_country_uid_capital_name,
    _client_country_uid.region_name AS client_country_uid_region_name,
    _client_country_uid.subregion_name AS client_country_uid_subregion_name,
    _client_country_uid.region_code AS client_country_uid_region_code,
    _client_country_uid.latitude AS client_country_uid_latitude,
    _client_country_uid.longitude AS client_country_uid_longitude,
    _client_country_uid.currency_name AS client_country_uid_currency_name,
    _client_country_uid.population AS client_country_uid_population,
    _client_country_uid.languages AS client_country_uid_languages,
    _client_country_uid.area AS client_country_uid_area,
    _client_country_uid.bar_code AS client_country_uid_bar_code,
    _client_country_uid.top_level_domain AS client_country_uid_top_level_domain,
    _client_country_uid.is_focused AS client_country_uid_is_focused,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _country_uid.country_name AS country_uid_country_name,
    _country_uid.continent_name AS country_uid_continent_name,
    _country_uid.continent_code AS country_uid_continent_code,
    _country_uid.country_iso3 AS country_uid_country_iso3,
    _country_uid.country_code AS country_uid_country_code,
    _country_uid.phone_code AS country_uid_phone_code,
    _country_uid.currency_code AS country_uid_currency_code,
    _country_uid.capital_name AS country_uid_capital_name,
    _country_uid.region_name AS country_uid_region_name,
    _country_uid.subregion_name AS country_uid_subregion_name,
    _country_uid.region_code AS country_uid_region_code,
    _country_uid.latitude AS country_uid_latitude,
    _country_uid.longitude AS country_uid_longitude,
    _country_uid.currency_name AS country_uid_currency_name,
    _country_uid.population AS country_uid_population,
    _country_uid.languages AS country_uid_languages,
    _country_uid.area AS country_uid_area,
    _country_uid.bar_code AS country_uid_bar_code,
    _country_uid.top_level_domain AS country_uid_top_level_domain,
    _country_uid.is_focused AS country_uid_is_focused
   FROM ((((client_country
     LEFT JOIN country _client_country_uid ON ((${view} = _client_country_uid.country_uid)))
     LEFT JOIN tenant _tenant_uid ON ((client_country.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN client _client_uid ON ((client_country.client_uid = _client_uid.client_uid)))
     LEFT JOIN country _country_uid ON ((client_country.country_uid = _country_uid.country_uid)))]]></view_script>
			<column name="client_country_uid" type="text" />
			<column name="client_country_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="country_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="client_country_uid_country_name" type="text" />
			<column name="client_country_uid_continent_name" type="text" />
			<column name="client_country_uid_continent_code" type="text" />
			<column name="client_country_uid_country_iso3" type="text" />
			<column name="client_country_uid_country_code" type="text" />
			<column name="client_country_uid_phone_code" type="text" />
			<column name="client_country_uid_currency_code" type="text" />
			<column name="client_country_uid_capital_name" type="text" />
			<column name="client_country_uid_region_name" type="text" />
			<column name="client_country_uid_subregion_name" type="text" />
			<column name="client_country_uid_region_code" type="text" />
			<column name="client_country_uid_latitude" type="text" />
			<column name="client_country_uid_longitude" type="text" />
			<column name="client_country_uid_currency_name" type="text" />
			<column name="client_country_uid_population" type="text" />
			<column name="client_country_uid_languages" type="text" />
			<column name="client_country_uid_area" type="text" />
			<column name="client_country_uid_bar_code" type="text" />
			<column name="client_country_uid_top_level_domain" type="text" />
			<column name="client_country_uid_is_focused" type="bigint" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="country_uid_country_name" type="text" />
			<column name="country_uid_continent_name" type="text" />
			<column name="country_uid_continent_code" type="text" />
			<column name="country_uid_country_iso3" type="text" />
			<column name="country_uid_country_code" type="text" />
			<column name="country_uid_phone_code" type="text" />
			<column name="country_uid_currency_code" type="text" />
			<column name="country_uid_capital_name" type="text" />
			<column name="country_uid_region_name" type="text" />
			<column name="country_uid_subregion_name" type="text" />
			<column name="country_uid_region_code" type="text" />
			<column name="country_uid_latitude" type="text" />
			<column name="country_uid_longitude" type="text" />
			<column name="country_uid_currency_name" type="text" />
			<column name="country_uid_population" type="text" />
			<column name="country_uid_languages" type="text" />
			<column name="country_uid_area" type="text" />
			<column name="country_uid_bar_code" type="text" />
			<column name="country_uid_top_level_domain" type="text" />
			<column name="country_uid_is_focused" type="bigint" />
		</view>
		<view name="v_rich_client_payment" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_client_payment AS SELECT ${view},
    client_payment.client_payment_name,
    client_payment.tenant_uid,
    client_payment.client_uid,
    client_payment.account_uid,
    client_payment.currency_uid,
    client_payment.start_date,
    client_payment.end_date,
    client_payment.payment_value,
    client_payment.payment_type,
    client_payment.source_number,
    client_payment.source_reference,
    client_payment.is_approved,
    client_payment.row_instance,
    client_payment.row_lock,
    client_payment.row_owner,
    client_payment.row_seq,
    client_payment.row_guid,
    client_payment.row_version,
    client_payment.is_active,
    client_payment.created_date,
    client_payment.created_by,
    client_payment.last_updated_date,
    client_payment.last_updated_by,
    client_payment.removed_date,
    client_payment.removed_by,
    client_payment.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _currency_uid.currency_name AS currency_uid_currency_name,
    _currency_uid.is_focused AS currency_uid_is_focused
   FROM ((((client_payment
     LEFT JOIN tenant _tenant_uid ON ((client_payment.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN client _client_uid ON ((client_payment.client_uid = _client_uid.client_uid)))
     LEFT JOIN account _account_uid ON ((client_payment.account_uid = _account_uid.account_uid)))
     LEFT JOIN currency _currency_uid ON ((client_payment.currency_uid = _currency_uid.currency_uid)))]]></view_script>
			<column name="client_payment_uid" type="text" />
			<column name="client_payment_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="currency_uid" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="payment_value" type="double precision" />
			<column name="payment_type" type="text" />
			<column name="source_number" type="text" />
			<column name="source_reference" type="text" />
			<column name="is_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="currency_uid_currency_name" type="text" />
			<column name="currency_uid_is_focused" type="bigint" />
		</view>
		<view name="v_rich_client_role" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT client_role_uid,
    client_role_name,
    role_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM client_role]]></view_script>
			<column name="client_role_uid" type="text" />
			<column name="client_role_name" type="text" />
			<column name="role_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_client_status" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT client_status_uid,
    client_status_name,
    client_status_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM client_status]]></view_script>
			<column name="client_status_uid" type="text" />
			<column name="client_status_name" type="text" />
			<column name="client_status_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_client_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT client_type_uid,
    client_type_name,
    client_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM client_type]]></view_script>
			<column name="client_type_uid" type="text" />
			<column name="client_type_name" type="text" />
			<column name="client_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_connection_engine" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT connection_engine_uid,
    connection_engine_name,
    start_date,
    calls_count,
    last_time,
    host_count,
    user_count,
    token_count,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM connection_engine]]></view_script>
			<column name="connection_engine_uid" type="text" />
			<column name="connection_engine_name" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="calls_count" type="bigint" />
			<column name="last_time" type="bigint" />
			<column name="host_count" type="bigint" />
			<column name="user_count" type="bigint" />
			<column name="token_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_connection_host" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_connection_host AS SELECT ${view},
    connection_host.connection_host_name,
    connection_host.connection_engine_uid,
    connection_host.host_ip,
    connection_host.calls_count,
    connection_host.start_time,
    connection_host.last_call_time,
    connection_host.user_count,
    connection_host.token_count,
    connection_host.row_instance,
    connection_host.row_lock,
    connection_host.row_owner,
    connection_host.row_seq,
    connection_host.row_guid,
    connection_host.row_version,
    connection_host.is_active,
    connection_host.created_date,
    connection_host.created_by,
    connection_host.last_updated_date,
    connection_host.last_updated_by,
    connection_host.removed_date,
    connection_host.removed_by,
    connection_host.custom_attributes,
    _connection_engine_uid.connection_engine_name AS connection_engine_uid_connection_engine_name,
    _connection_engine_uid.start_date AS connection_engine_uid_start_date,
    _connection_engine_uid.calls_count AS connection_engine_uid_calls_count,
    _connection_engine_uid.last_time AS connection_engine_uid_last_time,
    _connection_engine_uid.host_count AS connection_engine_uid_host_count,
    _connection_engine_uid.user_count AS connection_engine_uid_user_count,
    _connection_engine_uid.token_count AS connection_engine_uid_token_count
   FROM (connection_host
     LEFT JOIN connection_engine _connection_engine_uid ON ((connection_host.connection_engine_uid = _connection_engine_uid.connection_engine_uid)))]]></view_script>
			<column name="connection_host_uid" type="text" />
			<column name="connection_host_name" type="text" />
			<column name="connection_engine_uid" type="text" />
			<column name="host_ip" type="text" />
			<column name="calls_count" type="bigint" />
			<column name="start_time" type="bigint" />
			<column name="last_call_time" type="bigint" />
			<column name="user_count" type="bigint" />
			<column name="token_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="connection_engine_uid_connection_engine_name" type="text" />
			<column name="connection_engine_uid_start_date" type="timestamp" />
			<column name="connection_engine_uid_calls_count" type="bigint" />
			<column name="connection_engine_uid_last_time" type="bigint" />
			<column name="connection_engine_uid_host_count" type="bigint" />
			<column name="connection_engine_uid_user_count" type="bigint" />
			<column name="connection_engine_uid_token_count" type="bigint" />
		</view>
		<view name="v_rich_connection_user" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_connection_user AS SELECT ${view},
    connection_user.connection_user_name,
    connection_user.connection_engine_uid,
    connection_user.account_uid,
    connection_user.call_count,
    connection_user.host_count,
    connection_user.token_count,
    connection_user.row_instance,
    connection_user.row_lock,
    connection_user.row_owner,
    connection_user.row_seq,
    connection_user.row_guid,
    connection_user.row_version,
    connection_user.is_active,
    connection_user.created_date,
    connection_user.created_by,
    connection_user.last_updated_date,
    connection_user.last_updated_by,
    connection_user.removed_date,
    connection_user.removed_by,
    connection_user.custom_attributes,
    _connection_engine_uid.connection_engine_name AS connection_engine_uid_connection_engine_name,
    _connection_engine_uid.start_date AS connection_engine_uid_start_date,
    _connection_engine_uid.calls_count AS connection_engine_uid_calls_count,
    _connection_engine_uid.last_time AS connection_engine_uid_last_time,
    _connection_engine_uid.host_count AS connection_engine_uid_host_count,
    _connection_engine_uid.user_count AS connection_engine_uid_user_count,
    _connection_engine_uid.token_count AS connection_engine_uid_token_count,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((connection_user
     LEFT JOIN connection_engine _connection_engine_uid ON ((connection_user.connection_engine_uid = _connection_engine_uid.connection_engine_uid)))
     LEFT JOIN account _account_uid ON ((connection_user.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="connection_user_uid" type="text" />
			<column name="connection_user_name" type="text" />
			<column name="connection_engine_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="call_count" type="bigint" />
			<column name="host_count" type="bigint" />
			<column name="token_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="connection_engine_uid_connection_engine_name" type="text" />
			<column name="connection_engine_uid_start_date" type="timestamp" />
			<column name="connection_engine_uid_calls_count" type="bigint" />
			<column name="connection_engine_uid_last_time" type="bigint" />
			<column name="connection_engine_uid_host_count" type="bigint" />
			<column name="connection_engine_uid_user_count" type="bigint" />
			<column name="connection_engine_uid_token_count" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_country" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT country_uid,
    country_name,
    continent_name,
    continent_code,
    country_iso3,
    country_code,
    phone_code,
    currency_code,
    capital_name,
    region_name,
    subregion_name,
    region_code,
    latitude,
    longitude,
    currency_name,
    population,
    languages,
    area,
    bar_code,
    top_level_domain,
    is_focused,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM country]]></view_script>
			<column name="country_uid" type="text" />
			<column name="country_name" type="text" />
			<column name="continent_name" type="text" />
			<column name="continent_code" type="text" />
			<column name="country_iso3" type="text" />
			<column name="country_code" type="text" />
			<column name="phone_code" type="text" />
			<column name="currency_code" type="text" />
			<column name="capital_name" type="text" />
			<column name="region_name" type="text" />
			<column name="subregion_name" type="text" />
			<column name="region_code" type="text" />
			<column name="latitude" type="text" />
			<column name="longitude" type="text" />
			<column name="currency_name" type="text" />
			<column name="population" type="text" />
			<column name="languages" type="text" />
			<column name="area" type="text" />
			<column name="bar_code" type="text" />
			<column name="top_level_domain" type="text" />
			<column name="is_focused" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_currency" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT currency_uid,
    currency_name,
    is_focused,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM currency]]></view_script>
			<column name="currency_uid" type="text" />
			<column name="currency_name" type="text" />
			<column name="is_focused" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_event_acknowledge" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_event_acknowledge AS SELECT ${view},
    event_acknowledge.event_acknowledge_name,
    event_acknowledge.event_notification_uid,
    event_acknowledge.tenant_uid,
    event_acknowledge.account_uid,
    event_acknowledge.row_instance,
    event_acknowledge.row_lock,
    event_acknowledge.row_owner,
    event_acknowledge.row_seq,
    event_acknowledge.row_guid,
    event_acknowledge.row_version,
    event_acknowledge.is_active,
    event_acknowledge.created_date,
    event_acknowledge.created_by,
    event_acknowledge.last_updated_date,
    event_acknowledge.last_updated_by,
    event_acknowledge.removed_date,
    event_acknowledge.removed_by,
    event_acknowledge.custom_attributes,
    _event_notification_uid.event_notification_name AS event_notification_uid_event_notification_name,
    _event_notification_uid.tenant_uid AS event_notification_uid_tenant_uid,
    _event_notification_uid.account_uid AS event_notification_uid_account_uid,
    _event_notification_uid.notification_type AS event_notification_uid_notification_type,
    _event_notification_uid.notification_topic AS event_notification_uid_notification_topic,
    _event_notification_uid.notification_format AS event_notification_uid_notification_format,
    _event_notification_uid.notification_content AS event_notification_uid_notification_content,
    _event_notification_uid.sending_status AS event_notification_uid_sending_status,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM (((event_acknowledge
     LEFT JOIN event_notification _event_notification_uid ON ((event_acknowledge.event_notification_uid = _event_notification_uid.event_notification_uid)))
     LEFT JOIN tenant _tenant_uid ON ((event_acknowledge.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((event_acknowledge.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="event_acknowledge_uid" type="text" />
			<column name="event_acknowledge_name" type="text" />
			<column name="event_notification_uid" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="event_notification_uid_event_notification_name" type="text" />
			<column name="event_notification_uid_tenant_uid" type="text" />
			<column name="event_notification_uid_account_uid" type="text" />
			<column name="event_notification_uid_notification_type" type="text" />
			<column name="event_notification_uid_notification_topic" type="text" />
			<column name="event_notification_uid_notification_format" type="text" />
			<column name="event_notification_uid_notification_content" type="text" />
			<column name="event_notification_uid_sending_status" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_event_channel" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_event_channel AS SELECT ${view},
    event_channel.event_channel_name,
    event_channel.event_channel_type_uid,
    event_channel.channel_definition,
    event_channel.last_status_name,
    event_channel.tenant_uid,
    event_channel.account_uid,
    event_channel.row_instance,
    event_channel.row_lock,
    event_channel.row_owner,
    event_channel.row_seq,
    event_channel.row_guid,
    event_channel.row_version,
    event_channel.is_active,
    event_channel.created_date,
    event_channel.created_by,
    event_channel.last_updated_date,
    event_channel.last_updated_by,
    event_channel.removed_date,
    event_channel.removed_by,
    event_channel.custom_attributes,
    _event_channel_type_uid.event_channel_type_name AS event_channel_type_uid_event_channel_type_name,
    _event_channel_type_uid.channel_type_description AS event_channel_type_uid_channel_type_description,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM (((event_channel
     LEFT JOIN event_channel_type _event_channel_type_uid ON ((event_channel.event_channel_type_uid = _event_channel_type_uid.event_channel_type_uid)))
     LEFT JOIN tenant _tenant_uid ON ((event_channel.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((event_channel.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="event_channel_uid" type="text" />
			<column name="event_channel_name" type="text" />
			<column name="event_channel_type_uid" type="text" />
			<column name="channel_definition" type="text" />
			<column name="last_status_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="event_channel_type_uid_event_channel_type_name" type="text" />
			<column name="event_channel_type_uid_channel_type_description" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_event_channel_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT event_channel_type_uid,
    event_channel_type_name,
    channel_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM event_channel_type]]></view_script>
			<column name="event_channel_type_uid" type="text" />
			<column name="event_channel_type_name" type="text" />
			<column name="channel_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_event_instance" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_event_instance AS SELECT ${view},
    event_instance.event_instance_name,
    event_instance.client_uid,
    event_instance.event_type,
    event_instance.event_object,
    event_instance.event_method,
    event_instance.event_parameters,
    event_instance.event_signature,
    event_instance.event_date,
    event_instance.published_count,
    event_instance.row_instance,
    event_instance.row_lock,
    event_instance.row_owner,
    event_instance.row_seq,
    event_instance.row_guid,
    event_instance.row_version,
    event_instance.is_active,
    event_instance.created_date,
    event_instance.created_by,
    event_instance.last_updated_date,
    event_instance.last_updated_by,
    event_instance.removed_date,
    event_instance.removed_by,
    event_instance.custom_attributes,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test
   FROM (event_instance
     LEFT JOIN client _client_uid ON ((event_instance.client_uid = _client_uid.client_uid)))]]></view_script>
			<column name="event_instance_uid" type="text" />
			<column name="event_instance_name" type="text" />
			<column name="client_uid" type="text" />
			<column name="event_type" type="text" />
			<column name="event_object" type="text" />
			<column name="event_method" type="text" />
			<column name="event_parameters" type="text" />
			<column name="event_signature" type="text" />
			<column name="event_date" type="timestamp" />
			<column name="published_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
		</view>
		<view name="v_rich_event_notification" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_event_notification AS SELECT ${view},
    event_notification.event_notification_name,
    event_notification.tenant_uid,
    event_notification.account_uid,
    event_notification.notification_type,
    event_notification.notification_topic,
    event_notification.notification_format,
    event_notification.notification_content,
    event_notification.sending_status,
    event_notification.row_instance,
    event_notification.row_lock,
    event_notification.row_owner,
    event_notification.row_seq,
    event_notification.row_guid,
    event_notification.row_version,
    event_notification.is_active,
    event_notification.created_date,
    event_notification.created_by,
    event_notification.last_updated_date,
    event_notification.last_updated_by,
    event_notification.removed_date,
    event_notification.removed_by,
    event_notification.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((event_notification
     LEFT JOIN tenant _tenant_uid ON ((event_notification.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((event_notification.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="event_notification_uid" type="text" />
			<column name="event_notification_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="notification_type" type="text" />
			<column name="notification_topic" type="text" />
			<column name="notification_format" type="text" />
			<column name="notification_content" type="text" />
			<column name="sending_status" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_event_observer" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT event_observer_uid,
    event_observer_name,
    event_observer_definition,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM event_observer]]></view_script>
			<column name="event_observer_uid" type="text" />
			<column name="event_observer_name" type="text" />
			<column name="event_observer_definition" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_event_subscription" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_event_subscription AS SELECT ${view},
    event_subscription.event_subscription_name,
    event_subscription.event_channel_uid,
    event_subscription.tenant_uid,
    event_subscription.account_uid,
    event_subscription.subscription_filter,
    event_subscription.subscription_topic,
    event_subscription.subscription_template,
    event_subscription.row_instance,
    event_subscription.row_lock,
    event_subscription.row_owner,
    event_subscription.row_seq,
    event_subscription.row_guid,
    event_subscription.row_version,
    event_subscription.is_active,
    event_subscription.created_date,
    event_subscription.created_by,
    event_subscription.last_updated_date,
    event_subscription.last_updated_by,
    event_subscription.removed_date,
    event_subscription.removed_by,
    event_subscription.custom_attributes,
    _event_channel_uid.event_channel_name AS event_channel_uid_event_channel_name,
    _event_channel_uid.event_channel_type_uid AS event_channel_uid_event_channel_type_uid,
    _event_channel_uid.channel_definition AS event_channel_uid_channel_definition,
    _event_channel_uid.last_status_name AS event_channel_uid_last_status_name,
    _event_channel_uid.tenant_uid AS event_channel_uid_tenant_uid,
    _event_channel_uid.account_uid AS event_channel_uid_account_uid,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM (((event_subscription
     LEFT JOIN event_channel _event_channel_uid ON ((event_subscription.event_channel_uid = _event_channel_uid.event_channel_uid)))
     LEFT JOIN tenant _tenant_uid ON ((event_subscription.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((event_subscription.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="event_subscription_uid" type="text" />
			<column name="event_subscription_name" type="text" />
			<column name="event_channel_uid" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="subscription_filter" type="text" />
			<column name="subscription_topic" type="text" />
			<column name="subscription_template" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="event_channel_uid_event_channel_name" type="text" />
			<column name="event_channel_uid_event_channel_type_uid" type="text" />
			<column name="event_channel_uid_channel_definition" type="text" />
			<column name="event_channel_uid_last_status_name" type="text" />
			<column name="event_channel_uid_tenant_uid" type="text" />
			<column name="event_channel_uid_account_uid" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_event_template" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_event_template AS SELECT ${view},
    event_template.event_template_name,
    event_template.tenant_uid,
    event_template.notification_type,
    event_template.notification_topic,
    event_template.notification_format,
    event_template.row_instance,
    event_template.row_lock,
    event_template.row_owner,
    event_template.row_seq,
    event_template.row_guid,
    event_template.row_version,
    event_template.is_active,
    event_template.created_date,
    event_template.created_by,
    event_template.last_updated_date,
    event_template.last_updated_by,
    event_template.removed_date,
    event_template.removed_by,
    event_template.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid
   FROM (event_template
     LEFT JOIN tenant _tenant_uid ON ((event_template.tenant_uid = _tenant_uid.tenant_uid)))]]></view_script>
			<column name="event_template_uid" type="text" />
			<column name="event_template_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="notification_type" type="text" />
			<column name="notification_topic" type="text" />
			<column name="notification_format" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
		</view>
		<view name="v_rich_event_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT event_type_uid,
    event_type_name,
    event_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM event_type]]></view_script>
			<column name="event_type_uid" type="text" />
			<column name="event_type_name" type="text" />
			<column name="event_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_invoice_action" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_invoice_action AS SELECT ${view},
    invoice_action.invoice_action_name,
    invoice_action.tenant_uid,
    invoice_action.account_uid,
    invoice_action.invoice_instance_uid,
    invoice_action.invoice_action_type_uid,
    invoice_action.row_instance,
    invoice_action.row_lock,
    invoice_action.row_owner,
    invoice_action.row_seq,
    invoice_action.row_guid,
    invoice_action.row_version,
    invoice_action.is_active,
    invoice_action.created_date,
    invoice_action.created_by,
    invoice_action.last_updated_date,
    invoice_action.last_updated_by,
    invoice_action.removed_date,
    invoice_action.removed_by,
    invoice_action.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _invoice_instance_uid.invoice_instance_name AS invoice_instance_uid_invoice_instance_name,
    _invoice_instance_uid.tenant_uid AS invoice_instance_uid_tenant_uid,
    _invoice_instance_uid.account_uid AS invoice_instance_uid_account_uid,
    _invoice_instance_uid.invoice_flow_uid AS invoice_instance_uid_invoice_flow_uid,
    _invoice_instance_uid.invoice_status_uid AS invoice_instance_uid_invoice_status_uid,
    _invoice_instance_uid.invoice_category_uid AS invoice_instance_uid_invoice_category_uid,
    _invoice_instance_uid.invoice_type_uid AS invoice_instance_uid_invoice_type_uid,
    _invoice_instance_uid.period_uid AS invoice_instance_uid_period_uid,
    _invoice_instance_uid.currency_uid AS invoice_instance_uid_currency_uid,
    _invoice_instance_uid.invoice_number AS invoice_instance_uid_invoice_number,
    _invoice_instance_uid.invoice_details AS invoice_instance_uid_invoice_details,
    _invoice_instance_uid.invoice_amount_net AS invoice_instance_uid_invoice_amount_net,
    _invoice_instance_uid.invoice_amount_tax AS invoice_instance_uid_invoice_amount_tax,
    _invoice_instance_uid.invoice_amount_gross AS invoice_instance_uid_invoice_amount_gross,
    _invoice_action_type_uid.invoice_action_type_name AS invoice_action_type_uid_invoice_action_type_name
   FROM ((((invoice_action
     LEFT JOIN tenant _tenant_uid ON ((invoice_action.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((invoice_action.account_uid = _account_uid.account_uid)))
     LEFT JOIN invoice_instance _invoice_instance_uid ON ((invoice_action.invoice_instance_uid = _invoice_instance_uid.invoice_instance_uid)))
     LEFT JOIN invoice_action_type _invoice_action_type_uid ON ((invoice_action.invoice_action_type_uid = _invoice_action_type_uid.invoice_action_type_uid)))]]></view_script>
			<column name="invoice_action_uid" type="text" />
			<column name="invoice_action_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="invoice_instance_uid" type="text" />
			<column name="invoice_action_type_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="invoice_instance_uid_invoice_instance_name" type="text" />
			<column name="invoice_instance_uid_tenant_uid" type="text" />
			<column name="invoice_instance_uid_account_uid" type="text" />
			<column name="invoice_instance_uid_invoice_flow_uid" type="text" />
			<column name="invoice_instance_uid_invoice_status_uid" type="text" />
			<column name="invoice_instance_uid_invoice_category_uid" type="text" />
			<column name="invoice_instance_uid_invoice_type_uid" type="text" />
			<column name="invoice_instance_uid_period_uid" type="text" />
			<column name="invoice_instance_uid_currency_uid" type="text" />
			<column name="invoice_instance_uid_invoice_number" type="text" />
			<column name="invoice_instance_uid_invoice_details" type="text" />
			<column name="invoice_instance_uid_invoice_amount_net" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_tax" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_gross" type="double precision" />
			<column name="invoice_action_type_uid_invoice_action_type_name" type="text" />
		</view>
		<view name="v_rich_invoice_action_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT invoice_action_type_uid,
    invoice_action_type_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM invoice_action_type]]></view_script>
			<column name="invoice_action_type_uid" type="text" />
			<column name="invoice_action_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_invoice_category" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_invoice_category AS SELECT ${view},
    invoice_category.invoice_category_name,
    invoice_category.tenant_uid,
    invoice_category.invoice_category_description,
    invoice_category.row_instance,
    invoice_category.row_lock,
    invoice_category.row_owner,
    invoice_category.row_seq,
    invoice_category.row_guid,
    invoice_category.row_version,
    invoice_category.is_active,
    invoice_category.created_date,
    invoice_category.created_by,
    invoice_category.last_updated_date,
    invoice_category.last_updated_by,
    invoice_category.removed_date,
    invoice_category.removed_by,
    invoice_category.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid
   FROM (invoice_category
     LEFT JOIN tenant _tenant_uid ON ((invoice_category.tenant_uid = _tenant_uid.tenant_uid)))]]></view_script>
			<column name="invoice_category_uid" type="text" />
			<column name="invoice_category_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="invoice_category_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
		</view>
		<view name="v_rich_invoice_entry" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_invoice_entry AS SELECT ${view},
    invoice_entry.invoice_entry_name,
    invoice_entry.tenant_uid,
    invoice_entry.account_uid,
    invoice_entry.invoice_instance_uid,
    invoice_entry.entry_details,
    invoice_entry.entry_amount_net,
    invoice_entry.entry_amount_tax,
    invoice_entry.entry_amount_gross,
    invoice_entry.row_instance,
    invoice_entry.row_lock,
    invoice_entry.row_owner,
    invoice_entry.row_seq,
    invoice_entry.row_guid,
    invoice_entry.row_version,
    invoice_entry.is_active,
    invoice_entry.created_date,
    invoice_entry.created_by,
    invoice_entry.last_updated_date,
    invoice_entry.last_updated_by,
    invoice_entry.removed_date,
    invoice_entry.removed_by,
    invoice_entry.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _invoice_instance_uid.invoice_instance_name AS invoice_instance_uid_invoice_instance_name,
    _invoice_instance_uid.tenant_uid AS invoice_instance_uid_tenant_uid,
    _invoice_instance_uid.account_uid AS invoice_instance_uid_account_uid,
    _invoice_instance_uid.invoice_flow_uid AS invoice_instance_uid_invoice_flow_uid,
    _invoice_instance_uid.invoice_status_uid AS invoice_instance_uid_invoice_status_uid,
    _invoice_instance_uid.invoice_category_uid AS invoice_instance_uid_invoice_category_uid,
    _invoice_instance_uid.invoice_type_uid AS invoice_instance_uid_invoice_type_uid,
    _invoice_instance_uid.period_uid AS invoice_instance_uid_period_uid,
    _invoice_instance_uid.currency_uid AS invoice_instance_uid_currency_uid,
    _invoice_instance_uid.invoice_number AS invoice_instance_uid_invoice_number,
    _invoice_instance_uid.invoice_details AS invoice_instance_uid_invoice_details,
    _invoice_instance_uid.invoice_amount_net AS invoice_instance_uid_invoice_amount_net,
    _invoice_instance_uid.invoice_amount_tax AS invoice_instance_uid_invoice_amount_tax,
    _invoice_instance_uid.invoice_amount_gross AS invoice_instance_uid_invoice_amount_gross
   FROM (((invoice_entry
     LEFT JOIN tenant _tenant_uid ON ((invoice_entry.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((invoice_entry.account_uid = _account_uid.account_uid)))
     LEFT JOIN invoice_instance _invoice_instance_uid ON ((invoice_entry.invoice_instance_uid = _invoice_instance_uid.invoice_instance_uid)))]]></view_script>
			<column name="invoice_entry_uid" type="text" />
			<column name="invoice_entry_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="invoice_instance_uid" type="text" />
			<column name="entry_details" type="text" />
			<column name="entry_amount_net" type="double precision" />
			<column name="entry_amount_tax" type="double precision" />
			<column name="entry_amount_gross" type="double precision" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="invoice_instance_uid_invoice_instance_name" type="text" />
			<column name="invoice_instance_uid_tenant_uid" type="text" />
			<column name="invoice_instance_uid_account_uid" type="text" />
			<column name="invoice_instance_uid_invoice_flow_uid" type="text" />
			<column name="invoice_instance_uid_invoice_status_uid" type="text" />
			<column name="invoice_instance_uid_invoice_category_uid" type="text" />
			<column name="invoice_instance_uid_invoice_type_uid" type="text" />
			<column name="invoice_instance_uid_period_uid" type="text" />
			<column name="invoice_instance_uid_currency_uid" type="text" />
			<column name="invoice_instance_uid_invoice_number" type="text" />
			<column name="invoice_instance_uid_invoice_details" type="text" />
			<column name="invoice_instance_uid_invoice_amount_net" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_tax" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_gross" type="double precision" />
		</view>
		<view name="v_rich_invoice_flow" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT invoice_flow_uid,
    invoice_flow_name,
    flow_description,
    flow_definition_json,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM invoice_flow]]></view_script>
			<column name="invoice_flow_uid" type="text" />
			<column name="invoice_flow_name" type="text" />
			<column name="flow_description" type="text" />
			<column name="flow_definition_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_invoice_flow_state" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_invoice_flow_state AS SELECT ${view},
    invoice_flow_state.invoice_flow_state_name,
    invoice_flow_state.invoice_flow_uid,
    invoice_flow_state.row_instance,
    invoice_flow_state.row_lock,
    invoice_flow_state.row_owner,
    invoice_flow_state.row_seq,
    invoice_flow_state.row_guid,
    invoice_flow_state.row_version,
    invoice_flow_state.is_active,
    invoice_flow_state.created_date,
    invoice_flow_state.created_by,
    invoice_flow_state.last_updated_date,
    invoice_flow_state.last_updated_by,
    invoice_flow_state.removed_date,
    invoice_flow_state.removed_by,
    invoice_flow_state.custom_attributes,
    _invoice_flow_uid.invoice_flow_name AS invoice_flow_uid_invoice_flow_name,
    _invoice_flow_uid.flow_description AS invoice_flow_uid_flow_description,
    _invoice_flow_uid.flow_definition_json AS invoice_flow_uid_flow_definition_json
   FROM (invoice_flow_state
     LEFT JOIN invoice_flow _invoice_flow_uid ON ((invoice_flow_state.invoice_flow_uid = _invoice_flow_uid.invoice_flow_uid)))]]></view_script>
			<column name="invoice_flow_state_uid" type="text" />
			<column name="invoice_flow_state_name" type="text" />
			<column name="invoice_flow_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="invoice_flow_uid_invoice_flow_name" type="text" />
			<column name="invoice_flow_uid_flow_description" type="text" />
			<column name="invoice_flow_uid_flow_definition_json" type="text" />
		</view>
		<view name="v_rich_invoice_instance" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_invoice_instance AS SELECT ${view},
    invoice_instance.invoice_instance_name,
    invoice_instance.tenant_uid,
    invoice_instance.account_uid,
    invoice_instance.invoice_flow_uid,
    invoice_instance.invoice_status_uid,
    invoice_instance.invoice_category_uid,
    invoice_instance.invoice_type_uid,
    invoice_instance.period_uid,
    invoice_instance.currency_uid,
    invoice_instance.invoice_number,
    invoice_instance.invoice_details,
    invoice_instance.invoice_amount_net,
    invoice_instance.invoice_amount_tax,
    invoice_instance.invoice_amount_gross,
    invoice_instance.row_instance,
    invoice_instance.row_lock,
    invoice_instance.row_owner,
    invoice_instance.row_seq,
    invoice_instance.row_guid,
    invoice_instance.row_version,
    invoice_instance.is_active,
    invoice_instance.created_date,
    invoice_instance.created_by,
    invoice_instance.last_updated_date,
    invoice_instance.last_updated_by,
    invoice_instance.removed_date,
    invoice_instance.removed_by,
    invoice_instance.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _invoice_flow_uid.invoice_flow_name AS invoice_flow_uid_invoice_flow_name,
    _invoice_flow_uid.flow_description AS invoice_flow_uid_flow_description,
    _invoice_flow_uid.flow_definition_json AS invoice_flow_uid_flow_definition_json,
    _invoice_status_uid.invoice_status_name AS invoice_status_uid_invoice_status_name,
    _invoice_status_uid.status_description AS invoice_status_uid_status_description,
    _invoice_category_uid.invoice_category_name AS invoice_category_uid_invoice_category_name,
    _invoice_category_uid.tenant_uid AS invoice_category_uid_tenant_uid,
    _invoice_category_uid.invoice_category_description AS invoice_category_uid_invoice_category_description,
    _invoice_type_uid.invoice_type_name AS invoice_type_uid_invoice_type_name,
    _period_uid.period_name AS period_uid_period_name,
    _period_uid.period_number AS period_uid_period_number,
    _period_uid.period_type AS period_uid_period_type,
    _period_uid.period_start_time AS period_uid_period_start_time,
    _period_uid.period_end_time AS period_uid_period_end_time,
    _period_uid.period_year AS period_uid_period_year,
    _period_uid.period_quarter AS period_uid_period_quarter,
    _period_uid.period_month AS period_uid_period_month,
    _period_uid.period_week AS period_uid_period_week,
    _period_uid.period_day AS period_uid_period_day,
    _currency_uid.currency_name AS currency_uid_currency_name,
    _currency_uid.is_focused AS currency_uid_is_focused
   FROM ((((((((invoice_instance
     LEFT JOIN tenant _tenant_uid ON ((invoice_instance.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((invoice_instance.account_uid = _account_uid.account_uid)))
     LEFT JOIN invoice_flow _invoice_flow_uid ON ((invoice_instance.invoice_flow_uid = _invoice_flow_uid.invoice_flow_uid)))
     LEFT JOIN invoice_status _invoice_status_uid ON ((invoice_instance.invoice_status_uid = _invoice_status_uid.invoice_status_uid)))
     LEFT JOIN invoice_category _invoice_category_uid ON ((invoice_instance.invoice_category_uid = _invoice_category_uid.invoice_category_uid)))
     LEFT JOIN invoice_type _invoice_type_uid ON ((invoice_instance.invoice_type_uid = _invoice_type_uid.invoice_type_uid)))
     LEFT JOIN period _period_uid ON ((invoice_instance.period_uid = _period_uid.period_uid)))
     LEFT JOIN currency _currency_uid ON ((invoice_instance.currency_uid = _currency_uid.currency_uid)))]]></view_script>
			<column name="invoice_instance_uid" type="text" />
			<column name="invoice_instance_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="invoice_flow_uid" type="text" />
			<column name="invoice_status_uid" type="text" />
			<column name="invoice_category_uid" type="text" />
			<column name="invoice_type_uid" type="text" />
			<column name="period_uid" type="text" />
			<column name="currency_uid" type="text" />
			<column name="invoice_number" type="text" />
			<column name="invoice_details" type="text" />
			<column name="invoice_amount_net" type="double precision" />
			<column name="invoice_amount_tax" type="double precision" />
			<column name="invoice_amount_gross" type="double precision" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="invoice_flow_uid_invoice_flow_name" type="text" />
			<column name="invoice_flow_uid_flow_description" type="text" />
			<column name="invoice_flow_uid_flow_definition_json" type="text" />
			<column name="invoice_status_uid_invoice_status_name" type="text" />
			<column name="invoice_status_uid_status_description" type="text" />
			<column name="invoice_category_uid_invoice_category_name" type="text" />
			<column name="invoice_category_uid_tenant_uid" type="text" />
			<column name="invoice_category_uid_invoice_category_description" type="text" />
			<column name="invoice_type_uid_invoice_type_name" type="text" />
			<column name="period_uid_period_name" type="text" />
			<column name="period_uid_period_number" type="bigint" />
			<column name="period_uid_period_type" type="text" />
			<column name="period_uid_period_start_time" type="timestamp" />
			<column name="period_uid_period_end_time" type="timestamp" />
			<column name="period_uid_period_year" type="bigint" />
			<column name="period_uid_period_quarter" type="bigint" />
			<column name="period_uid_period_month" type="bigint" />
			<column name="period_uid_period_week" type="bigint" />
			<column name="period_uid_period_day" type="bigint" />
			<column name="currency_uid_currency_name" type="text" />
			<column name="currency_uid_is_focused" type="bigint" />
		</view>
		<view name="v_rich_invoice_status" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT invoice_status_uid,
    invoice_status_name,
    status_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM invoice_status]]></view_script>
			<column name="invoice_status_uid" type="text" />
			<column name="invoice_status_name" type="text" />
			<column name="status_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_invoice_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT invoice_type_uid,
    invoice_type_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM invoice_type]]></view_script>
			<column name="invoice_type_uid" type="text" />
			<column name="invoice_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_monitor" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_monitor AS SELECT ${view},
    monitor.monitor_name,
    monitor.tenant_uid,
    monitor.account_uid,
    monitor.monitor_type_uid,
    monitor.schedule_expression,
    monitor.monitor_protocol,
    monitor.monitor_url,
    monitor.monitor_user,
    monitor.monitor_priority,
    monitor.is_on_hold,
    monitor.last_status_name,
    monitor.last_run_time,
    monitor.last_exception_message,
    monitor.row_instance,
    monitor.row_lock,
    monitor.row_owner,
    monitor.row_seq,
    monitor.row_guid,
    monitor.row_version,
    monitor.is_active,
    monitor.created_date,
    monitor.created_by,
    monitor.last_updated_date,
    monitor.last_updated_by,
    monitor.removed_date,
    monitor.removed_by,
    monitor.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _monitor_type_uid.monitor_type_name AS monitor_type_uid_monitor_type_name,
    _monitor_type_uid.class_name AS monitor_type_uid_class_name,
    _monitor_type_uid.parameters_json AS monitor_type_uid_parameters_json
   FROM (((monitor
     LEFT JOIN tenant _tenant_uid ON ((monitor.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((monitor.account_uid = _account_uid.account_uid)))
     LEFT JOIN monitor_type _monitor_type_uid ON ((monitor.monitor_type_uid = _monitor_type_uid.monitor_type_uid)))]]></view_script>
			<column name="monitor_uid" type="text" />
			<column name="monitor_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="monitor_type_uid" type="text" />
			<column name="schedule_expression" type="text" />
			<column name="monitor_protocol" type="text" />
			<column name="monitor_url" type="text" />
			<column name="monitor_user" type="text" />
			<column name="monitor_priority" type="bigint" />
			<column name="is_on_hold" type="bigint" />
			<column name="last_status_name" type="text" />
			<column name="last_run_time" type="double precision" />
			<column name="last_exception_message" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="monitor_type_uid_monitor_type_name" type="text" />
			<column name="monitor_type_uid_class_name" type="text" />
			<column name="monitor_type_uid_parameters_json" type="text" />
		</view>
		<view name="v_rich_monitor_run" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_monitor_run AS SELECT ${view},
    monitor_run.monitor_run_name,
    monitor_run.tenant_uid,
    monitor_run.account_uid,
    monitor_run.monitor_uid,
    monitor_run.status_name,
    monitor_run.run_time,
    monitor_run.exception_message,
    monitor_run.row_instance,
    monitor_run.row_lock,
    monitor_run.row_owner,
    monitor_run.row_seq,
    monitor_run.row_guid,
    monitor_run.row_version,
    monitor_run.is_active,
    monitor_run.created_date,
    monitor_run.created_by,
    monitor_run.last_updated_date,
    monitor_run.last_updated_by,
    monitor_run.removed_date,
    monitor_run.removed_by,
    monitor_run.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _monitor_uid.monitor_name AS monitor_uid_monitor_name,
    _monitor_uid.tenant_uid AS monitor_uid_tenant_uid,
    _monitor_uid.account_uid AS monitor_uid_account_uid,
    _monitor_uid.monitor_type_uid AS monitor_uid_monitor_type_uid,
    _monitor_uid.schedule_expression AS monitor_uid_schedule_expression,
    _monitor_uid.monitor_protocol AS monitor_uid_monitor_protocol,
    _monitor_uid.monitor_url AS monitor_uid_monitor_url,
    _monitor_uid.monitor_user AS monitor_uid_monitor_user,
    _monitor_uid.monitor_priority AS monitor_uid_monitor_priority,
    _monitor_uid.is_on_hold AS monitor_uid_is_on_hold,
    _monitor_uid.last_status_name AS monitor_uid_last_status_name,
    _monitor_uid.last_run_time AS monitor_uid_last_run_time,
    _monitor_uid.last_exception_message AS monitor_uid_last_exception_message
   FROM (((monitor_run
     LEFT JOIN tenant _tenant_uid ON ((monitor_run.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((monitor_run.account_uid = _account_uid.account_uid)))
     LEFT JOIN monitor _monitor_uid ON ((monitor_run.monitor_uid = _monitor_uid.monitor_uid)))]]></view_script>
			<column name="monitor_run_uid" type="text" />
			<column name="monitor_run_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="monitor_uid" type="text" />
			<column name="status_name" type="text" />
			<column name="run_time" type="double precision" />
			<column name="exception_message" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="monitor_uid_monitor_name" type="text" />
			<column name="monitor_uid_tenant_uid" type="text" />
			<column name="monitor_uid_account_uid" type="text" />
			<column name="monitor_uid_monitor_type_uid" type="text" />
			<column name="monitor_uid_schedule_expression" type="text" />
			<column name="monitor_uid_monitor_protocol" type="text" />
			<column name="monitor_uid_monitor_url" type="text" />
			<column name="monitor_uid_monitor_user" type="text" />
			<column name="monitor_uid_monitor_priority" type="bigint" />
			<column name="monitor_uid_is_on_hold" type="bigint" />
			<column name="monitor_uid_last_status_name" type="text" />
			<column name="monitor_uid_last_run_time" type="double precision" />
			<column name="monitor_uid_last_exception_message" type="text" />
		</view>
		<view name="v_rich_monitor_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT monitor_type_uid,
    monitor_type_name,
    class_name,
    parameters_json,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM monitor_type]]></view_script>
			<column name="monitor_type_uid" type="text" />
			<column name="monitor_type_name" type="text" />
			<column name="class_name" type="text" />
			<column name="parameters_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_period" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT period_uid,
    period_name,
    period_number,
    period_type,
    period_start_time,
    period_end_time,
    period_year,
    period_quarter,
    period_month,
    period_week,
    period_day,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM period]]></view_script>
			<column name="period_uid" type="text" />
			<column name="period_name" type="text" />
			<column name="period_number" type="bigint" />
			<column name="period_type" type="text" />
			<column name="period_start_time" type="timestamp" />
			<column name="period_end_time" type="timestamp" />
			<column name="period_year" type="bigint" />
			<column name="period_quarter" type="bigint" />
			<column name="period_month" type="bigint" />
			<column name="period_week" type="bigint" />
			<column name="period_day" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_process" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_process AS SELECT ${view},
    process.process_name,
    process.tenant_uid,
    process.account_uid,
    process.process_type_uid,
    process.row_instance,
    process.row_lock,
    process.row_owner,
    process.row_seq,
    process.row_guid,
    process.row_version,
    process.is_active,
    process.created_date,
    process.created_by,
    process.last_updated_date,
    process.last_updated_by,
    process.removed_date,
    process.removed_by,
    process.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _process_type_uid.process_type_name AS process_type_uid_process_type_name,
    _process_type_uid.class_name AS process_type_uid_class_name
   FROM (((process
     LEFT JOIN tenant _tenant_uid ON ((process.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((process.account_uid = _account_uid.account_uid)))
     LEFT JOIN process_type _process_type_uid ON ((process.process_type_uid = _process_type_uid.process_type_uid)))]]></view_script>
			<column name="process_uid" type="text" />
			<column name="process_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="process_type_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="process_type_uid_process_type_name" type="text" />
			<column name="process_type_uid_class_name" type="text" />
		</view>
		<view name="v_rich_process_run" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_process_run AS SELECT ${view},
    process_run.process_run_name,
    process_run.tenant_uid,
    process_run.account_uid,
    process_run.process_uid,
    process_run.row_instance,
    process_run.row_lock,
    process_run.row_owner,
    process_run.row_seq,
    process_run.row_guid,
    process_run.row_version,
    process_run.is_active,
    process_run.created_date,
    process_run.created_by,
    process_run.last_updated_date,
    process_run.last_updated_by,
    process_run.removed_date,
    process_run.removed_by,
    process_run.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _process_uid.process_name AS process_uid_process_name,
    _process_uid.tenant_uid AS process_uid_tenant_uid,
    _process_uid.account_uid AS process_uid_account_uid,
    _process_uid.process_type_uid AS process_uid_process_type_uid
   FROM (((process_run
     LEFT JOIN tenant _tenant_uid ON ((process_run.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((process_run.account_uid = _account_uid.account_uid)))
     LEFT JOIN process _process_uid ON ((process_run.process_uid = _process_uid.process_uid)))]]></view_script>
			<column name="process_run_uid" type="text" />
			<column name="process_run_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="process_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="process_uid_process_name" type="text" />
			<column name="process_uid_tenant_uid" type="text" />
			<column name="process_uid_account_uid" type="text" />
			<column name="process_uid_process_type_uid" type="text" />
		</view>
		<view name="v_rich_process_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT process_type_uid,
    process_type_name,
    class_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM process_type]]></view_script>
			<column name="process_type_uid" type="text" />
			<column name="process_type_name" type="text" />
			<column name="class_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_project_account" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_project_account AS SELECT ${view},
    project_account.project_account_name,
    project_account.tenant_uid,
    project_account.client_uid,
    project_account.account_uid,
    project_account.project_instance_uid,
    project_account.start_date,
    project_account.end_date,
    project_account.row_instance,
    project_account.row_lock,
    project_account.row_owner,
    project_account.row_seq,
    project_account.row_guid,
    project_account.row_version,
    project_account.is_active,
    project_account.created_date,
    project_account.created_by,
    project_account.last_updated_date,
    project_account.last_updated_by,
    project_account.removed_date,
    project_account.removed_by,
    project_account.custom_attributes,
    _project_account_uid.account_name AS project_account_uid_account_name,
    _project_account_uid.tenant_uid AS project_account_uid_tenant_uid,
    _project_account_uid.account_type_uid AS project_account_uid_account_type_uid,
    _project_account_uid.account_title_uid AS project_account_uid_account_title_uid,
    _project_account_uid.account_division_uid AS project_account_uid_account_division_uid,
    _project_account_uid.account_group_uid AS project_account_uid_account_group_uid,
    _project_account_uid.auth_identity_uid AS project_account_uid_auth_identity_uid,
    _project_account_uid.account_email AS project_account_uid_account_email,
    _project_account_uid.display_name AS project_account_uid_display_name,
    _project_account_uid.is_system AS project_account_uid_is_system,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _project_instance_uid.project_instance_name AS project_instance_uid_project_instance_name,
    _project_instance_uid.tenant_uid AS project_instance_uid_tenant_uid,
    _project_instance_uid.client_uid AS project_instance_uid_client_uid,
    _project_instance_uid.project_type_uid AS project_instance_uid_project_type_uid,
    _project_instance_uid.manager_account_uid AS project_instance_uid_manager_account_uid,
    _project_instance_uid.project_group_uid AS project_instance_uid_project_group_uid,
    _project_instance_uid.project_code AS project_instance_uid_project_code,
    _project_instance_uid.project_description AS project_instance_uid_project_description,
    _project_instance_uid.is_billable AS project_instance_uid_is_billable,
    _project_instance_uid.start_date AS project_instance_uid_start_date,
    _project_instance_uid.end_date AS project_instance_uid_end_date,
    _project_instance_uid.current_billed AS project_instance_uid_current_billed,
    _project_instance_uid.budget AS project_instance_uid_budget
   FROM (((((project_account
     LEFT JOIN account _project_account_uid ON ((${view} = _project_account_uid.account_uid)))
     LEFT JOIN tenant _tenant_uid ON ((project_account.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN client _client_uid ON ((project_account.client_uid = _client_uid.client_uid)))
     LEFT JOIN account _account_uid ON ((project_account.account_uid = _account_uid.account_uid)))
     LEFT JOIN project_instance _project_instance_uid ON ((project_account.project_instance_uid = _project_instance_uid.project_instance_uid)))]]></view_script>
			<column name="project_account_uid" type="text" />
			<column name="project_account_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="project_instance_uid" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="project_account_uid_account_name" type="text" />
			<column name="project_account_uid_tenant_uid" type="text" />
			<column name="project_account_uid_account_type_uid" type="text" />
			<column name="project_account_uid_account_title_uid" type="text" />
			<column name="project_account_uid_account_division_uid" type="text" />
			<column name="project_account_uid_account_group_uid" type="text" />
			<column name="project_account_uid_auth_identity_uid" type="text" />
			<column name="project_account_uid_account_email" type="text" />
			<column name="project_account_uid_display_name" type="text" />
			<column name="project_account_uid_is_system" type="bigint" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="project_instance_uid_project_instance_name" type="text" />
			<column name="project_instance_uid_tenant_uid" type="text" />
			<column name="project_instance_uid_client_uid" type="text" />
			<column name="project_instance_uid_project_type_uid" type="text" />
			<column name="project_instance_uid_manager_account_uid" type="text" />
			<column name="project_instance_uid_project_group_uid" type="text" />
			<column name="project_instance_uid_project_code" type="text" />
			<column name="project_instance_uid_project_description" type="text" />
			<column name="project_instance_uid_is_billable" type="bigint" />
			<column name="project_instance_uid_start_date" type="timestamp" />
			<column name="project_instance_uid_end_date" type="timestamp" />
			<column name="project_instance_uid_current_billed" type="double precision" />
			<column name="project_instance_uid_budget" type="double precision" />
		</view>
		<view name="v_rich_project_budget" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_project_budget AS SELECT ${view},
    project_budget.project_budget_name,
    project_budget.tenant_uid,
    project_budget.client_uid,
    project_budget.project_instance_uid,
    project_budget.currency_uid,
    project_budget.budget_value,
    project_budget.is_approved,
    project_budget.is_current,
    project_budget.row_instance,
    project_budget.row_lock,
    project_budget.row_owner,
    project_budget.row_seq,
    project_budget.row_guid,
    project_budget.row_version,
    project_budget.is_active,
    project_budget.created_date,
    project_budget.created_by,
    project_budget.last_updated_date,
    project_budget.last_updated_by,
    project_budget.removed_date,
    project_budget.removed_by,
    project_budget.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _project_instance_uid.project_instance_name AS project_instance_uid_project_instance_name,
    _project_instance_uid.tenant_uid AS project_instance_uid_tenant_uid,
    _project_instance_uid.client_uid AS project_instance_uid_client_uid,
    _project_instance_uid.project_type_uid AS project_instance_uid_project_type_uid,
    _project_instance_uid.manager_account_uid AS project_instance_uid_manager_account_uid,
    _project_instance_uid.project_group_uid AS project_instance_uid_project_group_uid,
    _project_instance_uid.project_code AS project_instance_uid_project_code,
    _project_instance_uid.project_description AS project_instance_uid_project_description,
    _project_instance_uid.is_billable AS project_instance_uid_is_billable,
    _project_instance_uid.start_date AS project_instance_uid_start_date,
    _project_instance_uid.end_date AS project_instance_uid_end_date,
    _project_instance_uid.current_billed AS project_instance_uid_current_billed,
    _project_instance_uid.budget AS project_instance_uid_budget,
    _currency_uid.currency_name AS currency_uid_currency_name,
    _currency_uid.is_focused AS currency_uid_is_focused
   FROM ((((project_budget
     LEFT JOIN tenant _tenant_uid ON ((project_budget.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN client _client_uid ON ((project_budget.client_uid = _client_uid.client_uid)))
     LEFT JOIN project_instance _project_instance_uid ON ((project_budget.project_instance_uid = _project_instance_uid.project_instance_uid)))
     LEFT JOIN currency _currency_uid ON ((project_budget.currency_uid = _currency_uid.currency_uid)))]]></view_script>
			<column name="project_budget_uid" type="text" />
			<column name="project_budget_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="project_instance_uid" type="text" />
			<column name="currency_uid" type="text" />
			<column name="budget_value" type="double precision" />
			<column name="is_approved" type="bigint" />
			<column name="is_current" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="project_instance_uid_project_instance_name" type="text" />
			<column name="project_instance_uid_tenant_uid" type="text" />
			<column name="project_instance_uid_client_uid" type="text" />
			<column name="project_instance_uid_project_type_uid" type="text" />
			<column name="project_instance_uid_manager_account_uid" type="text" />
			<column name="project_instance_uid_project_group_uid" type="text" />
			<column name="project_instance_uid_project_code" type="text" />
			<column name="project_instance_uid_project_description" type="text" />
			<column name="project_instance_uid_is_billable" type="bigint" />
			<column name="project_instance_uid_start_date" type="timestamp" />
			<column name="project_instance_uid_end_date" type="timestamp" />
			<column name="project_instance_uid_current_billed" type="double precision" />
			<column name="project_instance_uid_budget" type="double precision" />
			<column name="currency_uid_currency_name" type="text" />
			<column name="currency_uid_is_focused" type="bigint" />
		</view>
		<view name="v_rich_project_group" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_project_group AS SELECT ${view},
    project_group.project_group_name,
    project_group.tenant_uid,
    project_group.project_group_description,
    project_group.row_instance,
    project_group.row_lock,
    project_group.row_owner,
    project_group.row_seq,
    project_group.row_guid,
    project_group.row_version,
    project_group.is_active,
    project_group.created_date,
    project_group.created_by,
    project_group.last_updated_date,
    project_group.last_updated_by,
    project_group.removed_date,
    project_group.removed_by,
    project_group.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid
   FROM (project_group
     LEFT JOIN tenant _tenant_uid ON ((project_group.tenant_uid = _tenant_uid.tenant_uid)))]]></view_script>
			<column name="project_group_uid" type="text" />
			<column name="project_group_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="project_group_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
		</view>
		<view name="v_rich_project_instance" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_project_instance AS SELECT ${view},
    project_instance.project_instance_name,
    project_instance.tenant_uid,
    project_instance.client_uid,
    project_instance.project_type_uid,
    project_instance.manager_account_uid,
    project_instance.project_group_uid,
    project_instance.project_code,
    project_instance.project_description,
    project_instance.is_billable,
    project_instance.start_date,
    project_instance.end_date,
    project_instance.current_billed,
    project_instance.budget,
    project_instance.row_instance,
    project_instance.row_lock,
    project_instance.row_owner,
    project_instance.row_seq,
    project_instance.row_guid,
    project_instance.row_version,
    project_instance.is_active,
    project_instance.created_date,
    project_instance.created_by,
    project_instance.last_updated_date,
    project_instance.last_updated_by,
    project_instance.removed_date,
    project_instance.removed_by,
    project_instance.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _project_type_uid.project_type_name AS project_type_uid_project_type_name,
    _project_type_uid.project_type_description AS project_type_uid_project_type_description,
    _manager_account_uid.account_name AS manager_account_uid_account_name,
    _manager_account_uid.tenant_uid AS manager_account_uid_tenant_uid,
    _manager_account_uid.account_type_uid AS manager_account_uid_account_type_uid,
    _manager_account_uid.account_title_uid AS manager_account_uid_account_title_uid,
    _manager_account_uid.account_division_uid AS manager_account_uid_account_division_uid,
    _manager_account_uid.account_group_uid AS manager_account_uid_account_group_uid,
    _manager_account_uid.auth_identity_uid AS manager_account_uid_auth_identity_uid,
    _manager_account_uid.account_email AS manager_account_uid_account_email,
    _manager_account_uid.display_name AS manager_account_uid_display_name,
    _manager_account_uid.is_system AS manager_account_uid_is_system,
    _project_group_uid.project_group_name AS project_group_uid_project_group_name,
    _project_group_uid.tenant_uid AS project_group_uid_tenant_uid,
    _project_group_uid.project_group_description AS project_group_uid_project_group_description
   FROM (((((project_instance
     LEFT JOIN tenant _tenant_uid ON ((project_instance.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN client _client_uid ON ((project_instance.client_uid = _client_uid.client_uid)))
     LEFT JOIN project_type _project_type_uid ON ((project_instance.project_type_uid = _project_type_uid.project_type_uid)))
     LEFT JOIN account _manager_account_uid ON ((project_instance.manager_account_uid = _manager_account_uid.account_uid)))
     LEFT JOIN project_group _project_group_uid ON ((project_instance.project_group_uid = _project_group_uid.project_group_uid)))]]></view_script>
			<column name="project_instance_uid" type="text" />
			<column name="project_instance_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="project_type_uid" type="text" />
			<column name="manager_account_uid" type="text" />
			<column name="project_group_uid" type="text" />
			<column name="project_code" type="text" />
			<column name="project_description" type="text" />
			<column name="is_billable" type="bigint" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="current_billed" type="double precision" />
			<column name="budget" type="double precision" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="project_type_uid_project_type_name" type="text" />
			<column name="project_type_uid_project_type_description" type="text" />
			<column name="manager_account_uid_account_name" type="text" />
			<column name="manager_account_uid_tenant_uid" type="text" />
			<column name="manager_account_uid_account_type_uid" type="text" />
			<column name="manager_account_uid_account_title_uid" type="text" />
			<column name="manager_account_uid_account_division_uid" type="text" />
			<column name="manager_account_uid_account_group_uid" type="text" />
			<column name="manager_account_uid_auth_identity_uid" type="text" />
			<column name="manager_account_uid_account_email" type="text" />
			<column name="manager_account_uid_display_name" type="text" />
			<column name="manager_account_uid_is_system" type="bigint" />
			<column name="project_group_uid_project_group_name" type="text" />
			<column name="project_group_uid_tenant_uid" type="text" />
			<column name="project_group_uid_project_group_description" type="text" />
		</view>
		<view name="v_rich_project_milestone" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_project_milestone AS SELECT ${view},
    project_milestone.project_milestone_name,
    project_milestone.tenant_uid,
    project_milestone.client_uid,
    project_milestone.project_instance_uid,
    project_milestone.project_budget_uid,
    project_milestone.start_date,
    project_milestone.end_date,
    project_milestone.status_name,
    project_milestone.row_instance,
    project_milestone.row_lock,
    project_milestone.row_owner,
    project_milestone.row_seq,
    project_milestone.row_guid,
    project_milestone.row_version,
    project_milestone.is_active,
    project_milestone.created_date,
    project_milestone.created_by,
    project_milestone.last_updated_date,
    project_milestone.last_updated_by,
    project_milestone.removed_date,
    project_milestone.removed_by,
    project_milestone.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _client_uid.client_name AS client_uid_client_name,
    _client_uid.tenant_uid AS client_uid_tenant_uid,
    _client_uid.country_uid AS client_uid_country_uid,
    _client_uid.client_type_uid AS client_uid_client_type_uid,
    _client_uid.client_category_uid AS client_uid_client_category_uid,
    _client_uid.account_uid AS client_uid_account_uid,
    _client_uid.client_code AS client_uid_client_code,
    _client_uid.client_description AS client_uid_client_description,
    _client_uid.start_date AS client_uid_start_date,
    _client_uid.end_date AS client_uid_end_date,
    _client_uid.is_internal AS client_uid_is_internal,
    _client_uid.is_system AS client_uid_is_system,
    _client_uid.is_test AS client_uid_is_test,
    _project_instance_uid.project_instance_name AS project_instance_uid_project_instance_name,
    _project_instance_uid.tenant_uid AS project_instance_uid_tenant_uid,
    _project_instance_uid.client_uid AS project_instance_uid_client_uid,
    _project_instance_uid.project_type_uid AS project_instance_uid_project_type_uid,
    _project_instance_uid.manager_account_uid AS project_instance_uid_manager_account_uid,
    _project_instance_uid.project_group_uid AS project_instance_uid_project_group_uid,
    _project_instance_uid.project_code AS project_instance_uid_project_code,
    _project_instance_uid.project_description AS project_instance_uid_project_description,
    _project_instance_uid.is_billable AS project_instance_uid_is_billable,
    _project_instance_uid.start_date AS project_instance_uid_start_date,
    _project_instance_uid.end_date AS project_instance_uid_end_date,
    _project_instance_uid.current_billed AS project_instance_uid_current_billed,
    _project_instance_uid.budget AS project_instance_uid_budget,
    _project_budget_uid.project_budget_name AS project_budget_uid_project_budget_name,
    _project_budget_uid.tenant_uid AS project_budget_uid_tenant_uid,
    _project_budget_uid.client_uid AS project_budget_uid_client_uid,
    _project_budget_uid.project_instance_uid AS project_budget_uid_project_instance_uid,
    _project_budget_uid.currency_uid AS project_budget_uid_currency_uid,
    _project_budget_uid.budget_value AS project_budget_uid_budget_value,
    _project_budget_uid.is_approved AS project_budget_uid_is_approved,
    _project_budget_uid.is_current AS project_budget_uid_is_current
   FROM ((((project_milestone
     LEFT JOIN tenant _tenant_uid ON ((project_milestone.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN client _client_uid ON ((project_milestone.client_uid = _client_uid.client_uid)))
     LEFT JOIN project_instance _project_instance_uid ON ((project_milestone.project_instance_uid = _project_instance_uid.project_instance_uid)))
     LEFT JOIN project_budget _project_budget_uid ON ((project_milestone.project_budget_uid = _project_budget_uid.project_budget_uid)))]]></view_script>
			<column name="project_milestone_uid" type="text" />
			<column name="project_milestone_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="client_uid" type="text" />
			<column name="project_instance_uid" type="text" />
			<column name="project_budget_uid" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="status_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="client_uid_client_name" type="text" />
			<column name="client_uid_tenant_uid" type="text" />
			<column name="client_uid_country_uid" type="text" />
			<column name="client_uid_client_type_uid" type="text" />
			<column name="client_uid_client_category_uid" type="text" />
			<column name="client_uid_account_uid" type="text" />
			<column name="client_uid_client_code" type="text" />
			<column name="client_uid_client_description" type="text" />
			<column name="client_uid_start_date" type="timestamp" />
			<column name="client_uid_end_date" type="timestamp" />
			<column name="client_uid_is_internal" type="bigint" />
			<column name="client_uid_is_system" type="bigint" />
			<column name="client_uid_is_test" type="bigint" />
			<column name="project_instance_uid_project_instance_name" type="text" />
			<column name="project_instance_uid_tenant_uid" type="text" />
			<column name="project_instance_uid_client_uid" type="text" />
			<column name="project_instance_uid_project_type_uid" type="text" />
			<column name="project_instance_uid_manager_account_uid" type="text" />
			<column name="project_instance_uid_project_group_uid" type="text" />
			<column name="project_instance_uid_project_code" type="text" />
			<column name="project_instance_uid_project_description" type="text" />
			<column name="project_instance_uid_is_billable" type="bigint" />
			<column name="project_instance_uid_start_date" type="timestamp" />
			<column name="project_instance_uid_end_date" type="timestamp" />
			<column name="project_instance_uid_current_billed" type="double precision" />
			<column name="project_instance_uid_budget" type="double precision" />
			<column name="project_budget_uid_project_budget_name" type="text" />
			<column name="project_budget_uid_tenant_uid" type="text" />
			<column name="project_budget_uid_client_uid" type="text" />
			<column name="project_budget_uid_project_instance_uid" type="text" />
			<column name="project_budget_uid_currency_uid" type="text" />
			<column name="project_budget_uid_budget_value" type="double precision" />
			<column name="project_budget_uid_is_approved" type="bigint" />
			<column name="project_budget_uid_is_current" type="bigint" />
		</view>
		<view name="v_rich_project_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT project_type_uid,
    project_type_name,
    project_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM project_type]]></view_script>
			<column name="project_type_uid" type="text" />
			<column name="project_type_name" type="text" />
			<column name="project_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_report" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_report AS SELECT ${view},
    report.report_name,
    report.tenant_uid,
    report.account_uid,
    report.report_status_uid,
    report.report_query,
    report.report_parameters,
    report.row_instance,
    report.row_lock,
    report.row_owner,
    report.row_seq,
    report.row_guid,
    report.row_version,
    report.is_active,
    report.created_date,
    report.created_by,
    report.last_updated_date,
    report.last_updated_by,
    report.removed_date,
    report.removed_by,
    report.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _report_status_uid.report_status_name AS report_status_uid_report_status_name
   FROM (((report
     LEFT JOIN tenant _tenant_uid ON ((report.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((report.account_uid = _account_uid.account_uid)))
     LEFT JOIN report_status _report_status_uid ON ((report.report_status_uid = _report_status_uid.report_status_uid)))]]></view_script>
			<column name="report_uid" type="text" />
			<column name="report_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="report_status_uid" type="text" />
			<column name="report_query" type="text" />
			<column name="report_parameters" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="report_status_uid_report_status_name" type="text" />
		</view>
		<view name="v_rich_report_content_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT report_content_type_uid,
    report_content_type_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM report_content_type]]></view_script>
			<column name="report_content_type_uid" type="text" />
			<column name="report_content_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_report_format" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT report_format_uid,
    report_format_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM report_format]]></view_script>
			<column name="report_format_uid" type="text" />
			<column name="report_format_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_report_run" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_report_run AS SELECT ${view},
    report_run.report_run_name,
    report_run.tenant_uid,
    report_run.account_uid,
    report_run.report_uid,
    report_run.report_format_uid,
    report_run.report_status_uid,
    report_run.report_content_type_uid,
    report_run.input_parameters_json,
    report_run.run_time_ms,
    report_run.returned_rows,
    report_run.content_size,
    report_run.row_instance,
    report_run.row_lock,
    report_run.row_owner,
    report_run.row_seq,
    report_run.row_guid,
    report_run.row_version,
    report_run.is_active,
    report_run.created_date,
    report_run.created_by,
    report_run.last_updated_date,
    report_run.last_updated_by,
    report_run.removed_date,
    report_run.removed_by,
    report_run.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _report_uid.report_name AS report_uid_report_name,
    _report_uid.tenant_uid AS report_uid_tenant_uid,
    _report_uid.account_uid AS report_uid_account_uid,
    _report_uid.report_status_uid AS report_uid_report_status_uid,
    _report_uid.report_query AS report_uid_report_query,
    _report_uid.report_parameters AS report_uid_report_parameters,
    _report_format_uid.report_format_name AS report_format_uid_report_format_name,
    _report_status_uid.report_status_name AS report_status_uid_report_status_name,
    _report_content_type_uid.report_content_type_name AS report_content_type_uid_report_content_type_name
   FROM ((((((report_run
     LEFT JOIN tenant _tenant_uid ON ((report_run.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((report_run.account_uid = _account_uid.account_uid)))
     LEFT JOIN report _report_uid ON ((report_run.report_uid = _report_uid.report_uid)))
     LEFT JOIN report_format _report_format_uid ON ((report_run.report_format_uid = _report_format_uid.report_format_uid)))
     LEFT JOIN report_status _report_status_uid ON ((report_run.report_status_uid = _report_status_uid.report_status_uid)))
     LEFT JOIN report_content_type _report_content_type_uid ON ((report_run.report_content_type_uid = _report_content_type_uid.report_content_type_uid)))]]></view_script>
			<column name="report_run_uid" type="text" />
			<column name="report_run_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="report_uid" type="text" />
			<column name="report_format_uid" type="text" />
			<column name="report_status_uid" type="text" />
			<column name="report_content_type_uid" type="text" />
			<column name="input_parameters_json" type="text" />
			<column name="run_time_ms" type="bigint" />
			<column name="returned_rows" type="bigint" />
			<column name="content_size" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="report_uid_report_name" type="text" />
			<column name="report_uid_tenant_uid" type="text" />
			<column name="report_uid_account_uid" type="text" />
			<column name="report_uid_report_status_uid" type="text" />
			<column name="report_uid_report_query" type="text" />
			<column name="report_uid_report_parameters" type="text" />
			<column name="report_format_uid_report_format_name" type="text" />
			<column name="report_status_uid_report_status_name" type="text" />
			<column name="report_content_type_uid_report_content_type_name" type="text" />
		</view>
		<view name="v_rich_report_status" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT report_status_uid,
    report_status_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM report_status]]></view_script>
			<column name="report_status_uid" type="text" />
			<column name="report_status_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_report_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT report_type_uid,
    report_type_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM report_type]]></view_script>
			<column name="report_type_uid" type="text" />
			<column name="report_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_storage" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT storage_uid,
    storage_name,
    storage_class,
    storage_parameters_json,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM storage]]></view_script>
			<column name="storage_uid" type="text" />
			<column name="storage_name" type="text" />
			<column name="storage_class" type="text" />
			<column name="storage_parameters_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_storage_connection" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_storage_connection AS SELECT ${view},
    storage_connection.storage_connection_name,
    storage_connection.storage_uid,
    storage_connection.connection_type,
    storage_connection.storage_parameters_json,
    storage_connection.row_instance,
    storage_connection.row_lock,
    storage_connection.row_owner,
    storage_connection.row_seq,
    storage_connection.row_guid,
    storage_connection.row_version,
    storage_connection.is_active,
    storage_connection.created_date,
    storage_connection.created_by,
    storage_connection.last_updated_date,
    storage_connection.last_updated_by,
    storage_connection.removed_date,
    storage_connection.removed_by,
    storage_connection.custom_attributes,
    _storage_uid.storage_name AS storage_uid_storage_name,
    _storage_uid.storage_class AS storage_uid_storage_class,
    _storage_uid.storage_parameters_json AS storage_uid_storage_parameters_json
   FROM (storage_connection
     LEFT JOIN storage _storage_uid ON ((storage_connection.storage_uid = _storage_uid.storage_uid)))]]></view_script>
			<column name="storage_connection_uid" type="text" />
			<column name="storage_connection_name" type="text" />
			<column name="storage_uid" type="text" />
			<column name="connection_type" type="text" />
			<column name="storage_parameters_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="storage_uid_storage_name" type="text" />
			<column name="storage_uid_storage_class" type="text" />
			<column name="storage_uid_storage_parameters_json" type="text" />
		</view>
		<view name="v_rich_storage_query" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_storage_query AS SELECT ${view},
    storage_query.storage_connection_name,
    storage_query.storage_uid,
    storage_query.storage_parameters_json,
    storage_query.row_instance,
    storage_query.row_lock,
    storage_query.row_owner,
    storage_query.row_seq,
    storage_query.row_guid,
    storage_query.row_version,
    storage_query.is_active,
    storage_query.created_date,
    storage_query.created_by,
    storage_query.last_updated_date,
    storage_query.last_updated_by,
    storage_query.removed_date,
    storage_query.removed_by,
    storage_query.custom_attributes,
    _storage_connection_uid.storage_connection_name AS storage_connection_uid_storage_connection_name,
    _storage_connection_uid.storage_uid AS storage_connection_uid_storage_uid,
    _storage_connection_uid.connection_type AS storage_connection_uid_connection_type,
    _storage_connection_uid.storage_parameters_json AS storage_connection_uid_storage_parameters_json,
    _storage_uid.storage_name AS storage_uid_storage_name,
    _storage_uid.storage_class AS storage_uid_storage_class,
    _storage_uid.storage_parameters_json AS storage_uid_storage_parameters_json
   FROM ((storage_query
     LEFT JOIN storage_connection _storage_connection_uid ON ((${view} = _storage_connection_uid.storage_connection_uid)))
     LEFT JOIN storage _storage_uid ON ((storage_query.storage_uid = _storage_uid.storage_uid)))]]></view_script>
			<column name="storage_connection_uid" type="text" />
			<column name="storage_connection_name" type="text" />
			<column name="storage_uid" type="text" />
			<column name="storage_parameters_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="storage_connection_uid_storage_connection_name" type="text" />
			<column name="storage_connection_uid_storage_uid" type="text" />
			<column name="storage_connection_uid_connection_type" type="text" />
			<column name="storage_connection_uid_storage_parameters_json" type="text" />
			<column name="storage_uid_storage_name" type="text" />
			<column name="storage_uid_storage_class" type="text" />
			<column name="storage_uid_storage_parameters_json" type="text" />
		</view>
		<view name="v_rich_storage_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT storage_type_uid,
    storage_type_name,
    storage_class,
    storage_parameters_json,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM storage_type]]></view_script>
			<column name="storage_type_uid" type="text" />
			<column name="storage_type_name" type="text" />
			<column name="storage_class" type="text" />
			<column name="storage_parameters_json" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_synchronization" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_synchronization AS SELECT ${view},
    synchronization.synchronization_name,
    synchronization.tenant_uid,
    synchronization.synchronization_type_uid,
    synchronization.storage_uid,
    synchronization.sync_expression,
    synchronization.sync_query,
    synchronization.sync_definition,
    synchronization.sync_priority,
    synchronization.last_run_date,
    synchronization.last_run_seconds,
    synchronization.row_instance,
    synchronization.row_lock,
    synchronization.row_owner,
    synchronization.row_seq,
    synchronization.row_guid,
    synchronization.row_version,
    synchronization.is_active,
    synchronization.created_date,
    synchronization.created_by,
    synchronization.last_updated_date,
    synchronization.last_updated_by,
    synchronization.removed_date,
    synchronization.removed_by,
    synchronization.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _synchronization_type_uid.synchronization_type_name AS synchronization_type_uid_synchronization_type_name,
    _synchronization_type_uid.sync_type AS synchronization_type_uid_sync_type,
    _synchronization_type_uid.sync_class_came AS synchronization_type_uid_sync_class_came,
    _storage_uid.storage_name AS storage_uid_storage_name,
    _storage_uid.storage_class AS storage_uid_storage_class,
    _storage_uid.storage_parameters_json AS storage_uid_storage_parameters_json
   FROM (((synchronization
     LEFT JOIN tenant _tenant_uid ON ((synchronization.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN synchronization_type _synchronization_type_uid ON ((synchronization.synchronization_type_uid = _synchronization_type_uid.synchronization_type_uid)))
     LEFT JOIN storage _storage_uid ON ((synchronization.storage_uid = _storage_uid.storage_uid)))]]></view_script>
			<column name="synchronization_uid" type="text" />
			<column name="synchronization_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="synchronization_type_uid" type="text" />
			<column name="storage_uid" type="text" />
			<column name="sync_expression" type="text" />
			<column name="sync_query" type="text" />
			<column name="sync_definition" type="text" />
			<column name="sync_priority" type="bigint" />
			<column name="last_run_date" type="timestamp" />
			<column name="last_run_seconds" type="double precision" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="synchronization_type_uid_synchronization_type_name" type="text" />
			<column name="synchronization_type_uid_sync_type" type="varchar" />
			<column name="synchronization_type_uid_sync_class_came" type="varchar" />
			<column name="storage_uid_storage_name" type="text" />
			<column name="storage_uid_storage_class" type="text" />
			<column name="storage_uid_storage_parameters_json" type="text" />
		</view>
		<view name="v_rich_synchronization_run" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_synchronization_run AS SELECT ${view},
    synchronization_run.synchronization_run_name,
    synchronization_run.synchronization_uid,
    synchronization_run.run_status,
    synchronization_run.run_time_seconds,
    synchronization_run.copied_items,
    synchronization_run.row_instance,
    synchronization_run.row_lock,
    synchronization_run.row_owner,
    synchronization_run.row_seq,
    synchronization_run.row_guid,
    synchronization_run.row_version,
    synchronization_run.is_active,
    synchronization_run.created_date,
    synchronization_run.created_by,
    synchronization_run.last_updated_date,
    synchronization_run.last_updated_by,
    synchronization_run.removed_date,
    synchronization_run.removed_by,
    synchronization_run.custom_attributes,
    _synchronization_uid.synchronization_name AS synchronization_uid_synchronization_name,
    _synchronization_uid.tenant_uid AS synchronization_uid_tenant_uid,
    _synchronization_uid.synchronization_type_uid AS synchronization_uid_synchronization_type_uid,
    _synchronization_uid.storage_uid AS synchronization_uid_storage_uid,
    _synchronization_uid.sync_expression AS synchronization_uid_sync_expression,
    _synchronization_uid.sync_query AS synchronization_uid_sync_query,
    _synchronization_uid.sync_definition AS synchronization_uid_sync_definition,
    _synchronization_uid.sync_priority AS synchronization_uid_sync_priority,
    _synchronization_uid.last_run_date AS synchronization_uid_last_run_date,
    _synchronization_uid.last_run_seconds AS synchronization_uid_last_run_seconds
   FROM (synchronization_run
     LEFT JOIN synchronization _synchronization_uid ON ((synchronization_run.synchronization_uid = _synchronization_uid.synchronization_uid)))]]></view_script>
			<column name="synchronization_run_uid" type="text" />
			<column name="synchronization_run_name" type="text" />
			<column name="synchronization_uid" type="text" />
			<column name="run_status" type="text" />
			<column name="run_time_seconds" type="double precision" />
			<column name="copied_items" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="synchronization_uid_synchronization_name" type="text" />
			<column name="synchronization_uid_tenant_uid" type="text" />
			<column name="synchronization_uid_synchronization_type_uid" type="text" />
			<column name="synchronization_uid_storage_uid" type="text" />
			<column name="synchronization_uid_sync_expression" type="text" />
			<column name="synchronization_uid_sync_query" type="text" />
			<column name="synchronization_uid_sync_definition" type="text" />
			<column name="synchronization_uid_sync_priority" type="bigint" />
			<column name="synchronization_uid_last_run_date" type="timestamp" />
			<column name="synchronization_uid_last_run_seconds" type="double precision" />
		</view>
		<view name="v_rich_synchronization_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT synchronization_type_uid,
    synchronization_type_name,
    sync_type,
    sync_class_came,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM synchronization_type]]></view_script>
			<column name="synchronization_type_uid" type="text" />
			<column name="synchronization_type_name" type="text" />
			<column name="sync_type" type="varchar" />
			<column name="sync_class_came" type="varchar" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_attribute" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_system_attribute AS SELECT ${view},
    system_attribute.system_attribute_name,
    system_attribute.system_object_uid,
    system_attribute.column_name,
    system_attribute.attribute_type,
    system_attribute.attribute_label,
    system_attribute.attribute_description,
    system_attribute.row_instance,
    system_attribute.row_lock,
    system_attribute.row_owner,
    system_attribute.row_seq,
    system_attribute.row_guid,
    system_attribute.row_version,
    system_attribute.is_active,
    system_attribute.created_date,
    system_attribute.created_by,
    system_attribute.last_updated_date,
    system_attribute.last_updated_by,
    system_attribute.removed_date,
    system_attribute.removed_by,
    system_attribute.custom_attributes,
    _system_object_uid.system_object_name AS system_object_uid_system_object_name,
    _system_object_uid.system_version_uid AS system_object_uid_system_version_uid,
    _system_object_uid.system_table_uid AS system_object_uid_system_table_uid,
    _system_object_uid.system_object_type_uid AS system_object_uid_system_object_type_uid,
    _system_object_uid.parent_system_object_uid AS system_object_uid_parent_system_object_uid,
    _system_object_uid.object_type AS system_object_uid_object_type
   FROM (system_attribute
     LEFT JOIN system_object _system_object_uid ON ((system_attribute.system_object_uid = _system_object_uid.system_object_uid)))]]></view_script>
			<column name="system_attribute_uid" type="text" />
			<column name="system_attribute_name" type="text" />
			<column name="system_object_uid" type="text" />
			<column name="column_name" type="text" />
			<column name="attribute_type" type="text" />
			<column name="attribute_label" type="text" />
			<column name="attribute_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="system_object_uid_system_object_name" type="text" />
			<column name="system_object_uid_system_version_uid" type="text" />
			<column name="system_object_uid_system_table_uid" type="text" />
			<column name="system_object_uid_system_object_type_uid" type="text" />
			<column name="system_object_uid_parent_system_object_uid" type="text" />
			<column name="system_object_uid_object_type" type="text" />
		</view>
		<view name="v_rich_system_database" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_database_uid,
    system_database_name,
    db_url,
    db_host,
    db_name,
    db_user,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_database]]></view_script>
			<column name="system_database_uid" type="text" />
			<column name="system_database_name" type="text" />
			<column name="db_url" type="text" />
			<column name="db_host" type="text" />
			<column name="db_name" type="text" />
			<column name="db_user" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_exception" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_exception_uid,
    system_exception_name,
    exception_class,
    exception_message,
    exception_stacktrace,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_exception]]></view_script>
			<column name="system_exception_uid" type="text" />
			<column name="system_exception_name" type="text" />
			<column name="exception_class" type="text" />
			<column name="exception_message" type="text" />
			<column name="exception_stacktrace" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_instance" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_system_instance AS SELECT ${view},
    system_instance.system_instance_name,
    system_instance.system_version_uid,
    system_instance.host_name,
    system_instance.host_ip,
    system_instance.local_path,
    system_instance.mode_name,
    system_instance.ticks_count,
    system_instance.row_instance,
    system_instance.row_lock,
    system_instance.row_owner,
    system_instance.row_seq,
    system_instance.row_guid,
    system_instance.row_version,
    system_instance.is_active,
    system_instance.created_date,
    system_instance.created_by,
    system_instance.last_updated_date,
    system_instance.last_updated_by,
    system_instance.removed_date,
    system_instance.removed_by,
    system_instance.custom_attributes,
    _system_version_uid.system_version_name AS system_version_uid_system_version_name,
    _system_version_uid.version_description AS system_version_uid_version_description
   FROM (system_instance
     LEFT JOIN system_version _system_version_uid ON ((system_instance.system_version_uid = _system_version_uid.system_version_uid)))]]></view_script>
			<column name="system_instance_uid" type="text" />
			<column name="system_instance_name" type="text" />
			<column name="system_version_uid" type="text" />
			<column name="host_name" type="text" />
			<column name="host_ip" type="text" />
			<column name="local_path" type="text" />
			<column name="mode_name" type="text" />
			<column name="ticks_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="system_version_uid_system_version_name" type="text" />
			<column name="system_version_uid_version_description" type="text" />
		</view>
		<view name="v_rich_system_license" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_license_uid,
    system_license_name,
    license_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_license]]></view_script>
			<column name="system_license_uid" type="text" />
			<column name="system_license_name" type="text" />
			<column name="license_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_lock" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_system_lock AS SELECT ${view},
    system_lock.system_lock_name,
    system_lock.lock_account_uid,
    system_lock.lock_comment,
    system_lock.row_instance,
    system_lock.row_lock,
    system_lock.row_owner,
    system_lock.row_seq,
    system_lock.row_guid,
    system_lock.row_version,
    system_lock.is_active,
    system_lock.created_date,
    system_lock.created_by,
    system_lock.last_updated_date,
    system_lock.last_updated_by,
    system_lock.removed_date,
    system_lock.removed_by,
    system_lock.custom_attributes,
    _lock_account_uid.account_name AS lock_account_uid_account_name,
    _lock_account_uid.tenant_uid AS lock_account_uid_tenant_uid,
    _lock_account_uid.account_type_uid AS lock_account_uid_account_type_uid,
    _lock_account_uid.account_title_uid AS lock_account_uid_account_title_uid,
    _lock_account_uid.account_division_uid AS lock_account_uid_account_division_uid,
    _lock_account_uid.account_group_uid AS lock_account_uid_account_group_uid,
    _lock_account_uid.auth_identity_uid AS lock_account_uid_auth_identity_uid,
    _lock_account_uid.account_email AS lock_account_uid_account_email,
    _lock_account_uid.display_name AS lock_account_uid_display_name,
    _lock_account_uid.is_system AS lock_account_uid_is_system
   FROM (system_lock
     LEFT JOIN account _lock_account_uid ON ((system_lock.lock_account_uid = _lock_account_uid.account_uid)))]]></view_script>
			<column name="system_lock_uid" type="text" />
			<column name="system_lock_name" type="text" />
			<column name="lock_account_uid" type="text" />
			<column name="lock_comment" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="lock_account_uid_account_name" type="text" />
			<column name="lock_account_uid_tenant_uid" type="text" />
			<column name="lock_account_uid_account_type_uid" type="text" />
			<column name="lock_account_uid_account_title_uid" type="text" />
			<column name="lock_account_uid_account_division_uid" type="text" />
			<column name="lock_account_uid_account_group_uid" type="text" />
			<column name="lock_account_uid_auth_identity_uid" type="text" />
			<column name="lock_account_uid_account_email" type="text" />
			<column name="lock_account_uid_display_name" type="text" />
			<column name="lock_account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_system_module" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_module_uid,
    system_module_name,
    system_module_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_module]]></view_script>
			<column name="system_module_uid" type="text" />
			<column name="system_module_name" type="text" />
			<column name="system_module_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_object" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_system_object AS SELECT ${view},
    system_object.system_object_name,
    system_object.system_version_uid,
    system_object.system_table_uid,
    system_object.system_object_type_uid,
    system_object.parent_system_object_uid,
    system_object.object_type,
    system_object.row_instance,
    system_object.row_lock,
    system_object.row_owner,
    system_object.row_seq,
    system_object.row_guid,
    system_object.row_version,
    system_object.is_active,
    system_object.created_date,
    system_object.created_by,
    system_object.last_updated_date,
    system_object.last_updated_by,
    system_object.removed_date,
    system_object.removed_by,
    system_object.custom_attributes,
    _system_version_uid.system_version_name AS system_version_uid_system_version_name,
    _system_version_uid.version_description AS system_version_uid_version_description,
    _system_table_uid.system_table_name AS system_table_uid_system_table_name,
    _system_table_uid.parent_system_table_uid AS system_table_uid_parent_system_table_uid,
    _system_table_uid.key_name AS system_table_uid_key_name,
    _system_table_uid.table_code AS system_table_uid_table_code,
    _system_table_uid.table_comment AS system_table_uid_table_comment,
    _system_object_type_uid.system_object_type_name AS system_object_type_uid_system_object_type_name,
    _system_object_type_uid.object_type_description AS system_object_type_uid_object_type_description
   FROM (((system_object
     LEFT JOIN system_version _system_version_uid ON ((system_object.system_version_uid = _system_version_uid.system_version_uid)))
     LEFT JOIN system_table _system_table_uid ON ((system_object.system_table_uid = _system_table_uid.system_table_uid)))
     LEFT JOIN system_object_type _system_object_type_uid ON ((system_object.system_object_type_uid = _system_object_type_uid.system_object_type_uid)))]]></view_script>
			<column name="system_object_uid" type="text" />
			<column name="system_object_name" type="text" />
			<column name="system_version_uid" type="text" />
			<column name="system_table_uid" type="text" />
			<column name="system_object_type_uid" type="text" />
			<column name="parent_system_object_uid" type="text" />
			<column name="object_type" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="system_version_uid_system_version_name" type="text" />
			<column name="system_version_uid_version_description" type="text" />
			<column name="system_table_uid_system_table_name" type="text" />
			<column name="system_table_uid_parent_system_table_uid" type="text" />
			<column name="system_table_uid_key_name" type="text" />
			<column name="system_table_uid_table_code" type="text" />
			<column name="system_table_uid_table_comment" type="text" />
			<column name="system_object_type_uid_system_object_type_name" type="text" />
			<column name="system_object_type_uid_object_type_description" type="text" />
		</view>
		<view name="v_rich_system_object_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_object_type_uid,
    system_object_type_name,
    object_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_object_type]]></view_script>
			<column name="system_object_type_uid" type="text" />
			<column name="system_object_type_name" type="text" />
			<column name="object_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_query" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_query_uid,
    system_query_name,
    time_start,
    total_query_time,
    query_seq,
    execution_counter,
    connection_counter,
    release_counter,
    current_active,
    current_idle,
    table_name,
    rows_count,
    sql,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_query]]></view_script>
			<column name="system_query_uid" type="text" />
			<column name="system_query_name" type="text" />
			<column name="time_start" type="bigint" />
			<column name="total_query_time" type="bigint" />
			<column name="query_seq" type="bigint" />
			<column name="execution_counter" type="bigint" />
			<column name="connection_counter" type="bigint" />
			<column name="release_counter" type="bigint" />
			<column name="current_active" type="bigint" />
			<column name="current_idle" type="bigint" />
			<column name="table_name" type="text" />
			<column name="rows_count" type="bigint" />
			<column name="sql" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_request" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_system_request AS SELECT ${view},
    system_request.system_request_name,
    system_request.account_uid,
    system_request.request_method,
    system_request.request_url,
    system_request.request_body_size,
    system_request.request_host,
    system_request.request_time,
    system_request.response_code,
    system_request.row_instance,
    system_request.row_lock,
    system_request.row_owner,
    system_request.row_seq,
    system_request.row_guid,
    system_request.row_version,
    system_request.is_active,
    system_request.created_date,
    system_request.created_by,
    system_request.last_updated_date,
    system_request.last_updated_by,
    system_request.removed_date,
    system_request.removed_by,
    system_request.custom_attributes,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM (system_request
     LEFT JOIN account _account_uid ON ((system_request.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="system_request_uid" type="text" />
			<column name="system_request_name" type="text" />
			<column name="account_uid" type="text" />
			<column name="request_method" type="text" />
			<column name="request_url" type="text" />
			<column name="request_body_size" type="bigint" />
			<column name="request_host" type="text" />
			<column name="request_time" type="bigint" />
			<column name="response_code" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_system_setting" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_setting_uid,
    system_setting_name,
    setting_value,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_setting]]></view_script>
			<column name="system_setting_uid" type="text" />
			<column name="system_setting_name" type="text" />
			<column name="setting_value" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_setting_account" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_system_setting_account AS SELECT ${view},
    system_setting_account.system_setting_account_name,
    system_setting_account.account_uid,
    system_setting_account.setting_value,
    system_setting_account.is_public,
    system_setting_account.row_instance,
    system_setting_account.row_lock,
    system_setting_account.row_owner,
    system_setting_account.row_seq,
    system_setting_account.row_guid,
    system_setting_account.row_version,
    system_setting_account.is_active,
    system_setting_account.created_date,
    system_setting_account.created_by,
    system_setting_account.last_updated_date,
    system_setting_account.last_updated_by,
    system_setting_account.removed_date,
    system_setting_account.removed_by,
    system_setting_account.custom_attributes,
    _system_setting_account_uid.account_name AS system_setting_account_uid_account_name,
    _system_setting_account_uid.tenant_uid AS system_setting_account_uid_tenant_uid,
    _system_setting_account_uid.account_type_uid AS system_setting_account_uid_account_type_uid,
    _system_setting_account_uid.account_title_uid AS system_setting_account_uid_account_title_uid,
    _system_setting_account_uid.account_division_uid AS system_setting_account_uid_account_division_uid,
    _system_setting_account_uid.account_group_uid AS system_setting_account_uid_account_group_uid,
    _system_setting_account_uid.auth_identity_uid AS system_setting_account_uid_auth_identity_uid,
    _system_setting_account_uid.account_email AS system_setting_account_uid_account_email,
    _system_setting_account_uid.display_name AS system_setting_account_uid_display_name,
    _system_setting_account_uid.is_system AS system_setting_account_uid_is_system,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((system_setting_account
     LEFT JOIN account _system_setting_account_uid ON ((${view} = _system_setting_account_uid.account_uid)))
     LEFT JOIN account _account_uid ON ((system_setting_account.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="system_setting_account_uid" type="text" />
			<column name="system_setting_account_name" type="text" />
			<column name="account_uid" type="text" />
			<column name="setting_value" type="text" />
			<column name="is_public" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="system_setting_account_uid_account_name" type="text" />
			<column name="system_setting_account_uid_tenant_uid" type="text" />
			<column name="system_setting_account_uid_account_type_uid" type="text" />
			<column name="system_setting_account_uid_account_title_uid" type="text" />
			<column name="system_setting_account_uid_account_division_uid" type="text" />
			<column name="system_setting_account_uid_account_group_uid" type="text" />
			<column name="system_setting_account_uid_auth_identity_uid" type="text" />
			<column name="system_setting_account_uid_account_email" type="text" />
			<column name="system_setting_account_uid_display_name" type="text" />
			<column name="system_setting_account_uid_is_system" type="bigint" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_system_state" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_state_uid,
    system_state_name,
    mem_free,
    mem_max,
    objects_count,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_state]]></view_script>
			<column name="system_state_uid" type="text" />
			<column name="system_state_name" type="text" />
			<column name="mem_free" type="bigint" />
			<column name="mem_max" type="bigint" />
			<column name="objects_count" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_table" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_table_uid,
    system_table_name,
    parent_system_table_uid,
    key_name,
    table_code,
    table_comment,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_table]]></view_script>
			<column name="system_table_uid" type="text" />
			<column name="system_table_name" type="text" />
			<column name="parent_system_table_uid" type="text" />
			<column name="key_name" type="text" />
			<column name="table_code" type="text" />
			<column name="table_comment" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_thread" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_thread_uid,
    system_thread_name,
    thread_name,
    parent_object,
    ticks_count,
    sleep_time,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_thread]]></view_script>
			<column name="system_thread_uid" type="text" />
			<column name="system_thread_name" type="text" />
			<column name="thread_name" type="text" />
			<column name="parent_object" type="text" />
			<column name="ticks_count" type="bigint" />
			<column name="sleep_time" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_system_version" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT system_version_uid,
    system_version_name,
    version_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM system_version]]></view_script>
			<column name="system_version_uid" type="text" />
			<column name="system_version_name" type="text" />
			<column name="version_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_tenant" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_tenant AS SELECT ${view},
    tenant.tenant_name,
    tenant.country_uid,
    tenant.tenant_type_uid,
    tenant.tenant_category_uid,
    tenant.tenant_code,
    tenant.tenant_description,
    tenant.start_date,
    tenant.end_date,
    tenant.is_internal,
    tenant.is_system,
    tenant.is_test,
    tenant.account_uid,
    tenant.row_instance,
    tenant.row_lock,
    tenant.row_owner,
    tenant.row_seq,
    tenant.row_guid,
    tenant.row_version,
    tenant.is_active,
    tenant.created_date,
    tenant.created_by,
    tenant.last_updated_date,
    tenant.last_updated_by,
    tenant.removed_date,
    tenant.removed_by,
    tenant.custom_attributes,
    _country_uid.country_name AS country_uid_country_name,
    _country_uid.continent_name AS country_uid_continent_name,
    _country_uid.continent_code AS country_uid_continent_code,
    _country_uid.country_iso3 AS country_uid_country_iso3,
    _country_uid.country_code AS country_uid_country_code,
    _country_uid.phone_code AS country_uid_phone_code,
    _country_uid.currency_code AS country_uid_currency_code,
    _country_uid.capital_name AS country_uid_capital_name,
    _country_uid.region_name AS country_uid_region_name,
    _country_uid.subregion_name AS country_uid_subregion_name,
    _country_uid.region_code AS country_uid_region_code,
    _country_uid.latitude AS country_uid_latitude,
    _country_uid.longitude AS country_uid_longitude,
    _country_uid.currency_name AS country_uid_currency_name,
    _country_uid.population AS country_uid_population,
    _country_uid.languages AS country_uid_languages,
    _country_uid.area AS country_uid_area,
    _country_uid.bar_code AS country_uid_bar_code,
    _country_uid.top_level_domain AS country_uid_top_level_domain,
    _country_uid.is_focused AS country_uid_is_focused,
    _tenant_type_uid.tenant_type_name AS tenant_type_uid_tenant_type_name,
    _tenant_type_uid.tenant_type_description AS tenant_type_uid_tenant_type_description,
    _tenant_category_uid.tenant_category_name AS tenant_category_uid_tenant_category_name,
    _tenant_category_uid.tenant_category_description AS tenant_category_uid_tenant_category_description,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system
   FROM ((((tenant
     LEFT JOIN country _country_uid ON ((tenant.country_uid = _country_uid.country_uid)))
     LEFT JOIN tenant_type _tenant_type_uid ON ((tenant.tenant_type_uid = _tenant_type_uid.tenant_type_uid)))
     LEFT JOIN tenant_category _tenant_category_uid ON ((tenant.tenant_category_uid = _tenant_category_uid.tenant_category_uid)))
     LEFT JOIN account _account_uid ON ((tenant.account_uid = _account_uid.account_uid)))]]></view_script>
			<column name="tenant_uid" type="text" />
			<column name="tenant_name" type="text" />
			<column name="country_uid" type="text" />
			<column name="tenant_type_uid" type="text" />
			<column name="tenant_category_uid" type="text" />
			<column name="tenant_code" type="text" />
			<column name="tenant_description" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="is_internal" type="bigint" />
			<column name="is_system" type="bigint" />
			<column name="is_test" type="bigint" />
			<column name="account_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="country_uid_country_name" type="text" />
			<column name="country_uid_continent_name" type="text" />
			<column name="country_uid_continent_code" type="text" />
			<column name="country_uid_country_iso3" type="text" />
			<column name="country_uid_country_code" type="text" />
			<column name="country_uid_phone_code" type="text" />
			<column name="country_uid_currency_code" type="text" />
			<column name="country_uid_capital_name" type="text" />
			<column name="country_uid_region_name" type="text" />
			<column name="country_uid_subregion_name" type="text" />
			<column name="country_uid_region_code" type="text" />
			<column name="country_uid_latitude" type="text" />
			<column name="country_uid_longitude" type="text" />
			<column name="country_uid_currency_name" type="text" />
			<column name="country_uid_population" type="text" />
			<column name="country_uid_languages" type="text" />
			<column name="country_uid_area" type="text" />
			<column name="country_uid_bar_code" type="text" />
			<column name="country_uid_top_level_domain" type="text" />
			<column name="country_uid_is_focused" type="bigint" />
			<column name="tenant_type_uid_tenant_type_name" type="text" />
			<column name="tenant_type_uid_tenant_type_description" type="text" />
			<column name="tenant_category_uid_tenant_category_name" type="text" />
			<column name="tenant_category_uid_tenant_category_description" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
		</view>
		<view name="v_rich_tenant_account" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_tenant_account AS SELECT ${view},
    tenant_account.tenant_account_name,
    tenant_account.tenant_uid,
    tenant_account.account_uid,
    tenant_account.tenant_role_uid,
    tenant_account.row_instance,
    tenant_account.row_lock,
    tenant_account.row_owner,
    tenant_account.row_seq,
    tenant_account.row_guid,
    tenant_account.row_version,
    tenant_account.is_active,
    tenant_account.created_date,
    tenant_account.created_by,
    tenant_account.last_updated_date,
    tenant_account.last_updated_by,
    tenant_account.removed_date,
    tenant_account.removed_by,
    tenant_account.custom_attributes,
    _tenant_account_uid.account_name AS tenant_account_uid_account_name,
    _tenant_account_uid.tenant_uid AS tenant_account_uid_tenant_uid,
    _tenant_account_uid.account_type_uid AS tenant_account_uid_account_type_uid,
    _tenant_account_uid.account_title_uid AS tenant_account_uid_account_title_uid,
    _tenant_account_uid.account_division_uid AS tenant_account_uid_account_division_uid,
    _tenant_account_uid.account_group_uid AS tenant_account_uid_account_group_uid,
    _tenant_account_uid.auth_identity_uid AS tenant_account_uid_auth_identity_uid,
    _tenant_account_uid.account_email AS tenant_account_uid_account_email,
    _tenant_account_uid.display_name AS tenant_account_uid_display_name,
    _tenant_account_uid.is_system AS tenant_account_uid_is_system,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _tenant_role_uid.tenant_role_name AS tenant_role_uid_tenant_role_name,
    _tenant_role_uid.role_description AS tenant_role_uid_role_description
   FROM ((((tenant_account
     LEFT JOIN account _tenant_account_uid ON ((${view} = _tenant_account_uid.account_uid)))
     LEFT JOIN tenant _tenant_uid ON ((tenant_account.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((tenant_account.account_uid = _account_uid.account_uid)))
     LEFT JOIN tenant_role _tenant_role_uid ON ((tenant_account.tenant_role_uid = _tenant_role_uid.tenant_role_uid)))]]></view_script>
			<column name="tenant_account_uid" type="text" />
			<column name="tenant_account_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="tenant_role_uid" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_account_uid_account_name" type="text" />
			<column name="tenant_account_uid_tenant_uid" type="text" />
			<column name="tenant_account_uid_account_type_uid" type="text" />
			<column name="tenant_account_uid_account_title_uid" type="text" />
			<column name="tenant_account_uid_account_division_uid" type="text" />
			<column name="tenant_account_uid_account_group_uid" type="text" />
			<column name="tenant_account_uid_auth_identity_uid" type="text" />
			<column name="tenant_account_uid_account_email" type="text" />
			<column name="tenant_account_uid_display_name" type="text" />
			<column name="tenant_account_uid_is_system" type="bigint" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="tenant_role_uid_tenant_role_name" type="text" />
			<column name="tenant_role_uid_role_description" type="text" />
		</view>
		<view name="v_rich_tenant_category" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT tenant_category_uid,
    tenant_category_name,
    tenant_category_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM tenant_category]]></view_script>
			<column name="tenant_category_uid" type="text" />
			<column name="tenant_category_name" type="text" />
			<column name="tenant_category_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_tenant_country" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_tenant_country AS SELECT ${view},
    tenant_country.tenant_country_name,
    tenant_country.country_uid,
    tenant_country.tenant_uid,
    tenant_country.country_priority,
    tenant_country.row_instance,
    tenant_country.row_lock,
    tenant_country.row_owner,
    tenant_country.row_seq,
    tenant_country.row_guid,
    tenant_country.row_version,
    tenant_country.is_active,
    tenant_country.created_date,
    tenant_country.created_by,
    tenant_country.last_updated_date,
    tenant_country.last_updated_by,
    tenant_country.removed_date,
    tenant_country.removed_by,
    tenant_country.custom_attributes,
    _tenant_country_uid.country_name AS tenant_country_uid_country_name,
    _tenant_country_uid.continent_name AS tenant_country_uid_continent_name,
    _tenant_country_uid.continent_code AS tenant_country_uid_continent_code,
    _tenant_country_uid.country_iso3 AS tenant_country_uid_country_iso3,
    _tenant_country_uid.country_code AS tenant_country_uid_country_code,
    _tenant_country_uid.phone_code AS tenant_country_uid_phone_code,
    _tenant_country_uid.currency_code AS tenant_country_uid_currency_code,
    _tenant_country_uid.capital_name AS tenant_country_uid_capital_name,
    _tenant_country_uid.region_name AS tenant_country_uid_region_name,
    _tenant_country_uid.subregion_name AS tenant_country_uid_subregion_name,
    _tenant_country_uid.region_code AS tenant_country_uid_region_code,
    _tenant_country_uid.latitude AS tenant_country_uid_latitude,
    _tenant_country_uid.longitude AS tenant_country_uid_longitude,
    _tenant_country_uid.currency_name AS tenant_country_uid_currency_name,
    _tenant_country_uid.population AS tenant_country_uid_population,
    _tenant_country_uid.languages AS tenant_country_uid_languages,
    _tenant_country_uid.area AS tenant_country_uid_area,
    _tenant_country_uid.bar_code AS tenant_country_uid_bar_code,
    _tenant_country_uid.top_level_domain AS tenant_country_uid_top_level_domain,
    _tenant_country_uid.is_focused AS tenant_country_uid_is_focused,
    _country_uid.country_name AS country_uid_country_name,
    _country_uid.continent_name AS country_uid_continent_name,
    _country_uid.continent_code AS country_uid_continent_code,
    _country_uid.country_iso3 AS country_uid_country_iso3,
    _country_uid.country_code AS country_uid_country_code,
    _country_uid.phone_code AS country_uid_phone_code,
    _country_uid.currency_code AS country_uid_currency_code,
    _country_uid.capital_name AS country_uid_capital_name,
    _country_uid.region_name AS country_uid_region_name,
    _country_uid.subregion_name AS country_uid_subregion_name,
    _country_uid.region_code AS country_uid_region_code,
    _country_uid.latitude AS country_uid_latitude,
    _country_uid.longitude AS country_uid_longitude,
    _country_uid.currency_name AS country_uid_currency_name,
    _country_uid.population AS country_uid_population,
    _country_uid.languages AS country_uid_languages,
    _country_uid.area AS country_uid_area,
    _country_uid.bar_code AS country_uid_bar_code,
    _country_uid.top_level_domain AS country_uid_top_level_domain,
    _country_uid.is_focused AS country_uid_is_focused,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid
   FROM (((tenant_country
     LEFT JOIN country _tenant_country_uid ON ((${view} = _tenant_country_uid.country_uid)))
     LEFT JOIN country _country_uid ON ((tenant_country.country_uid = _country_uid.country_uid)))
     LEFT JOIN tenant _tenant_uid ON ((tenant_country.tenant_uid = _tenant_uid.tenant_uid)))]]></view_script>
			<column name="tenant_country_uid" type="text" />
			<column name="tenant_country_name" type="text" />
			<column name="country_uid" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="country_priority" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_country_uid_country_name" type="text" />
			<column name="tenant_country_uid_continent_name" type="text" />
			<column name="tenant_country_uid_continent_code" type="text" />
			<column name="tenant_country_uid_country_iso3" type="text" />
			<column name="tenant_country_uid_country_code" type="text" />
			<column name="tenant_country_uid_phone_code" type="text" />
			<column name="tenant_country_uid_currency_code" type="text" />
			<column name="tenant_country_uid_capital_name" type="text" />
			<column name="tenant_country_uid_region_name" type="text" />
			<column name="tenant_country_uid_subregion_name" type="text" />
			<column name="tenant_country_uid_region_code" type="text" />
			<column name="tenant_country_uid_latitude" type="text" />
			<column name="tenant_country_uid_longitude" type="text" />
			<column name="tenant_country_uid_currency_name" type="text" />
			<column name="tenant_country_uid_population" type="text" />
			<column name="tenant_country_uid_languages" type="text" />
			<column name="tenant_country_uid_area" type="text" />
			<column name="tenant_country_uid_bar_code" type="text" />
			<column name="tenant_country_uid_top_level_domain" type="text" />
			<column name="tenant_country_uid_is_focused" type="bigint" />
			<column name="country_uid_country_name" type="text" />
			<column name="country_uid_continent_name" type="text" />
			<column name="country_uid_continent_code" type="text" />
			<column name="country_uid_country_iso3" type="text" />
			<column name="country_uid_country_code" type="text" />
			<column name="country_uid_phone_code" type="text" />
			<column name="country_uid_currency_code" type="text" />
			<column name="country_uid_capital_name" type="text" />
			<column name="country_uid_region_name" type="text" />
			<column name="country_uid_subregion_name" type="text" />
			<column name="country_uid_region_code" type="text" />
			<column name="country_uid_latitude" type="text" />
			<column name="country_uid_longitude" type="text" />
			<column name="country_uid_currency_name" type="text" />
			<column name="country_uid_population" type="text" />
			<column name="country_uid_languages" type="text" />
			<column name="country_uid_area" type="text" />
			<column name="country_uid_bar_code" type="text" />
			<column name="country_uid_top_level_domain" type="text" />
			<column name="country_uid_is_focused" type="bigint" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
		</view>
		<view name="v_rich_tenant_license" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_tenant_license AS SELECT ${view},
    tenant_license.tenant_license_name,
    tenant_license.tenant_uid,
    tenant_license.system_license_uid,
    tenant_license.start_date,
    tenant_license.end_date,
    tenant_license.is_approved,
    tenant_license.row_instance,
    tenant_license.row_lock,
    tenant_license.row_owner,
    tenant_license.row_seq,
    tenant_license.row_guid,
    tenant_license.row_version,
    tenant_license.is_active,
    tenant_license.created_date,
    tenant_license.created_by,
    tenant_license.last_updated_date,
    tenant_license.last_updated_by,
    tenant_license.removed_date,
    tenant_license.removed_by,
    tenant_license.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _system_license_uid.system_license_name AS system_license_uid_system_license_name,
    _system_license_uid.license_description AS system_license_uid_license_description
   FROM ((tenant_license
     LEFT JOIN tenant _tenant_uid ON ((tenant_license.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN system_license _system_license_uid ON ((tenant_license.system_license_uid = _system_license_uid.system_license_uid)))]]></view_script>
			<column name="tenant_license_uid" type="text" />
			<column name="tenant_license_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="system_license_uid" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="is_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="system_license_uid_system_license_name" type="text" />
			<column name="system_license_uid_license_description" type="text" />
		</view>
		<view name="v_rich_tenant_payment" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_tenant_payment AS SELECT ${view},
    tenant_payment.tenant_payment_name,
    tenant_payment.tenant_uid,
    tenant_payment.account_uid,
    tenant_payment.currency_uid,
    tenant_payment.tenant_payment_type_uid,
    tenant_payment.start_date,
    tenant_payment.end_date,
    tenant_payment.payment_value,
    tenant_payment.source_number,
    tenant_payment.source_reference,
    tenant_payment.is_approved,
    tenant_payment.row_instance,
    tenant_payment.row_lock,
    tenant_payment.row_owner,
    tenant_payment.row_seq,
    tenant_payment.row_guid,
    tenant_payment.row_version,
    tenant_payment.is_active,
    tenant_payment.created_date,
    tenant_payment.created_by,
    tenant_payment.last_updated_date,
    tenant_payment.last_updated_by,
    tenant_payment.removed_date,
    tenant_payment.removed_by,
    tenant_payment.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _currency_uid.currency_name AS currency_uid_currency_name,
    _currency_uid.is_focused AS currency_uid_is_focused,
    _tenant_payment_type_uid.tenant_payment_type_name AS tenant_payment_type_uid_tenant_payment_type_name
   FROM ((((tenant_payment
     LEFT JOIN tenant _tenant_uid ON ((tenant_payment.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((tenant_payment.account_uid = _account_uid.account_uid)))
     LEFT JOIN currency _currency_uid ON ((tenant_payment.currency_uid = _currency_uid.currency_uid)))
     LEFT JOIN tenant_payment_type _tenant_payment_type_uid ON ((tenant_payment.tenant_payment_type_uid = _tenant_payment_type_uid.tenant_payment_type_uid)))]]></view_script>
			<column name="tenant_payment_uid" type="text" />
			<column name="tenant_payment_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="currency_uid" type="text" />
			<column name="tenant_payment_type_uid" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="payment_value" type="double precision" />
			<column name="source_number" type="text" />
			<column name="source_reference" type="text" />
			<column name="is_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="currency_uid_currency_name" type="text" />
			<column name="currency_uid_is_focused" type="bigint" />
			<column name="tenant_payment_type_uid_tenant_payment_type_name" type="text" />
		</view>
		<view name="v_rich_tenant_payment_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT tenant_payment_type_uid,
    tenant_payment_type_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM tenant_payment_type]]></view_script>
			<column name="tenant_payment_type_uid" type="text" />
			<column name="tenant_payment_type_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_tenant_role" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT tenant_role_uid,
    tenant_role_name,
    role_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM tenant_role]]></view_script>
			<column name="tenant_role_uid" type="text" />
			<column name="tenant_role_name" type="text" />
			<column name="role_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_tenant_status" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT tenant_status_uid,
    tenant_status_name,
    tenant_status_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM tenant_status]]></view_script>
			<column name="tenant_status_uid" type="text" />
			<column name="tenant_status_name" type="text" />
			<column name="tenant_status_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_tenant_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT tenant_type_uid,
    tenant_type_name,
    tenant_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM tenant_type]]></view_script>
			<column name="tenant_type_uid" type="text" />
			<column name="tenant_type_name" type="text" />
			<column name="tenant_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_time_approval" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_time_approval AS SELECT ${view},
    time_approval.time_approval_name,
    time_approval.tenant_uid,
    time_approval.account_uid,
    time_approval.time_entry_uid,
    time_approval.approval_comment,
    time_approval.row_instance,
    time_approval.row_lock,
    time_approval.row_owner,
    time_approval.row_seq,
    time_approval.row_guid,
    time_approval.row_version,
    time_approval.is_active,
    time_approval.created_date,
    time_approval.created_by,
    time_approval.last_updated_date,
    time_approval.last_updated_by,
    time_approval.removed_date,
    time_approval.removed_by,
    time_approval.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _time_entry_uid.time_entry_name AS time_entry_uid_time_entry_name,
    _time_entry_uid.time_submit_uid AS time_entry_uid_time_submit_uid,
    _time_entry_uid.tenant_uid AS time_entry_uid_tenant_uid,
    _time_entry_uid.account_uid AS time_entry_uid_account_uid,
    _time_entry_uid.project_instance_uid AS time_entry_uid_project_instance_uid,
    _time_entry_uid.project_milestone_uid AS time_entry_uid_project_milestone_uid,
    _time_entry_uid.period_uid AS time_entry_uid_period_uid,
    _time_entry_uid.invoice_instance_uid AS time_entry_uid_invoice_instance_uid,
    _time_entry_uid.entry_period AS time_entry_uid_entry_period,
    _time_entry_uid.entry_note AS time_entry_uid_entry_note,
    _time_entry_uid.lock_row AS time_entry_uid_lock_row,
    _time_entry_uid.start_date AS time_entry_uid_start_date,
    _time_entry_uid.end_date AS time_entry_uid_end_date,
    _time_entry_uid.entry_minutes AS time_entry_uid_entry_minutes,
    _time_entry_uid.is_approved AS time_entry_uid_is_approved
   FROM (((time_approval
     LEFT JOIN tenant _tenant_uid ON ((time_approval.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((time_approval.account_uid = _account_uid.account_uid)))
     LEFT JOIN time_entry _time_entry_uid ON ((time_approval.time_entry_uid = _time_entry_uid.time_entry_uid)))]]></view_script>
			<column name="time_approval_uid" type="text" />
			<column name="time_approval_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="time_entry_uid" type="text" />
			<column name="approval_comment" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="time_entry_uid_time_entry_name" type="text" />
			<column name="time_entry_uid_time_submit_uid" type="text" />
			<column name="time_entry_uid_tenant_uid" type="text" />
			<column name="time_entry_uid_account_uid" type="text" />
			<column name="time_entry_uid_project_instance_uid" type="text" />
			<column name="time_entry_uid_project_milestone_uid" type="text" />
			<column name="time_entry_uid_period_uid" type="text" />
			<column name="time_entry_uid_invoice_instance_uid" type="text" />
			<column name="time_entry_uid_entry_period" type="text" />
			<column name="time_entry_uid_entry_note" type="text" />
			<column name="time_entry_uid_lock_row" type="text" />
			<column name="time_entry_uid_start_date" type="timestamp" />
			<column name="time_entry_uid_end_date" type="timestamp" />
			<column name="time_entry_uid_entry_minutes" type="bigint" />
			<column name="time_entry_uid_is_approved" type="bigint" />
		</view>
		<view name="v_rich_time_entry" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_time_entry AS SELECT ${view},
    time_entry.time_entry_name,
    time_entry.time_submit_uid,
    time_entry.tenant_uid,
    time_entry.account_uid,
    time_entry.project_instance_uid,
    time_entry.project_milestone_uid,
    time_entry.period_uid,
    time_entry.invoice_instance_uid,
    time_entry.entry_period,
    time_entry.entry_note,
    time_entry.lock_row,
    time_entry.start_date,
    time_entry.end_date,
    time_entry.entry_minutes,
    time_entry.is_approved,
    time_entry.row_instance,
    time_entry.row_lock,
    time_entry.row_owner,
    time_entry.row_seq,
    time_entry.row_guid,
    time_entry.row_version,
    time_entry.is_active,
    time_entry.created_date,
    time_entry.created_by,
    time_entry.last_updated_date,
    time_entry.last_updated_by,
    time_entry.removed_date,
    time_entry.removed_by,
    time_entry.custom_attributes,
    _time_submit_uid.time_submit_name AS time_submit_uid_time_submit_name,
    _time_submit_uid.tenant_uid AS time_submit_uid_tenant_uid,
    _time_submit_uid.account_uid AS time_submit_uid_account_uid,
    _time_submit_uid.period_uid AS time_submit_uid_period_uid,
    _time_submit_uid.time_submit_description AS time_submit_uid_time_submit_description,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _project_instance_uid.project_instance_name AS project_instance_uid_project_instance_name,
    _project_instance_uid.tenant_uid AS project_instance_uid_tenant_uid,
    _project_instance_uid.client_uid AS project_instance_uid_client_uid,
    _project_instance_uid.project_type_uid AS project_instance_uid_project_type_uid,
    _project_instance_uid.manager_account_uid AS project_instance_uid_manager_account_uid,
    _project_instance_uid.project_group_uid AS project_instance_uid_project_group_uid,
    _project_instance_uid.project_code AS project_instance_uid_project_code,
    _project_instance_uid.project_description AS project_instance_uid_project_description,
    _project_instance_uid.is_billable AS project_instance_uid_is_billable,
    _project_instance_uid.start_date AS project_instance_uid_start_date,
    _project_instance_uid.end_date AS project_instance_uid_end_date,
    _project_instance_uid.current_billed AS project_instance_uid_current_billed,
    _project_instance_uid.budget AS project_instance_uid_budget,
    _project_milestone_uid.project_milestone_name AS project_milestone_uid_project_milestone_name,
    _project_milestone_uid.tenant_uid AS project_milestone_uid_tenant_uid,
    _project_milestone_uid.client_uid AS project_milestone_uid_client_uid,
    _project_milestone_uid.project_instance_uid AS project_milestone_uid_project_instance_uid,
    _project_milestone_uid.project_budget_uid AS project_milestone_uid_project_budget_uid,
    _project_milestone_uid.start_date AS project_milestone_uid_start_date,
    _project_milestone_uid.end_date AS project_milestone_uid_end_date,
    _project_milestone_uid.status_name AS project_milestone_uid_status_name,
    _period_uid.period_name AS period_uid_period_name,
    _period_uid.period_number AS period_uid_period_number,
    _period_uid.period_type AS period_uid_period_type,
    _period_uid.period_start_time AS period_uid_period_start_time,
    _period_uid.period_end_time AS period_uid_period_end_time,
    _period_uid.period_year AS period_uid_period_year,
    _period_uid.period_quarter AS period_uid_period_quarter,
    _period_uid.period_month AS period_uid_period_month,
    _period_uid.period_week AS period_uid_period_week,
    _period_uid.period_day AS period_uid_period_day,
    _invoice_instance_uid.invoice_instance_name AS invoice_instance_uid_invoice_instance_name,
    _invoice_instance_uid.tenant_uid AS invoice_instance_uid_tenant_uid,
    _invoice_instance_uid.account_uid AS invoice_instance_uid_account_uid,
    _invoice_instance_uid.invoice_flow_uid AS invoice_instance_uid_invoice_flow_uid,
    _invoice_instance_uid.invoice_status_uid AS invoice_instance_uid_invoice_status_uid,
    _invoice_instance_uid.invoice_category_uid AS invoice_instance_uid_invoice_category_uid,
    _invoice_instance_uid.invoice_type_uid AS invoice_instance_uid_invoice_type_uid,
    _invoice_instance_uid.period_uid AS invoice_instance_uid_period_uid,
    _invoice_instance_uid.currency_uid AS invoice_instance_uid_currency_uid,
    _invoice_instance_uid.invoice_number AS invoice_instance_uid_invoice_number,
    _invoice_instance_uid.invoice_details AS invoice_instance_uid_invoice_details,
    _invoice_instance_uid.invoice_amount_net AS invoice_instance_uid_invoice_amount_net,
    _invoice_instance_uid.invoice_amount_tax AS invoice_instance_uid_invoice_amount_tax,
    _invoice_instance_uid.invoice_amount_gross AS invoice_instance_uid_invoice_amount_gross
   FROM (((((((time_entry
     LEFT JOIN time_submit _time_submit_uid ON ((time_entry.time_submit_uid = _time_submit_uid.time_submit_uid)))
     LEFT JOIN tenant _tenant_uid ON ((time_entry.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((time_entry.account_uid = _account_uid.account_uid)))
     LEFT JOIN project_instance _project_instance_uid ON ((time_entry.project_instance_uid = _project_instance_uid.project_instance_uid)))
     LEFT JOIN project_milestone _project_milestone_uid ON ((time_entry.project_milestone_uid = _project_milestone_uid.project_milestone_uid)))
     LEFT JOIN period _period_uid ON ((time_entry.period_uid = _period_uid.period_uid)))
     LEFT JOIN invoice_instance _invoice_instance_uid ON ((time_entry.invoice_instance_uid = _invoice_instance_uid.invoice_instance_uid)))]]></view_script>
			<column name="time_entry_uid" type="text" />
			<column name="time_entry_name" type="text" />
			<column name="time_submit_uid" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="project_instance_uid" type="text" />
			<column name="project_milestone_uid" type="text" />
			<column name="period_uid" type="text" />
			<column name="invoice_instance_uid" type="text" />
			<column name="entry_period" type="text" />
			<column name="entry_note" type="text" />
			<column name="lock_row" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="entry_minutes" type="bigint" />
			<column name="is_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="time_submit_uid_time_submit_name" type="text" />
			<column name="time_submit_uid_tenant_uid" type="text" />
			<column name="time_submit_uid_account_uid" type="text" />
			<column name="time_submit_uid_period_uid" type="text" />
			<column name="time_submit_uid_time_submit_description" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="project_instance_uid_project_instance_name" type="text" />
			<column name="project_instance_uid_tenant_uid" type="text" />
			<column name="project_instance_uid_client_uid" type="text" />
			<column name="project_instance_uid_project_type_uid" type="text" />
			<column name="project_instance_uid_manager_account_uid" type="text" />
			<column name="project_instance_uid_project_group_uid" type="text" />
			<column name="project_instance_uid_project_code" type="text" />
			<column name="project_instance_uid_project_description" type="text" />
			<column name="project_instance_uid_is_billable" type="bigint" />
			<column name="project_instance_uid_start_date" type="timestamp" />
			<column name="project_instance_uid_end_date" type="timestamp" />
			<column name="project_instance_uid_current_billed" type="double precision" />
			<column name="project_instance_uid_budget" type="double precision" />
			<column name="project_milestone_uid_project_milestone_name" type="text" />
			<column name="project_milestone_uid_tenant_uid" type="text" />
			<column name="project_milestone_uid_client_uid" type="text" />
			<column name="project_milestone_uid_project_instance_uid" type="text" />
			<column name="project_milestone_uid_project_budget_uid" type="text" />
			<column name="project_milestone_uid_start_date" type="timestamp" />
			<column name="project_milestone_uid_end_date" type="timestamp" />
			<column name="project_milestone_uid_status_name" type="text" />
			<column name="period_uid_period_name" type="text" />
			<column name="period_uid_period_number" type="bigint" />
			<column name="period_uid_period_type" type="text" />
			<column name="period_uid_period_start_time" type="timestamp" />
			<column name="period_uid_period_end_time" type="timestamp" />
			<column name="period_uid_period_year" type="bigint" />
			<column name="period_uid_period_quarter" type="bigint" />
			<column name="period_uid_period_month" type="bigint" />
			<column name="period_uid_period_week" type="bigint" />
			<column name="period_uid_period_day" type="bigint" />
			<column name="invoice_instance_uid_invoice_instance_name" type="text" />
			<column name="invoice_instance_uid_tenant_uid" type="text" />
			<column name="invoice_instance_uid_account_uid" type="text" />
			<column name="invoice_instance_uid_invoice_flow_uid" type="text" />
			<column name="invoice_instance_uid_invoice_status_uid" type="text" />
			<column name="invoice_instance_uid_invoice_category_uid" type="text" />
			<column name="invoice_instance_uid_invoice_type_uid" type="text" />
			<column name="invoice_instance_uid_period_uid" type="text" />
			<column name="invoice_instance_uid_currency_uid" type="text" />
			<column name="invoice_instance_uid_invoice_number" type="text" />
			<column name="invoice_instance_uid_invoice_details" type="text" />
			<column name="invoice_instance_uid_invoice_amount_net" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_tax" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_gross" type="double precision" />
		</view>
		<view name="v_rich_time_entry_final" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_time_entry_final AS SELECT ${view},
    time_entry_final.time_entry_final_name,
    time_entry_final.tenant_uid,
    time_entry_final.account_uid,
    time_entry_final.project_instance_uid,
    time_entry_final.project_milestone_uid,
    time_entry_final.invoice_instance_uid,
    time_entry_final.entry_period,
    time_entry_final.entry_note,
    time_entry_final.lock_uid,
    time_entry_final.start_date,
    time_entry_final.end_date,
    time_entry_final.entry_minutes,
    time_entry_final.is_approved,
    time_entry_final.row_instance,
    time_entry_final.row_lock,
    time_entry_final.row_owner,
    time_entry_final.row_seq,
    time_entry_final.row_guid,
    time_entry_final.row_version,
    time_entry_final.is_active,
    time_entry_final.created_date,
    time_entry_final.created_by,
    time_entry_final.last_updated_date,
    time_entry_final.last_updated_by,
    time_entry_final.removed_date,
    time_entry_final.removed_by,
    time_entry_final.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _project_instance_uid.project_instance_name AS project_instance_uid_project_instance_name,
    _project_instance_uid.tenant_uid AS project_instance_uid_tenant_uid,
    _project_instance_uid.client_uid AS project_instance_uid_client_uid,
    _project_instance_uid.project_type_uid AS project_instance_uid_project_type_uid,
    _project_instance_uid.manager_account_uid AS project_instance_uid_manager_account_uid,
    _project_instance_uid.project_group_uid AS project_instance_uid_project_group_uid,
    _project_instance_uid.project_code AS project_instance_uid_project_code,
    _project_instance_uid.project_description AS project_instance_uid_project_description,
    _project_instance_uid.is_billable AS project_instance_uid_is_billable,
    _project_instance_uid.start_date AS project_instance_uid_start_date,
    _project_instance_uid.end_date AS project_instance_uid_end_date,
    _project_instance_uid.current_billed AS project_instance_uid_current_billed,
    _project_instance_uid.budget AS project_instance_uid_budget,
    _project_milestone_uid.project_milestone_name AS project_milestone_uid_project_milestone_name,
    _project_milestone_uid.tenant_uid AS project_milestone_uid_tenant_uid,
    _project_milestone_uid.client_uid AS project_milestone_uid_client_uid,
    _project_milestone_uid.project_instance_uid AS project_milestone_uid_project_instance_uid,
    _project_milestone_uid.project_budget_uid AS project_milestone_uid_project_budget_uid,
    _project_milestone_uid.start_date AS project_milestone_uid_start_date,
    _project_milestone_uid.end_date AS project_milestone_uid_end_date,
    _project_milestone_uid.status_name AS project_milestone_uid_status_name,
    _invoice_instance_uid.invoice_instance_name AS invoice_instance_uid_invoice_instance_name,
    _invoice_instance_uid.tenant_uid AS invoice_instance_uid_tenant_uid,
    _invoice_instance_uid.account_uid AS invoice_instance_uid_account_uid,
    _invoice_instance_uid.invoice_flow_uid AS invoice_instance_uid_invoice_flow_uid,
    _invoice_instance_uid.invoice_status_uid AS invoice_instance_uid_invoice_status_uid,
    _invoice_instance_uid.invoice_category_uid AS invoice_instance_uid_invoice_category_uid,
    _invoice_instance_uid.invoice_type_uid AS invoice_instance_uid_invoice_type_uid,
    _invoice_instance_uid.period_uid AS invoice_instance_uid_period_uid,
    _invoice_instance_uid.currency_uid AS invoice_instance_uid_currency_uid,
    _invoice_instance_uid.invoice_number AS invoice_instance_uid_invoice_number,
    _invoice_instance_uid.invoice_details AS invoice_instance_uid_invoice_details,
    _invoice_instance_uid.invoice_amount_net AS invoice_instance_uid_invoice_amount_net,
    _invoice_instance_uid.invoice_amount_tax AS invoice_instance_uid_invoice_amount_tax,
    _invoice_instance_uid.invoice_amount_gross AS invoice_instance_uid_invoice_amount_gross
   FROM (((((time_entry_final
     LEFT JOIN tenant _tenant_uid ON ((time_entry_final.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((time_entry_final.account_uid = _account_uid.account_uid)))
     LEFT JOIN project_instance _project_instance_uid ON ((time_entry_final.project_instance_uid = _project_instance_uid.project_instance_uid)))
     LEFT JOIN project_milestone _project_milestone_uid ON ((time_entry_final.project_milestone_uid = _project_milestone_uid.project_milestone_uid)))
     LEFT JOIN invoice_instance _invoice_instance_uid ON ((time_entry_final.invoice_instance_uid = _invoice_instance_uid.invoice_instance_uid)))]]></view_script>
			<column name="time_entry_final_uid" type="text" />
			<column name="time_entry_final_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="project_instance_uid" type="text" />
			<column name="project_milestone_uid" type="text" />
			<column name="invoice_instance_uid" type="text" />
			<column name="entry_period" type="text" />
			<column name="entry_note" type="text" />
			<column name="lock_uid" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="entry_minutes" type="bigint" />
			<column name="is_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="project_instance_uid_project_instance_name" type="text" />
			<column name="project_instance_uid_tenant_uid" type="text" />
			<column name="project_instance_uid_client_uid" type="text" />
			<column name="project_instance_uid_project_type_uid" type="text" />
			<column name="project_instance_uid_manager_account_uid" type="text" />
			<column name="project_instance_uid_project_group_uid" type="text" />
			<column name="project_instance_uid_project_code" type="text" />
			<column name="project_instance_uid_project_description" type="text" />
			<column name="project_instance_uid_is_billable" type="bigint" />
			<column name="project_instance_uid_start_date" type="timestamp" />
			<column name="project_instance_uid_end_date" type="timestamp" />
			<column name="project_instance_uid_current_billed" type="double precision" />
			<column name="project_instance_uid_budget" type="double precision" />
			<column name="project_milestone_uid_project_milestone_name" type="text" />
			<column name="project_milestone_uid_tenant_uid" type="text" />
			<column name="project_milestone_uid_client_uid" type="text" />
			<column name="project_milestone_uid_project_instance_uid" type="text" />
			<column name="project_milestone_uid_project_budget_uid" type="text" />
			<column name="project_milestone_uid_start_date" type="timestamp" />
			<column name="project_milestone_uid_end_date" type="timestamp" />
			<column name="project_milestone_uid_status_name" type="text" />
			<column name="invoice_instance_uid_invoice_instance_name" type="text" />
			<column name="invoice_instance_uid_tenant_uid" type="text" />
			<column name="invoice_instance_uid_account_uid" type="text" />
			<column name="invoice_instance_uid_invoice_flow_uid" type="text" />
			<column name="invoice_instance_uid_invoice_status_uid" type="text" />
			<column name="invoice_instance_uid_invoice_category_uid" type="text" />
			<column name="invoice_instance_uid_invoice_type_uid" type="text" />
			<column name="invoice_instance_uid_period_uid" type="text" />
			<column name="invoice_instance_uid_currency_uid" type="text" />
			<column name="invoice_instance_uid_invoice_number" type="text" />
			<column name="invoice_instance_uid_invoice_details" type="text" />
			<column name="invoice_instance_uid_invoice_amount_net" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_tax" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_gross" type="double precision" />
		</view>
		<view name="v_rich_time_entry_invoice" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_time_entry_invoice AS SELECT ${view},
    time_entry_invoice.time_entry_invoice_name,
    time_entry_invoice.tenant_uid,
    time_entry_invoice.account_uid,
    time_entry_invoice.time_submit_uid,
    time_entry_invoice.time_entry_uid,
    time_entry_invoice.project_instance_uid,
    time_entry_invoice.project_milestone_uid,
    time_entry_invoice.period_uid,
    time_entry_invoice.invoice_instance_uid,
    time_entry_invoice.entry_period,
    time_entry_invoice.entry_note,
    time_entry_invoice.lock_row,
    time_entry_invoice.start_date,
    time_entry_invoice.end_date,
    time_entry_invoice.entry_minutes,
    time_entry_invoice.is_approved,
    time_entry_invoice.row_instance,
    time_entry_invoice.row_lock,
    time_entry_invoice.row_owner,
    time_entry_invoice.row_seq,
    time_entry_invoice.row_guid,
    time_entry_invoice.row_version,
    time_entry_invoice.is_active,
    time_entry_invoice.created_date,
    time_entry_invoice.created_by,
    time_entry_invoice.last_updated_date,
    time_entry_invoice.last_updated_by,
    time_entry_invoice.removed_date,
    time_entry_invoice.removed_by,
    time_entry_invoice.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _time_submit_uid.time_submit_name AS time_submit_uid_time_submit_name,
    _time_submit_uid.tenant_uid AS time_submit_uid_tenant_uid,
    _time_submit_uid.account_uid AS time_submit_uid_account_uid,
    _time_submit_uid.period_uid AS time_submit_uid_period_uid,
    _time_submit_uid.time_submit_description AS time_submit_uid_time_submit_description,
    _time_entry_uid.time_entry_name AS time_entry_uid_time_entry_name,
    _time_entry_uid.time_submit_uid AS time_entry_uid_time_submit_uid,
    _time_entry_uid.tenant_uid AS time_entry_uid_tenant_uid,
    _time_entry_uid.account_uid AS time_entry_uid_account_uid,
    _time_entry_uid.project_instance_uid AS time_entry_uid_project_instance_uid,
    _time_entry_uid.project_milestone_uid AS time_entry_uid_project_milestone_uid,
    _time_entry_uid.period_uid AS time_entry_uid_period_uid,
    _time_entry_uid.invoice_instance_uid AS time_entry_uid_invoice_instance_uid,
    _time_entry_uid.entry_period AS time_entry_uid_entry_period,
    _time_entry_uid.entry_note AS time_entry_uid_entry_note,
    _time_entry_uid.lock_row AS time_entry_uid_lock_row,
    _time_entry_uid.start_date AS time_entry_uid_start_date,
    _time_entry_uid.end_date AS time_entry_uid_end_date,
    _time_entry_uid.entry_minutes AS time_entry_uid_entry_minutes,
    _time_entry_uid.is_approved AS time_entry_uid_is_approved,
    _project_instance_uid.project_instance_name AS project_instance_uid_project_instance_name,
    _project_instance_uid.tenant_uid AS project_instance_uid_tenant_uid,
    _project_instance_uid.client_uid AS project_instance_uid_client_uid,
    _project_instance_uid.project_type_uid AS project_instance_uid_project_type_uid,
    _project_instance_uid.manager_account_uid AS project_instance_uid_manager_account_uid,
    _project_instance_uid.project_group_uid AS project_instance_uid_project_group_uid,
    _project_instance_uid.project_code AS project_instance_uid_project_code,
    _project_instance_uid.project_description AS project_instance_uid_project_description,
    _project_instance_uid.is_billable AS project_instance_uid_is_billable,
    _project_instance_uid.start_date AS project_instance_uid_start_date,
    _project_instance_uid.end_date AS project_instance_uid_end_date,
    _project_instance_uid.current_billed AS project_instance_uid_current_billed,
    _project_instance_uid.budget AS project_instance_uid_budget,
    _project_milestone_uid.project_milestone_name AS project_milestone_uid_project_milestone_name,
    _project_milestone_uid.tenant_uid AS project_milestone_uid_tenant_uid,
    _project_milestone_uid.client_uid AS project_milestone_uid_client_uid,
    _project_milestone_uid.project_instance_uid AS project_milestone_uid_project_instance_uid,
    _project_milestone_uid.project_budget_uid AS project_milestone_uid_project_budget_uid,
    _project_milestone_uid.start_date AS project_milestone_uid_start_date,
    _project_milestone_uid.end_date AS project_milestone_uid_end_date,
    _project_milestone_uid.status_name AS project_milestone_uid_status_name,
    _period_uid.period_name AS period_uid_period_name,
    _period_uid.period_number AS period_uid_period_number,
    _period_uid.period_type AS period_uid_period_type,
    _period_uid.period_start_time AS period_uid_period_start_time,
    _period_uid.period_end_time AS period_uid_period_end_time,
    _period_uid.period_year AS period_uid_period_year,
    _period_uid.period_quarter AS period_uid_period_quarter,
    _period_uid.period_month AS period_uid_period_month,
    _period_uid.period_week AS period_uid_period_week,
    _period_uid.period_day AS period_uid_period_day,
    _invoice_instance_uid.invoice_instance_name AS invoice_instance_uid_invoice_instance_name,
    _invoice_instance_uid.tenant_uid AS invoice_instance_uid_tenant_uid,
    _invoice_instance_uid.account_uid AS invoice_instance_uid_account_uid,
    _invoice_instance_uid.invoice_flow_uid AS invoice_instance_uid_invoice_flow_uid,
    _invoice_instance_uid.invoice_status_uid AS invoice_instance_uid_invoice_status_uid,
    _invoice_instance_uid.invoice_category_uid AS invoice_instance_uid_invoice_category_uid,
    _invoice_instance_uid.invoice_type_uid AS invoice_instance_uid_invoice_type_uid,
    _invoice_instance_uid.period_uid AS invoice_instance_uid_period_uid,
    _invoice_instance_uid.currency_uid AS invoice_instance_uid_currency_uid,
    _invoice_instance_uid.invoice_number AS invoice_instance_uid_invoice_number,
    _invoice_instance_uid.invoice_details AS invoice_instance_uid_invoice_details,
    _invoice_instance_uid.invoice_amount_net AS invoice_instance_uid_invoice_amount_net,
    _invoice_instance_uid.invoice_amount_tax AS invoice_instance_uid_invoice_amount_tax,
    _invoice_instance_uid.invoice_amount_gross AS invoice_instance_uid_invoice_amount_gross
   FROM ((((((((time_entry_invoice
     LEFT JOIN tenant _tenant_uid ON ((time_entry_invoice.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((time_entry_invoice.account_uid = _account_uid.account_uid)))
     LEFT JOIN time_submit _time_submit_uid ON ((time_entry_invoice.time_submit_uid = _time_submit_uid.time_submit_uid)))
     LEFT JOIN time_entry _time_entry_uid ON ((time_entry_invoice.time_entry_uid = _time_entry_uid.time_entry_uid)))
     LEFT JOIN project_instance _project_instance_uid ON ((time_entry_invoice.project_instance_uid = _project_instance_uid.project_instance_uid)))
     LEFT JOIN project_milestone _project_milestone_uid ON ((time_entry_invoice.project_milestone_uid = _project_milestone_uid.project_milestone_uid)))
     LEFT JOIN period _period_uid ON ((time_entry_invoice.period_uid = _period_uid.period_uid)))
     LEFT JOIN invoice_instance _invoice_instance_uid ON ((time_entry_invoice.invoice_instance_uid = _invoice_instance_uid.invoice_instance_uid)))]]></view_script>
			<column name="time_entry_invoice_uid" type="text" />
			<column name="time_entry_invoice_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="time_submit_uid" type="text" />
			<column name="time_entry_uid" type="text" />
			<column name="project_instance_uid" type="text" />
			<column name="project_milestone_uid" type="text" />
			<column name="period_uid" type="text" />
			<column name="invoice_instance_uid" type="text" />
			<column name="entry_period" type="text" />
			<column name="entry_note" type="text" />
			<column name="lock_row" type="text" />
			<column name="start_date" type="timestamp" />
			<column name="end_date" type="timestamp" />
			<column name="entry_minutes" type="bigint" />
			<column name="is_approved" type="bigint" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="time_submit_uid_time_submit_name" type="text" />
			<column name="time_submit_uid_tenant_uid" type="text" />
			<column name="time_submit_uid_account_uid" type="text" />
			<column name="time_submit_uid_period_uid" type="text" />
			<column name="time_submit_uid_time_submit_description" type="text" />
			<column name="time_entry_uid_time_entry_name" type="text" />
			<column name="time_entry_uid_time_submit_uid" type="text" />
			<column name="time_entry_uid_tenant_uid" type="text" />
			<column name="time_entry_uid_account_uid" type="text" />
			<column name="time_entry_uid_project_instance_uid" type="text" />
			<column name="time_entry_uid_project_milestone_uid" type="text" />
			<column name="time_entry_uid_period_uid" type="text" />
			<column name="time_entry_uid_invoice_instance_uid" type="text" />
			<column name="time_entry_uid_entry_period" type="text" />
			<column name="time_entry_uid_entry_note" type="text" />
			<column name="time_entry_uid_lock_row" type="text" />
			<column name="time_entry_uid_start_date" type="timestamp" />
			<column name="time_entry_uid_end_date" type="timestamp" />
			<column name="time_entry_uid_entry_minutes" type="bigint" />
			<column name="time_entry_uid_is_approved" type="bigint" />
			<column name="project_instance_uid_project_instance_name" type="text" />
			<column name="project_instance_uid_tenant_uid" type="text" />
			<column name="project_instance_uid_client_uid" type="text" />
			<column name="project_instance_uid_project_type_uid" type="text" />
			<column name="project_instance_uid_manager_account_uid" type="text" />
			<column name="project_instance_uid_project_group_uid" type="text" />
			<column name="project_instance_uid_project_code" type="text" />
			<column name="project_instance_uid_project_description" type="text" />
			<column name="project_instance_uid_is_billable" type="bigint" />
			<column name="project_instance_uid_start_date" type="timestamp" />
			<column name="project_instance_uid_end_date" type="timestamp" />
			<column name="project_instance_uid_current_billed" type="double precision" />
			<column name="project_instance_uid_budget" type="double precision" />
			<column name="project_milestone_uid_project_milestone_name" type="text" />
			<column name="project_milestone_uid_tenant_uid" type="text" />
			<column name="project_milestone_uid_client_uid" type="text" />
			<column name="project_milestone_uid_project_instance_uid" type="text" />
			<column name="project_milestone_uid_project_budget_uid" type="text" />
			<column name="project_milestone_uid_start_date" type="timestamp" />
			<column name="project_milestone_uid_end_date" type="timestamp" />
			<column name="project_milestone_uid_status_name" type="text" />
			<column name="period_uid_period_name" type="text" />
			<column name="period_uid_period_number" type="bigint" />
			<column name="period_uid_period_type" type="text" />
			<column name="period_uid_period_start_time" type="timestamp" />
			<column name="period_uid_period_end_time" type="timestamp" />
			<column name="period_uid_period_year" type="bigint" />
			<column name="period_uid_period_quarter" type="bigint" />
			<column name="period_uid_period_month" type="bigint" />
			<column name="period_uid_period_week" type="bigint" />
			<column name="period_uid_period_day" type="bigint" />
			<column name="invoice_instance_uid_invoice_instance_name" type="text" />
			<column name="invoice_instance_uid_tenant_uid" type="text" />
			<column name="invoice_instance_uid_account_uid" type="text" />
			<column name="invoice_instance_uid_invoice_flow_uid" type="text" />
			<column name="invoice_instance_uid_invoice_status_uid" type="text" />
			<column name="invoice_instance_uid_invoice_category_uid" type="text" />
			<column name="invoice_instance_uid_invoice_type_uid" type="text" />
			<column name="invoice_instance_uid_period_uid" type="text" />
			<column name="invoice_instance_uid_currency_uid" type="text" />
			<column name="invoice_instance_uid_invoice_number" type="text" />
			<column name="invoice_instance_uid_invoice_details" type="text" />
			<column name="invoice_instance_uid_invoice_amount_net" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_tax" type="double precision" />
			<column name="invoice_instance_uid_invoice_amount_gross" type="double precision" />
		</view>
		<view name="v_rich_time_rule" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT time_rule_uid,
    time_rule_name,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM time_rule]]></view_script>
			<column name="time_rule_uid" type="text" />
			<column name="time_rule_name" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<view name="v_rich_time_rule_client" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_time_rule_client AS SELECT ${view},
    time_rule_client.time_rule_client_name,
    time_rule_client.time_rule_definition,
    time_rule_client.row_instance,
    time_rule_client.row_lock,
    time_rule_client.row_owner,
    time_rule_client.row_seq,
    time_rule_client.row_guid,
    time_rule_client.row_version,
    time_rule_client.is_active,
    time_rule_client.created_date,
    time_rule_client.created_by,
    time_rule_client.last_updated_date,
    time_rule_client.last_updated_by,
    time_rule_client.removed_date,
    time_rule_client.removed_by,
    time_rule_client.custom_attributes,
    _time_rule_client_uid.client_name AS time_rule_client_uid_client_name,
    _time_rule_client_uid.tenant_uid AS time_rule_client_uid_tenant_uid,
    _time_rule_client_uid.country_uid AS time_rule_client_uid_country_uid,
    _time_rule_client_uid.client_type_uid AS time_rule_client_uid_client_type_uid,
    _time_rule_client_uid.client_category_uid AS time_rule_client_uid_client_category_uid,
    _time_rule_client_uid.account_uid AS time_rule_client_uid_account_uid,
    _time_rule_client_uid.client_code AS time_rule_client_uid_client_code,
    _time_rule_client_uid.client_description AS time_rule_client_uid_client_description,
    _time_rule_client_uid.start_date AS time_rule_client_uid_start_date,
    _time_rule_client_uid.end_date AS time_rule_client_uid_end_date,
    _time_rule_client_uid.is_internal AS time_rule_client_uid_is_internal,
    _time_rule_client_uid.is_system AS time_rule_client_uid_is_system,
    _time_rule_client_uid.is_test AS time_rule_client_uid_is_test
   FROM (time_rule_client
     LEFT JOIN client _time_rule_client_uid ON ((${view} = _time_rule_client_uid.client_uid)))]]></view_script>
			<column name="time_rule_client_uid" type="text" />
			<column name="time_rule_client_name" type="text" />
			<column name="time_rule_definition" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="time_rule_client_uid_client_name" type="text" />
			<column name="time_rule_client_uid_tenant_uid" type="text" />
			<column name="time_rule_client_uid_country_uid" type="text" />
			<column name="time_rule_client_uid_client_type_uid" type="text" />
			<column name="time_rule_client_uid_client_category_uid" type="text" />
			<column name="time_rule_client_uid_account_uid" type="text" />
			<column name="time_rule_client_uid_client_code" type="text" />
			<column name="time_rule_client_uid_client_description" type="text" />
			<column name="time_rule_client_uid_start_date" type="timestamp" />
			<column name="time_rule_client_uid_end_date" type="timestamp" />
			<column name="time_rule_client_uid_is_internal" type="bigint" />
			<column name="time_rule_client_uid_is_system" type="bigint" />
			<column name="time_rule_client_uid_is_test" type="bigint" />
		</view>
		<view name="v_rich_time_submit" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW v_rich_time_submit AS SELECT ${view},
    time_submit.time_submit_name,
    time_submit.tenant_uid,
    time_submit.account_uid,
    time_submit.period_uid,
    time_submit.time_submit_description,
    time_submit.row_instance,
    time_submit.row_lock,
    time_submit.row_owner,
    time_submit.row_seq,
    time_submit.row_guid,
    time_submit.row_version,
    time_submit.is_active,
    time_submit.created_date,
    time_submit.created_by,
    time_submit.last_updated_date,
    time_submit.last_updated_by,
    time_submit.removed_date,
    time_submit.removed_by,
    time_submit.custom_attributes,
    _tenant_uid.tenant_name AS tenant_uid_tenant_name,
    _tenant_uid.country_uid AS tenant_uid_country_uid,
    _tenant_uid.tenant_type_uid AS tenant_uid_tenant_type_uid,
    _tenant_uid.tenant_category_uid AS tenant_uid_tenant_category_uid,
    _tenant_uid.tenant_code AS tenant_uid_tenant_code,
    _tenant_uid.tenant_description AS tenant_uid_tenant_description,
    _tenant_uid.start_date AS tenant_uid_start_date,
    _tenant_uid.end_date AS tenant_uid_end_date,
    _tenant_uid.is_internal AS tenant_uid_is_internal,
    _tenant_uid.is_system AS tenant_uid_is_system,
    _tenant_uid.is_test AS tenant_uid_is_test,
    _tenant_uid.account_uid AS tenant_uid_account_uid,
    _account_uid.account_name AS account_uid_account_name,
    _account_uid.tenant_uid AS account_uid_tenant_uid,
    _account_uid.account_type_uid AS account_uid_account_type_uid,
    _account_uid.account_title_uid AS account_uid_account_title_uid,
    _account_uid.account_division_uid AS account_uid_account_division_uid,
    _account_uid.account_group_uid AS account_uid_account_group_uid,
    _account_uid.auth_identity_uid AS account_uid_auth_identity_uid,
    _account_uid.account_email AS account_uid_account_email,
    _account_uid.display_name AS account_uid_display_name,
    _account_uid.is_system AS account_uid_is_system,
    _period_uid.period_name AS period_uid_period_name,
    _period_uid.period_number AS period_uid_period_number,
    _period_uid.period_type AS period_uid_period_type,
    _period_uid.period_start_time AS period_uid_period_start_time,
    _period_uid.period_end_time AS period_uid_period_end_time,
    _period_uid.period_year AS period_uid_period_year,
    _period_uid.period_quarter AS period_uid_period_quarter,
    _period_uid.period_month AS period_uid_period_month,
    _period_uid.period_week AS period_uid_period_week,
    _period_uid.period_day AS period_uid_period_day
   FROM (((time_submit
     LEFT JOIN tenant _tenant_uid ON ((time_submit.tenant_uid = _tenant_uid.tenant_uid)))
     LEFT JOIN account _account_uid ON ((time_submit.account_uid = _account_uid.account_uid)))
     LEFT JOIN period _period_uid ON ((time_submit.period_uid = _period_uid.period_uid)))]]></view_script>
			<column name="time_submit_uid" type="text" />
			<column name="time_submit_name" type="text" />
			<column name="tenant_uid" type="text" />
			<column name="account_uid" type="text" />
			<column name="period_uid" type="text" />
			<column name="time_submit_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
			<column name="tenant_uid_tenant_name" type="text" />
			<column name="tenant_uid_country_uid" type="text" />
			<column name="tenant_uid_tenant_type_uid" type="text" />
			<column name="tenant_uid_tenant_category_uid" type="text" />
			<column name="tenant_uid_tenant_code" type="text" />
			<column name="tenant_uid_tenant_description" type="text" />
			<column name="tenant_uid_start_date" type="timestamp" />
			<column name="tenant_uid_end_date" type="timestamp" />
			<column name="tenant_uid_is_internal" type="bigint" />
			<column name="tenant_uid_is_system" type="bigint" />
			<column name="tenant_uid_is_test" type="bigint" />
			<column name="tenant_uid_account_uid" type="text" />
			<column name="account_uid_account_name" type="text" />
			<column name="account_uid_tenant_uid" type="text" />
			<column name="account_uid_account_type_uid" type="text" />
			<column name="account_uid_account_title_uid" type="text" />
			<column name="account_uid_account_division_uid" type="text" />
			<column name="account_uid_account_group_uid" type="text" />
			<column name="account_uid_auth_identity_uid" type="text" />
			<column name="account_uid_account_email" type="text" />
			<column name="account_uid_display_name" type="text" />
			<column name="account_uid_is_system" type="bigint" />
			<column name="period_uid_period_name" type="text" />
			<column name="period_uid_period_number" type="bigint" />
			<column name="period_uid_period_type" type="text" />
			<column name="period_uid_period_start_time" type="timestamp" />
			<column name="period_uid_period_end_time" type="timestamp" />
			<column name="period_uid_period_year" type="bigint" />
			<column name="period_uid_period_quarter" type="bigint" />
			<column name="period_uid_period_month" type="bigint" />
			<column name="period_uid_period_week" type="bigint" />
			<column name="period_uid_period_day" type="bigint" />
		</view>
		<view name="v_rich_time_submit_type" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT time_submit_type_uid,
    time_submit_type_name,
    time_submit_type_description,
    row_instance,
    row_lock,
    row_owner,
    row_seq,
    row_guid,
    row_version,
    is_active,
    created_date,
    created_by,
    last_updated_date,
    last_updated_by,
    removed_date,
    removed_by,
    custom_attributes
   FROM time_submit_type]]></view_script>
			<column name="time_submit_type_uid" type="text" />
			<column name="time_submit_type_name" type="text" />
			<column name="time_submit_type_description" type="text" />
			<column name="row_instance" type="text" />
			<column name="row_lock" type="text" />
			<column name="row_owner" type="text" />
			<column name="row_seq" type="bigint" />
			<column name="row_guid" type="text" />
			<column name="row_version" type="bigint" />
			<column name="is_active" type="bigint" />
			<column name="created_date" type="timestamp" />
			<column name="created_by" type="text" />
			<column name="last_updated_date" type="timestamp" />
			<column name="last_updated_by" type="text" />
			<column name="removed_date" type="timestamp" />
			<column name="removed_by" type="text" />
			<column name="custom_attributes" type="text" />
		</view>
		<sequence name="seq_id" options="START WITH 1 INCREMENT BY 1" />
		<function name="generate_uid" id="Function-1226" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.generate_uid(table_code text)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
            BEGIN
                RETURN replace(concat(table_code, '_', cast(nextval('seq_id') as text), '_', substring(cast(now() as text), 1, 10), '_', substring(cast(uuid_generate_v4() as text), 1, 13), ''), '-', '_');
            END
            $function$
 ]]></string>
			<input_param name="table_code" jt="-1" type="text" inOut="1" />
		</function>
		<function name="uuid_generate_v1" id="Function-173b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v1()
 RETURNS uuid
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v1$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
		<function name="uuid_generate_v1mc" id="Function-1c11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v1mc()
 RETURNS uuid
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v1mc$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
		<function name="uuid_generate_v3" id="Function-66f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v3(namespace uuid, name text)
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v3$function$
 ]]></string>
			<input_param name="namespace" jt="-1" type="uuid" inOut="1" />
			<input_param name="name" jt="-1" type="text" inOut="1" />
		</function>
		<function name="uuid_generate_v4" id="Function-52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v4()
 RETURNS uuid
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v4$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
		<function name="uuid_generate_v5" id="Function-199e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v5(namespace uuid, name text)
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v5$function$
 ]]></string>
			<input_param name="namespace" jt="-1" type="uuid" inOut="1" />
			<input_param name="name" jt="-1" type="text" inOut="1" />
		</function>
		<function name="uuid_nil" id="Function-8cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_nil()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_nil$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
		<function name="uuid_ns_dns" id="Function-1162" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_dns()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_dns$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
		<function name="uuid_ns_oid" id="Function-2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_oid()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_oid$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
		<function name="uuid_ns_url" id="Function-974" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_url()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_url$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
		<function name="uuid_ns_x500" id="Function-17be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_x500()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_x500$function$
 ]]></string>
			<result_param jt="-1" />
		</function>
	</schema>
	<layout name="Main Layout" id="Layout-418" confirmed="y" show_relation="columns" >
		<entity schema="public" name="account" color="BED3F4" x="3408" y="2640" />
		<entity schema="public" name="account_division" color="F4DDBE" x="1216" y="10176" />
		<entity schema="public" name="account_division_template" color="F4DDBE" x="1520" y="10176" />
		<entity schema="public" name="account_group" color="F4DDBE" x="1264" y="11600" />
		<entity schema="public" name="account_hierarchy" color="F4DDBE" x="1520" y="10624" />
		<entity schema="public" name="account_rate" color="F4DDBE" x="1808" y="11600" />
		<entity schema="public" name="account_skill" color="F4DDBE" x="1536" y="11184" />
		<entity schema="public" name="account_team" color="F4DDBE" x="1536" y="12016" />
		<entity schema="public" name="account_title" color="F4DDBE" x="1808" y="11184" />
		<entity schema="public" name="account_title_responsibility" color="F4DDBE" x="1216" y="11136" />
		<entity schema="public" name="account_type" color="F4DDBE" x="1536" y="11600" />
		<entity schema="public" name="audit_change" color="BED3F4" x="3648" y="2640" />
		<entity schema="public" name="audit_type" color="BED3F4" x="3136" y="4096" />
		<entity schema="public" name="auth_attempt" color="BED3F4" x="3648" y="3184" />
		<entity schema="public" name="auth_identity" color="BEBEF4" x="9248" y="10400" />
		<entity schema="public" name="auth_identity_tenant" color="BEBEF4" x="9520" y="10400" />
		<entity schema="public" name="auth_key" color="C7F4BE" x="4960" y="1648" />
		<entity schema="public" name="auth_key_type" color="C7F4BE" x="4720" y="2192" />
		<entity schema="public" name="auth_password" color="C7F4BE" x="4448" y="2192" />
		<entity schema="public" name="auth_password_current" color="C7F4BE" x="4960" y="3152" />
		<entity schema="public" name="auth_password_rule" color="C7F4BE" x="4704" y="2704" />
		<entity schema="public" name="auth_permission" color="C7F4BE" x="4704" y="1680" />
		<entity schema="public" name="auth_request" color="BEBEF4" x="8752" y="9888" />
		<entity schema="public" name="auth_role" color="BEBEF4" x="9008" y="9888" />
		<entity schema="public" name="auth_role_uri" color="BEBEF4" x="9248" y="9888" />
		<entity schema="public" name="auth_session" color="BEBEF4" x="9008" y="10400" />
		<entity schema="public" name="auth_sso" color="C7F4BE" x="5200" y="1648" />
		<entity schema="public" name="auth_token" color="C7F4BE" x="4960" y="2192" />
		<entity schema="public" name="calendar_account" color="BED3F4" x="3392" y="3184" />
		<entity schema="public" name="calendar_approval" color="D1BEF4" x="4448" y="5216" />
		<entity schema="public" name="calendar_approval_type" color="D1BEF4" x="4736" y="5712" />
		<entity schema="public" name="calendar_event" color="D1BEF4" x="4464" y="4752" />
		<entity schema="public" name="calendar_event_group" color="D1BEF4" x="5008" y="4752" />
		<entity schema="public" name="calendar_event_type" color="D1BEF4" x="4736" y="4752" />
		<entity schema="public" name="calendar_type" color="D1BEF4" x="4736" y="5216" />
		<entity schema="public" name="client" color="BED3F4" x="3168" y="2592" />
		<entity schema="public" name="client_account" color="C7F4BE" x="2912" y="5328" />
		<entity schema="public" name="client_country" color="C7F4BE" x="3152" y="5744" />
		<entity schema="public" name="client_payment" color="C7F4BE" x="2896" y="4752" />
		<entity schema="public" name="client_role" color="C7F4BE" x="3152" y="5328" />
		<entity schema="public" name="client_status" color="C7F4BE" x="3392" y="5744" />
		<entity schema="public" name="client_type" color="C7F4BE" x="3392" y="5328" />
		<entity schema="public" name="connection_engine" color="BED3F4" x="3408" y="2144" />
		<entity schema="public" name="connection_host" color="C7F4BE" x="4448" y="4192" />
		<entity schema="public" name="connection_user" color="C7F4BE" x="4704" y="4192" />
		<entity schema="public" name="country" color="BED3F4" x="3904" y="2640" />
		<entity schema="public" name="currency" color="BED3F4" x="3904" y="2224" />
		<entity schema="public" name="databasechangelog" color="BED3F4" x="3888" y="3680" />
		<entity schema="public" name="databasechangeloglock" color="BED3F4" x="2896" y="4096" />
		<entity schema="public" name="event_acknowledge" color="BED3F4" x="3616" y="3680" />
		<entity schema="public" name="event_channel" color="D1BEF4" x="2096" y="5264" />
		<entity schema="public" name="event_channel_type" color="D1BEF4" x="2352" y="5264" />
		<entity schema="public" name="event_instance" color="D1BEF4" x="1840" y="5264" />
		<entity schema="public" name="event_notification" color="D1BEF4" x="1824" y="4752" />
		<entity schema="public" name="event_observer" color="D1BEF4" x="2336" y="6160" />
		<entity schema="public" name="event_subscription" color="D1BEF4" x="2096" y="4768" />
		<entity schema="public" name="event_template" color="D1BEF4" x="2608" y="5744" />
		<entity schema="public" name="event_type" color="D1BEF4" x="2352" y="5744" />
		<entity schema="public" name="invoice_action" color="BED3F4" x="3136" y="3632" />
		<entity schema="public" name="invoice_action_type" color="BED3F4" x="2384" y="3184" />
		<entity schema="public" name="invoice_category" color="BED3F4" x="1856" y="3584" />
		<entity schema="public" name="invoice_entry" color="BED3F4" x="2144" y="3584" />
		<entity schema="public" name="invoice_flow" color="BED3F4" x="2624" y="3584" />
		<entity schema="public" name="invoice_flow_state" color="BED3F4" x="2384" y="4096" />
		<entity schema="public" name="invoice_instance" color="BED3F4" x="2128" y="4096" />
		<entity schema="public" name="invoice_status" color="BED3F4" x="1904" y="3168" />
		<entity schema="public" name="invoice_type" color="BED3F4" x="2384" y="3584" />
		<entity schema="public" name="monitor" color="BED3F4" x="2912" y="2592" />
		<entity schema="public" name="monitor_run" color="D1BEF4" x="3936" y="4752" />
		<entity schema="public" name="monitor_type" color="D1BEF4" x="4176" y="4752" />
		<entity schema="public" name="period" color="BED3F4" x="2928" y="2048" />
		<entity schema="public" name="process" color="BED3F4" x="2928" y="3184" />
		<entity schema="public" name="process_run" color="BED3F4" x="2384" y="1648" />
		<entity schema="public" name="process_type" color="BED3F4" x="2624" y="1648" />
		<entity schema="public" name="project_account" color="BED3F4" x="3408" y="1648" />
		<entity schema="public" name="project_budget" color="BEBEF4" x="2320" y="1088" />
		<entity schema="public" name="project_group" color="BEBEF4" x="2592" y="672" />
		<entity schema="public" name="project_instance" color="BEBEF4" x="2064" y="80" />
		<entity schema="public" name="project_milestone" color="BEBEF4" x="2048" y="672" />
		<entity schema="public" name="project_type" color="BEBEF4" x="2320" y="672" />
		<entity schema="public" name="report" color="BED3F4" x="3168" y="1664" />
		<entity schema="public" name="report_content_type" color="BED3F4" x="2896" y="800" />
		<entity schema="public" name="report_format" color="BED3F4" x="3168" y="800" />
		<entity schema="public" name="report_run" color="BED3F4" x="3408" y="800" />
		<entity schema="public" name="report_status" color="BED3F4" x="3168" y="1200" />
		<entity schema="public" name="report_type" color="BED3F4" x="3680" y="800" />
		<entity schema="public" name="storage" color="BED3F4" x="3680" y="1712" />
		<entity schema="public" name="storage_connection" color="C7F4BE" x="4448" y="1152" />
		<entity schema="public" name="storage_query" color="C7F4BE" x="4720" y="1152" />
		<entity schema="public" name="storage_type" color="C7F4BE" x="4992" y="1152" />
		<entity schema="public" name="synchronization" color="BED3F4" x="4144" y="2640" />
		<entity schema="public" name="synchronization_run" color="F4DDBE" x="5472" y="1648" />
		<entity schema="public" name="synchronization_type" color="F4DDBE" x="5744" y="1648" />
		<entity schema="public" name="system_attribute" color="BED3F4" x="4144" y="3344" />
		<entity schema="public" name="system_database" color="BEBEF4" x="5472" y="2752" />
		<entity schema="public" name="system_exception" color="D1BEF4" x="6768" y="2752" />
		<entity schema="public" name="system_instance" color="BEBEF4" x="5728" y="3168" />
		<entity schema="public" name="system_license" color="BEBEF4" x="5728" y="2752" />
		<entity schema="public" name="system_lock" color="BEBEF4" x="5984" y="2752" />
		<entity schema="public" name="system_module" color="D1BEF4" x="7040" y="2752" />
		<entity schema="public" name="system_object" color="D1BEF4" x="7328" y="2752" />
		<entity schema="public" name="system_object_type" color="BED3F4" x="6768" y="1776" />
		<entity schema="public" name="system_query" color="BED3F4" x="7280" y="1744" />
		<entity schema="public" name="system_request" color="BED3F4" x="7024" y="2192" />
		<entity schema="public" name="system_setting" color="D1BEF4" x="7040" y="3168" />
		<entity schema="public" name="system_setting_account" color="D1BEF4" x="7296" y="3584" />
		<entity schema="public" name="system_state" color="BED3F4" x="7040" y="1744" />
		<entity schema="public" name="system_table" color="BEBEF4" x="6224" y="2752" />
		<entity schema="public" name="system_thread" color="BEBEF4" x="6496" y="2752" />
		<entity schema="public" name="system_version" color="D1BEF4" x="7040" y="3584" />
		<entity schema="public" name="tenant" color="BED3F4" x="4144" y="2064" />
		<entity schema="public" name="tenant_account" color="F4DDBE" x="5744" y="4688" />
		<entity schema="public" name="tenant_category" color="F4DDBE" x="5472" y="4272" />
		<entity schema="public" name="tenant_country" color="F4DDBE" x="5472" y="4688" />
		<entity schema="public" name="tenant_license" color="F4DDBE" x="5520" y="3792" />
		<entity schema="public" name="tenant_payment" color="F4DDBE" x="5760" y="3712" />
		<entity schema="public" name="tenant_payment_type" color="F4DDBE" x="6032" y="3712" />
		<entity schema="public" name="tenant_role" color="F4DDBE" x="5760" y="4272" />
		<entity schema="public" name="tenant_status" color="F4DDBE" x="6000" y="4688" />
		<entity schema="public" name="tenant_type" color="F4DDBE" x="6000" y="4272" />
		<entity schema="public" name="time_approval" color="BED3F4" x="4112" y="4048" />
		<entity schema="public" name="time_entry" color="F4DDBE" x="6272" y="976" />
		<entity schema="public" name="time_entry_final" color="F4DDBE" x="6528" y="976" />
		<entity schema="public" name="time_entry_invoice" color="F4DDBE" x="6000" y="960" />
		<entity schema="public" name="time_rule" color="F4DDBE" x="6032" y="560" />
		<entity schema="public" name="time_rule_client" color="F4DDBE" x="6272" y="560" />
		<entity schema="public" name="time_submit" color="F4DDBE" x="5760" y="496" />
		<entity schema="public" name="time_submit_type" color="F4DDBE" x="5472" y="960" />
		<entity schema="public" name="v_definition_column_all_list" color="BED3F4" x="3616" y="4128" />
		<entity schema="public" name="v_definition_column_base_list" color="BEBEF4" x="7792" y="6352" />
		<entity schema="public" name="v_definition_column_custom_list" color="BEBEF4" x="8064" y="6352" />
		<entity schema="public" name="v_definition_column_rich_list" color="BEBEF4" x="8064" y="6928" />
		<entity schema="public" name="v_definition_dao_init" color="D1BEF4" x="7072" y="6352" />
		<entity schema="public" name="v_definition_dao_register" color="D1BEF4" x="7296" y="6352" />
		<entity schema="public" name="v_definition_foreign_key" color="BED3F4" x="5376" y="6160" />
		<entity schema="public" name="v_definition_foreign_key_existing" color="BED3F4" x="5616" y="6160" />
		<entity schema="public" name="v_definition_models" color="BEBEF4" x="7568" y="6160" />
		<entity schema="public" name="v_definition_models_register" color="BEBEF4" x="7792" y="6160" />
		<entity schema="public" name="v_definition_python_daos_list" color="BED3F4" x="5344" y="5344" />
		<entity schema="public" name="v_definition_python_daos_read" color="BED3F4" x="5616" y="5344" />
		<entity schema="public" name="v_definition_python_dtos_full" color="BED3F4" x="5616" y="5536" />
		<entity schema="public" name="v_definition_python_dtos_full_list" color="BED3F4" x="5328" y="5728" />
		<entity schema="public" name="v_definition_python_dtos_model_list" color="BED3F4" x="5888" y="5728" />
		<entity schema="public" name="v_definition_python_dtos_read" color="BED3F4" x="5616" y="5728" />
		<entity schema="public" name="v_definition_python_dtos_read_list" color="BED3F4" x="5888" y="5920" />
		<entity schema="public" name="v_definition_python_dtos_rich" color="BED3F4" x="5904" y="7120" />
		<entity schema="public" name="v_definition_python_dtos_rich_list" color="BED3F4" x="6176" y="7120" />
		<entity schema="public" name="v_definition_python_dtos_thin" color="BED3F4" x="5888" y="5536" />
		<entity schema="public" name="v_definition_python_dtos_write" color="C7F4BE" x="7056" y="5920" />
		<entity schema="public" name="v_definition_python_dtos_write_list" color="C7F4BE" x="7328" y="5920" />
		<entity schema="public" name="v_definition_python_services_list" color="BED3F4" x="5616" y="6928" />
		<entity schema="public" name="v_definition_python_services_object" color="BED3F4" x="5904" y="6928" />
		<entity schema="public" name="v_definition_service_list" color="D1BEF4" x="6832" y="6160" />
		<entity schema="public" name="v_definition_service_register" color="D1BEF4" x="7072" y="6160" />
		<entity schema="public" name="v_definition_system_table_generation_list" color="D1BEF4" x="6496" y="6160" />
		<entity schema="public" name="v_definition_table_all_list" color="C7F4BE" x="6496" y="5056" />
		<entity schema="public" name="v_definition_table_base_list" color="BED3F4" x="5328" y="6384" />
		<entity schema="public" name="v_definition_table_column_all" color="C7F4BE" x="6784" y="5600" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_column_base" color="BEBEF4" x="7776" y="7472" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_column_custom" color="BED3F4" x="5616" y="6608" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_column_rich" color="C7F4BE" x="7056" y="5600" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_custom_list" color="BEBEF4" x="7776" y="6928" />
		<entity schema="public" name="v_definition_table_rich_list" color="C7F4BE" x="6784" y="5056" />
		<entity schema="public" name="v_definition_thin_dto" color="D1BEF4" x="7296" y="6544" />
		<entity schema="public" name="v_definition_write_dto" color="D1BEF4" x="7072" y="6544" />
		<entity schema="public" name="v_models_register" color="BED3F4" x="3888" y="4128" />
		<entity schema="public" name="v_rich_account" color="BED3F4" x="3376" y="4128" >
			<column name="account_uid" />
			<column name="account_name" />
			<column name="tenant_uid" />
			<column name="account_type_uid" />
			<column name="account_title_uid" />
			<column name="account_division_uid" />
			<column name="account_group_uid" />
			<column name="auth_identity_uid" />
			<column name="account_email" />
			<column name="display_name" />
			<column name="is_system" />
		</entity>
		<entity schema="public" name="v_rich_account_division" color="BEBEF4" x="4208" y="6160" />
		<entity schema="public" name="v_rich_account_division_template" color="BEBEF4" x="4688" y="6160" />
		<entity schema="public" name="v_rich_account_group" color="F4DDBE" x="10432" y="10944" />
		<entity schema="public" name="v_rich_account_hierarchy" color="F4DDBE" x="11088" y="11040" >
			<column name="account_hierarchy_uid" />
			<column name="account_hierarchy_name" />
			<column name="tenant_uid" />
			<column name="parent_account_uid" />
			<column name="child_account_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_account_rate" color="F4DDBE" x="10144" y="10080" />
		<entity schema="public" name="v_rich_account_skill" color="F4DDBE" x="11088" y="11360" />
		<entity schema="public" name="v_rich_account_team" color="F4DDBE" x="10736" y="10528" />
		<entity schema="public" name="v_rich_account_title" color="F4DDBE" x="11088" y="10528" />
		<entity schema="public" name="v_rich_account_title_responsibility" color="F4DDBE" x="10464" y="9856" />
		<entity schema="public" name="v_rich_account_type" color="F4DDBE" x="10464" y="10528" />
		<entity schema="public" name="v_rich_audit_change" color="F4DDBE" x="3968" y="12336" />
		<entity schema="public" name="v_rich_audit_type" color="F4DDBE" x="4288" y="12336" />
		<entity schema="public" name="v_rich_auth_attempt" color="D1BEF4" x="2432" y="10592" />
		<entity schema="public" name="v_rich_auth_identity" color="D1BEF4" x="2480" y="10176" />
		<entity schema="public" name="v_rich_auth_identity_tenant" color="D1BEF4" x="2752" y="10176" >
			<column name="auth_identity_tenant_uid" />
			<column name="auth_identity_tenant_name" />
			<column name="tenant_uid" />
			<column name="auth_identity_uid" />
			<column name="auth_sso_uid" />
			<column name="identity_parameters_json" />
			<column name="last_status_name" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
		</entity>
		<entity schema="public" name="v_rich_auth_key" color="BEBEF4" x="1696" y="9184" />
		<entity schema="public" name="v_rich_auth_key_type" color="D1BEF4" x="3296" y="10176" />
		<entity schema="public" name="v_rich_auth_password" color="C7F4BE" x="2944" y="12336" />
		<entity schema="public" name="v_rich_auth_password_current" color="C7F4BE" x="3264" y="12336" />
		<entity schema="public" name="v_rich_auth_password_rule" color="C7F4BE" x="3264" y="13200" />
		<entity schema="public" name="v_rich_auth_permission" color="C7F4BE" x="2688" y="12336" >
			<column name="auth_permission_uid" />
			<column name="auth_permission_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="auth_role_uid" />
			<column name="client_uid" />
			<column name="project_instance_uid" />
			<column name="valid_from_date" />
			<column name="valid_till_date" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_auth_request" color="D1BEF4" x="2752" y="10592" >
			<column name="auth_request_uid" />
			<column name="auth_request_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="requestor_email" />
			<column name="reset_guid" />
			<column name="valid_till_date" />
			<column name="lock_guid" />
			<column name="lock_by" />
			<column name="lock_date" />
			<column name="is_checked" />
		</entity>
		<entity schema="public" name="v_rich_auth_role" color="D1BEF4" x="2992" y="10592" />
		<entity schema="public" name="v_rich_auth_role_uri" color="F4DDBE" x="3648" y="12976" />
		<entity schema="public" name="v_rich_auth_session" color="D1BEF4" x="2752" y="11456" />
		<entity schema="public" name="v_rich_auth_sso" color="BEBEF4" x="2048" y="9184" />
		<entity schema="public" name="v_rich_auth_token" color="D1BEF4" x="3296" y="10592" />
		<entity schema="public" name="v_rich_calendar_account" color="D1BEF4" x="2960" y="8160" >
			<column name="calendar_account_uid" />
			<column name="calendar_account_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="calendar_type_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_calendar_approval" color="D1BEF4" x="3216" y="8160" >
			<column name="calendar_approval_uid" />
			<column name="calendar_approval_name" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="calendar_approval_type_uid" />
			<column name="calendar_event_group_uid" />
			<column name="calendar_type_uid" />
			<column name="time_submit_type_name" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
		</entity>
		<entity schema="public" name="v_rich_calendar_approval_type" color="D1BEF4" x="3504" y="8160" />
		<entity schema="public" name="v_rich_calendar_event" color="D1BEF4" x="3216" y="8480" >
			<column name="calendar_event_uid" />
			<column name="calendar_event_name" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="calendar_event_group_uid" />
			<column name="calendar_type_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_calendar_event_group" color="D1BEF4" x="3888" y="8800" >
			<column name="calendar_event_group_uid" />
			<column name="calendar_event_group_name" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="calendar_account_uid" />
			<column name="calendar_event_type_uid" />
			<column name="group_comment" />
			<column name="event_start_date" />
			<column name="event_end_date" />
			<column name="is_approved" />
			<column name="row_instance" />
		</entity>
		<entity schema="public" name="v_rich_calendar_event_type" color="D1BEF4" x="3488" y="8800" />
		<entity schema="public" name="v_rich_calendar_type" color="D1BEF4" x="3216" y="8800" />
		<entity schema="public" name="v_rich_client" color="D1BEF4" x="48" y="10720" >
			<column name="client_uid" />
			<column name="client_name" />
			<column name="tenant_uid" />
			<column name="country_uid" />
			<column name="client_type_uid" />
			<column name="client_category_uid" />
			<column name="account_uid" />
			<column name="client_code" />
			<column name="client_description" />
			<column name="start_date" />
			<column name="end_date" />
		</entity>
		<entity schema="public" name="v_rich_client_account" color="BED3F4" x="4480" y="10176" >
			<column name="client_account_uid" />
			<column name="client_account_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="client_role_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_client_country" color="BED3F4" x="4720" y="10496" >
			<column name="client_country_uid" />
			<column name="client_country_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="country_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_client_payment" color="BED3F4" x="4464" y="10496" >
			<column name="client_payment_uid" />
			<column name="client_payment_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="currency_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="payment_value" />
			<column name="payment_type" />
			<column name="source_number" />
		</entity>
		<entity schema="public" name="v_rich_client_role" color="D1BEF4" x="288" y="11040" />
		<entity schema="public" name="v_rich_client_status" color="BED3F4" x="4208" y="10080" />
		<entity schema="public" name="v_rich_client_type" color="D1BEF4" x="528" y="11040" />
		<entity schema="public" name="v_rich_connection_engine" color="BED3F4" x="4208" y="9568" />
		<entity schema="public" name="v_rich_connection_host" color="BED3F4" x="4480" y="9568" />
		<entity schema="public" name="v_rich_connection_user" color="BED3F4" x="4880" y="9568" />
		<entity schema="public" name="v_rich_country" color="BEBEF4" x="1456" y="8480" />
		<entity schema="public" name="v_rich_currency" color="BEBEF4" x="1696" y="8768" />
		<entity schema="public" name="v_rich_event_acknowledge" color="BEBEF4" x="5328" y="9104" />
		<entity schema="public" name="v_rich_event_channel" color="C7F4BE" x="6720" y="8576" />
		<entity schema="public" name="v_rich_event_channel_type" color="C7F4BE" x="7120" y="9440" />
		<entity schema="public" name="v_rich_event_instance" color="BEBEF4" x="5712" y="9104" />
		<entity schema="public" name="v_rich_event_notification" color="BEBEF4" x="6000" y="9840" />
		<entity schema="public" name="v_rich_event_observer" color="BEBEF4" x="5712" y="9840" />
		<entity schema="public" name="v_rich_event_subscription" color="BEBEF4" x="5344" y="8160" />
		<entity schema="public" name="v_rich_event_template" color="BEBEF4" x="6256" y="9104" />
		<entity schema="public" name="v_rich_event_type" color="BEBEF4" x="6000" y="9104" />
		<entity schema="public" name="v_rich_invoice_action" color="C7F4BE" x="4512" y="8560" >
			<column name="invoice_action_uid" />
			<column name="invoice_action_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="invoice_instance_uid" />
			<column name="invoice_action_type_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_invoice_action_type" color="C7F4BE" x="4768" y="8560" />
		<entity schema="public" name="v_rich_invoice_category" color="C7F4BE" x="4208" y="8256" />
		<entity schema="public" name="v_rich_invoice_entry" color="C7F4BE" x="4768" y="8240" >
			<column name="invoice_entry_uid" />
			<column name="invoice_entry_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_details" />
			<column name="entry_amount_net" />
			<column name="entry_amount_tax" />
			<column name="entry_amount_gross" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_invoice_flow" color="BEBEF4" x="4208" y="7472" />
		<entity schema="public" name="v_rich_invoice_flow_state" color="C7F4BE" x="4432" y="8880" />
		<entity schema="public" name="v_rich_invoice_instance" color="C7F4BE" x="4512" y="8240" >
			<column name="invoice_instance_uid" />
			<column name="invoice_instance_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="invoice_flow_uid" />
			<column name="invoice_status_uid" />
			<column name="invoice_category_uid" />
			<column name="invoice_type_uid" />
			<column name="period_uid" />
			<column name="currency_uid" />
			<column name="invoice_number" />
		</entity>
		<entity schema="public" name="v_rich_invoice_status" color="BEBEF4" x="4448" y="7056" />
		<entity schema="public" name="v_rich_invoice_type" color="C7F4BE" x="5008" y="8160" />
		<entity schema="public" name="v_rich_monitor" color="BEBEF4" x="1216" y="8160" >
			<column name="monitor_uid" />
			<column name="monitor_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="monitor_type_uid" />
			<column name="schedule_expression" />
			<column name="monitor_protocol" />
			<column name="monitor_url" />
			<column name="monitor_user" />
			<column name="monitor_priority" />
			<column name="is_on_hold" />
		</entity>
		<entity schema="public" name="v_rich_monitor_run" color="BEBEF4" x="1456" y="8160" >
			<column name="monitor_run_uid" />
			<column name="monitor_run_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="monitor_uid" />
			<column name="status_name" />
			<column name="run_time" />
			<column name="exception_message" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
		</entity>
		<entity schema="public" name="v_rich_monitor_type" color="BEBEF4" x="1696" y="8160" />
		<entity schema="public" name="v_rich_period" color="D1BEF4" x="48" y="10176" />
		<entity schema="public" name="v_rich_process" color="D1BEF4" x="288" y="10176" />
		<entity schema="public" name="v_rich_process_run" color="D1BEF4" x="624" y="10176" />
		<entity schema="public" name="v_rich_process_type" color="D1BEF4" x="944" y="10176" />
		<entity schema="public" name="v_rich_project_account" color="C7F4BE" x="6592" y="8160" >
			<column name="project_account_uid" />
			<column name="project_account_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="project_instance_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
		</entity>
		<entity schema="public" name="v_rich_project_budget" color="C7F4BE" x="7120" y="8160" >
			<column name="project_budget_uid" />
			<column name="project_budget_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="project_instance_uid" />
			<column name="currency_uid" />
			<column name="budget_value" />
			<column name="is_approved" />
			<column name="is_current" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_project_group" color="C7F4BE" x="7120" y="8576" />
		<entity schema="public" name="v_rich_project_instance" color="BEBEF4" x="4944" y="7792" >
			<column name="project_instance_uid" />
			<column name="project_instance_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="project_type_uid" />
			<column name="manager_account_uid" />
			<column name="project_group_uid" />
			<column name="project_code" />
			<column name="project_description" />
			<column name="is_billable" />
			<column name="start_date" />
		</entity>
		<entity schema="public" name="v_rich_project_milestone" color="BEBEF4" x="4672" y="7472" >
			<column name="project_milestone_uid" />
			<column name="project_milestone_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="project_instance_uid" />
			<column name="project_budget_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="status_name" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_project_type" color="C7F4BE" x="6848" y="8160" />
		<entity schema="public" name="v_rich_report" color="BED3F4" x="2432" y="7264" />
		<entity schema="public" name="v_rich_report_content_type" color="BED3F4" x="2496" y="6864" />
		<entity schema="public" name="v_rich_report_format" color="BED3F4" x="2768" y="6864" />
		<entity schema="public" name="v_rich_report_run" color="BED3F4" x="2768" y="7264" >
			<column name="report_run_uid" />
			<column name="report_run_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="report_uid" />
			<column name="report_format_uid" />
			<column name="report_status_uid" />
			<column name="report_content_type_uid" />
			<column name="input_parameters_json" />
			<column name="run_time_ms" />
			<column name="returned_rows" />
		</entity>
		<entity schema="public" name="v_rich_report_status" color="BED3F4" x="3040" y="7264" />
		<entity schema="public" name="v_rich_report_type" color="BED3F4" x="2768" y="7584" />
		<entity schema="public" name="v_rich_storage" color="F4DDBE" x="4016" y="12976" />
		<entity schema="public" name="v_rich_storage_connection" color="F4DDBE" x="4560" y="12976" />
		<entity schema="public" name="v_rich_storage_query" color="F4DDBE" x="4160" y="13408" />
		<entity schema="public" name="v_rich_storage_type" color="F4DDBE" x="4288" y="12976" />
		<entity schema="public" name="v_rich_synchronization" color="C7F4BE" x="7456" y="8160" />
		<entity schema="public" name="v_rich_synchronization_run" color="C7F4BE" x="7872" y="8160" />
		<entity schema="public" name="v_rich_synchronization_type" color="C7F4BE" x="8256" y="8160" />
		<entity schema="public" name="v_rich_system_attribute" color="F4DDBE" x="8752" y="8752" />
		<entity schema="public" name="v_rich_system_database" color="BEBEF4" x="4688" y="7008" />
		<entity schema="public" name="v_rich_system_exception" color="C7F4BE" x="7872" y="8992" />
		<entity schema="public" name="v_rich_system_instance" color="BEBEF4" x="4944" y="7008" />
		<entity schema="public" name="v_rich_system_license" color="C7F4BE" x="8144" y="8992" />
		<entity schema="public" name="v_rich_system_lock" color="F4DDBE" x="8784" y="8160" />
		<entity schema="public" name="v_rich_system_module" color="F4DDBE" x="9600" y="8752" />
		<entity schema="public" name="v_rich_system_object" color="F4DDBE" x="10144" y="8176" />
		<entity schema="public" name="v_rich_system_object_type" color="F4DDBE" x="10144" y="8800" />
		<entity schema="public" name="v_rich_system_query" color="F4DDBE" x="9360" y="8752" />
		<entity schema="public" name="v_rich_system_request" color="C7F4BE" x="8400" y="8992" />
		<entity schema="public" name="v_rich_system_setting" color="C7F4BE" x="8144" y="9408" />
		<entity schema="public" name="v_rich_system_setting_account" color="C7F4BE" x="6720" y="9440" />
		<entity schema="public" name="v_rich_system_state" color="F4DDBE" x="9120" y="8752" />
		<entity schema="public" name="v_rich_system_table" color="F4DDBE" x="9600" y="9328" />
		<entity schema="public" name="v_rich_system_thread" color="F4DDBE" x="9872" y="9328" />
		<entity schema="public" name="v_rich_system_version" color="F4DDBE" x="9120" y="8336" />
		<entity schema="public" name="v_rich_tenant" color="BEBEF4" x="3344" y="6352" >
			<column name="tenant_uid" />
			<column name="tenant_name" />
			<column name="country_uid" />
			<column name="tenant_type_uid" />
			<column name="tenant_category_uid" />
			<column name="tenant_code" />
			<column name="tenant_description" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="is_internal" />
			<column name="is_system" />
		</entity>
		<entity schema="public" name="v_rich_tenant_account" color="C7F4BE" x="2944" y="13200" >
			<column name="tenant_account_uid" />
			<column name="tenant_account_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="tenant_role_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_tenant_category" color="C7F4BE" x="2656" y="13104" />
		<entity schema="public" name="v_rich_tenant_country" color="C7F4BE" x="2400" y="13520" >
			<column name="tenant_country_uid" />
			<column name="tenant_country_name" />
			<column name="country_uid" />
			<column name="tenant_uid" />
			<column name="country_priority" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_tenant_license" color="C7F4BE" x="2848" y="13520" />
		<entity schema="public" name="v_rich_tenant_payment" color="F4DDBE" x="10528" y="8800" >
			<column name="tenant_payment_uid" />
			<column name="tenant_payment_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="currency_uid" />
			<column name="tenant_payment_type_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="payment_value" />
			<column name="source_number" />
			<column name="source_reference" />
		</entity>
		<entity schema="public" name="v_rich_tenant_payment_type" color="F4DDBE" x="10800" y="9120" />
		<entity schema="public" name="v_rich_tenant_role" color="BEBEF4" x="3584" y="6352" />
		<entity schema="public" name="v_rich_tenant_status" color="BEBEF4" x="3824" y="6352" />
		<entity schema="public" name="v_rich_tenant_type" color="BEBEF4" x="3824" y="6768" />
		<entity schema="public" name="v_rich_time_approval" color="BEBEF4" x="3584" y="6768" >
			<column name="time_approval_uid" />
			<column name="time_approval_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="time_entry_uid" />
			<column name="approval_comment" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_time_entry" color="F4DDBE" x="10544" y="8480" >
			<column name="time_entry_uid" />
			<column name="time_entry_name" />
			<column name="time_submit_uid" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="project_instance_uid" />
			<column name="project_milestone_uid" />
			<column name="period_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_period" />
			<column name="entry_note" />
		</entity>
		<entity schema="public" name="v_rich_time_entry_final" color="F4DDBE" x="10800" y="8800" >
			<column name="time_entry_final_uid" />
			<column name="time_entry_final_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="project_instance_uid" />
			<column name="project_milestone_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_period" />
			<column name="entry_note" />
			<column name="lock_uid" />
			<column name="start_date" />
		</entity>
		<entity schema="public" name="v_rich_time_entry_invoice" color="BED3F4" x="3040" y="6944" >
			<column name="time_entry_invoice_uid" />
			<column name="time_entry_invoice_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="time_submit_uid" />
			<column name="time_entry_uid" />
			<column name="project_instance_uid" />
			<column name="project_milestone_uid" />
			<column name="period_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_period" />
		</entity>
		<entity schema="public" name="v_rich_time_rule" color="BEBEF4" x="3584" y="7088" />
		<entity schema="public" name="v_rich_time_rule_client" color="BEBEF4" x="3824" y="7488" />
		<entity schema="public" name="v_rich_time_submit" color="F4DDBE" x="10544" y="8160" >
			<column name="time_submit_uid" />
			<column name="time_submit_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="period_uid" />
			<column name="time_submit_description" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_time_submit_type" color="F4DDBE" x="10816" y="8160" />
		<callout x="3408" y="2496" pointer="Round" >
			<comment><![CDATA[This is a layout. You can create multiple layouts with the same or different tables. 

Edit tables by double-clicking the table headers.]]></comment>
		</callout>
		<group name="account" color="ECF0F7" >
			<entity schema="public" name="account" />
			<entity schema="public" name="audit_change" />
			<entity schema="public" name="auth_attempt" />
			<entity schema="public" name="calendar_account" />
			<entity schema="public" name="client" />
			<entity schema="public" name="connection_engine" />
			<entity schema="public" name="country" />
			<entity schema="public" name="currency" />
			<entity schema="public" name="databasechangelog" />
			<entity schema="public" name="event_acknowledge" />
			<entity schema="public" name="invoice_action" />
			<entity schema="public" name="monitor" />
			<entity schema="public" name="period" />
			<entity schema="public" name="process" />
			<entity schema="public" name="project_account" />
			<entity schema="public" name="report" />
			<entity schema="public" name="storage" />
			<entity schema="public" name="synchronization" />
			<entity schema="public" name="system_attribute" />
			<entity schema="public" name="tenant" />
			<entity schema="public" name="time_approval" />
			<entity schema="public" name="v_definition_column_all_list" />
			<entity schema="public" name="v_models_register" />
			<entity schema="public" name="v_rich_account" />
			<entity schema="public" name="audit_type" />
			<entity schema="public" name="databasechangeloglock" />
		</group>
		<group name="auth_key" color="EEF7EC" >
			<entity schema="public" name="auth_key" />
			<entity schema="public" name="auth_sso" />
			<entity schema="public" name="auth_token" />
			<entity schema="public" name="auth_key_type" />
			<entity schema="public" name="auth_permission" />
			<entity schema="public" name="auth_password" />
			<entity schema="public" name="auth_password_rule" />
			<entity schema="public" name="auth_password_current" />
		</group>
		<group name="calendar_event" color="F0ECF7" >
			<entity schema="public" name="calendar_event" />
			<entity schema="public" name="calendar_event_type" />
			<entity schema="public" name="calendar_event_group" />
			<entity schema="public" name="calendar_type" />
			<entity schema="public" name="calendar_approval" />
			<entity schema="public" name="calendar_approval_type" />
		</group>
		<group name="client_account" color="EEF7EC" >
			<entity schema="public" name="client_account" />
			<entity schema="public" name="client_role" />
			<entity schema="public" name="client_type" />
			<entity schema="public" name="client_status" />
			<entity schema="public" name="client_country" />
			<entity schema="public" name="client_payment" />
		</group>
		<group name="connection_host" color="EEF7EC" >
			<entity schema="public" name="connection_host" />
			<entity schema="public" name="connection_user" />
		</group>
		<group name="event_instance" color="F0ECF7" >
			<entity schema="public" name="event_instance" />
			<entity schema="public" name="event_channel" />
			<entity schema="public" name="event_channel_type" />
			<entity schema="public" name="event_type" />
			<entity schema="public" name="event_template" />
			<entity schema="public" name="event_observer" />
			<entity schema="public" name="event_notification" />
			<entity schema="public" name="event_subscription" />
		</group>
		<group name="invoice_category" color="ECF0F7" >
			<entity schema="public" name="invoice_category" />
			<entity schema="public" name="invoice_entry" />
			<entity schema="public" name="invoice_type" />
			<entity schema="public" name="invoice_flow_state" />
			<entity schema="public" name="invoice_instance" />
			<entity schema="public" name="invoice_status" />
			<entity schema="public" name="invoice_flow" />
			<entity schema="public" name="invoice_action_type" />
		</group>
		<group name="monitor_run" color="F0ECF7" >
			<entity schema="public" name="monitor_run" />
			<entity schema="public" name="monitor_type" />
		</group>
		<group name="process_run" color="ECF0F7" >
			<entity schema="public" name="process_run" />
			<entity schema="public" name="process_type" />
		</group>
		<group name="project_milestone" color="ECECF7" >
			<entity schema="public" name="project_milestone" />
			<entity schema="public" name="project_type" />
			<entity schema="public" name="project_group" />
			<entity schema="public" name="project_budget" />
			<entity schema="public" name="project_instance" />
		</group>
		<group name="report_content_type" color="ECF0F7" >
			<entity schema="public" name="report_content_type" />
			<entity schema="public" name="report_format" />
			<entity schema="public" name="report_run" />
			<entity schema="public" name="report_status" />
			<entity schema="public" name="report_type" />
		</group>
		<group name="storage_connection" color="EEF7EC" >
			<entity schema="public" name="storage_connection" />
			<entity schema="public" name="storage_query" />
			<entity schema="public" name="storage_type" />
		</group>
		<group name="synchronization_run" color="F7F2EC" >
			<entity schema="public" name="synchronization_run" />
			<entity schema="public" name="synchronization_type" />
		</group>
		<group name="system_database" color="ECECF7" >
			<entity schema="public" name="system_database" />
			<entity schema="public" name="system_license" />
			<entity schema="public" name="system_lock" />
			<entity schema="public" name="system_instance" />
			<entity schema="public" name="system_table" />
			<entity schema="public" name="system_thread" />
		</group>
		<group name="tenant_role" color="F7F2EC" >
			<entity schema="public" name="tenant_role" />
			<entity schema="public" name="tenant_type" />
			<entity schema="public" name="tenant_status" />
			<entity schema="public" name="tenant_account" />
			<entity schema="public" name="tenant_category" />
			<entity schema="public" name="tenant_country" />
			<entity schema="public" name="tenant_license" />
			<entity schema="public" name="tenant_payment" />
			<entity schema="public" name="tenant_payment_type" />
		</group>
		<group name="time_rule" color="F7F2EC" >
			<entity schema="public" name="time_rule" />
			<entity schema="public" name="time_rule_client" />
			<entity schema="public" name="time_entry_invoice" />
			<entity schema="public" name="time_submit" />
			<entity schema="public" name="time_submit_type" />
			<entity schema="public" name="time_entry" />
			<entity schema="public" name="time_entry_final" />
		</group>
		<group name="v_definition_foreign_key" color="ECF0F7" >
			<entity schema="public" name="v_definition_foreign_key" />
			<entity schema="public" name="v_definition_foreign_key_existing" />
			<entity schema="public" name="v_definition_table_base_list" />
			<entity schema="public" name="v_definition_table_column_custom" />
			<entity schema="public" name="v_definition_python_services_list" />
			<entity schema="public" name="v_definition_python_services_object" />
			<entity schema="public" name="v_definition_python_dtos_rich" />
			<entity schema="public" name="v_definition_python_dtos_rich_list" />
		</group>
		<group name="v_rich_account_division" color="ECECF7" >
			<entity schema="public" name="v_rich_account_division" />
			<entity schema="public" name="v_rich_account_division_template" />
			<entity schema="public" name="v_rich_system_database" />
			<entity schema="public" name="v_rich_system_instance" />
			<entity schema="public" name="v_rich_project_milestone" />
			<entity schema="public" name="v_rich_project_instance" />
			<entity schema="public" name="v_rich_invoice_status" />
			<entity schema="public" name="v_rich_invoice_flow" />
		</group>
		<group name="v_rich_event_acknowledge" color="ECECF7" >
			<entity schema="public" name="v_rich_event_acknowledge" />
			<entity schema="public" name="v_rich_event_instance" />
			<entity schema="public" name="v_rich_event_type" />
			<entity schema="public" name="v_rich_event_notification" />
			<entity schema="public" name="v_rich_event_observer" />
			<entity schema="public" name="v_rich_event_subscription" />
			<entity schema="public" name="v_rich_event_template" />
		</group>
		<group name="v_rich_invoice_action" color="EEF7EC" >
			<entity schema="public" name="v_rich_invoice_action" />
			<entity schema="public" name="v_rich_invoice_action_type" />
			<entity schema="public" name="v_rich_invoice_flow_state" />
			<entity schema="public" name="v_rich_invoice_category" />
			<entity schema="public" name="v_rich_invoice_instance" />
			<entity schema="public" name="v_rich_invoice_entry" />
			<entity schema="public" name="v_rich_invoice_type" />
		</group>
		<group name="v_rich_calendar_account" color="F0ECF7" >
			<entity schema="public" name="v_rich_calendar_account" />
			<entity schema="public" name="v_rich_calendar_approval" />
			<entity schema="public" name="v_rich_calendar_approval_type" />
			<entity schema="public" name="v_rich_calendar_event" />
			<entity schema="public" name="v_rich_calendar_event_type" />
			<entity schema="public" name="v_rich_calendar_type" />
			<entity schema="public" name="v_rich_calendar_event_group" />
		</group>
		<group name="v_rich_tenant" color="ECECF7" >
			<entity schema="public" name="v_rich_tenant" />
			<entity schema="public" name="v_rich_tenant_role" />
			<entity schema="public" name="v_rich_tenant_status" />
			<entity schema="public" name="v_rich_tenant_type" />
			<entity schema="public" name="v_rich_time_approval" />
			<entity schema="public" name="v_rich_time_rule" />
			<entity schema="public" name="v_rich_time_rule_client" />
		</group>
		<group name="v_definition_system_table_generation_list" color="F0ECF7" >
			<entity schema="public" name="v_definition_system_table_generation_list" />
			<entity schema="public" name="v_definition_service_list" />
			<entity schema="public" name="v_definition_service_register" />
			<entity schema="public" name="v_definition_dao_init" />
			<entity schema="public" name="v_definition_dao_register" />
			<entity schema="public" name="v_definition_thin_dto" />
			<entity schema="public" name="v_definition_write_dto" />
		</group>
		<group name="v_definition_table_all_list" color="EEF7EC" >
			<entity schema="public" name="v_definition_table_all_list" />
			<entity schema="public" name="v_definition_table_rich_list" />
			<entity schema="public" name="v_definition_table_column_all" />
			<entity schema="public" name="v_definition_table_column_rich" />
			<entity schema="public" name="v_definition_python_dtos_write" />
			<entity schema="public" name="v_definition_python_dtos_write_list" />
		</group>
		<group name="v_rich_report" color="ECF0F7" >
			<entity schema="public" name="v_rich_report" />
			<entity schema="public" name="v_rich_report_run" />
			<entity schema="public" name="v_rich_report_status" />
			<entity schema="public" name="v_rich_report_type" />
			<entity schema="public" name="v_rich_report_content_type" />
			<entity schema="public" name="v_rich_report_format" />
			<entity schema="public" name="v_rich_time_entry_invoice" />
		</group>
		<group name="v_rich_connection_engine" color="ECF0F7" >
			<entity schema="public" name="v_rich_connection_engine" />
			<entity schema="public" name="v_rich_connection_host" />
			<entity schema="public" name="v_rich_connection_user" />
			<entity schema="public" name="v_rich_client_account" />
			<entity schema="public" name="v_rich_client_country" />
			<entity schema="public" name="v_rich_client_payment" />
			<entity schema="public" name="v_rich_client_status" />
		</group>
		<group name="v_rich_monitor" color="ECECF7" >
			<entity schema="public" name="v_rich_monitor" />
			<entity schema="public" name="v_rich_monitor_run" />
			<entity schema="public" name="v_rich_monitor_type" />
			<entity schema="public" name="v_rich_country" />
			<entity schema="public" name="v_rich_currency" />
			<entity schema="public" name="v_rich_auth_key" />
			<entity schema="public" name="v_rich_auth_sso" />
		</group>
		<group name="v_rich_project_account" color="EEF7EC" >
			<entity schema="public" name="v_rich_project_account" />
			<entity schema="public" name="v_rich_project_type" />
			<entity schema="public" name="v_rich_project_budget" />
			<entity schema="public" name="v_rich_project_group" />
			<entity schema="public" name="v_rich_event_channel" />
			<entity schema="public" name="v_rich_event_channel_type" />
			<entity schema="public" name="v_rich_system_setting_account" />
		</group>
		<group name="v_rich_synchronization" color="EEF7EC" >
			<entity schema="public" name="v_rich_synchronization" />
			<entity schema="public" name="v_rich_synchronization_run" />
			<entity schema="public" name="v_rich_synchronization_type" />
			<entity schema="public" name="v_rich_system_exception" />
			<entity schema="public" name="v_rich_system_license" />
			<entity schema="public" name="v_rich_system_request" />
			<entity schema="public" name="v_rich_system_setting" />
		</group>
		<group name="v_rich_system_attribute" color="F7F2EC" >
			<entity schema="public" name="v_rich_system_attribute" />
			<entity schema="public" name="v_rich_system_state" />
			<entity schema="public" name="v_rich_system_query" />
			<entity schema="public" name="v_rich_system_lock" />
			<entity schema="public" name="v_rich_system_version" />
			<entity schema="public" name="v_rich_system_module" />
			<entity schema="public" name="v_rich_system_table" />
			<entity schema="public" name="v_rich_system_thread" />
		</group>
		<group name="auth_request" color="ECECF7" >
			<entity schema="public" name="auth_request" />
			<entity schema="public" name="auth_role" />
			<entity schema="public" name="auth_role_uri" />
			<entity schema="public" name="auth_identity" />
			<entity schema="public" name="auth_identity_tenant" />
			<entity schema="public" name="auth_session" />
		</group>
		<group name="v_rich_auth_attempt" color="F0ECF7" >
			<entity schema="public" name="v_rich_auth_attempt" />
			<entity schema="public" name="v_rich_auth_request" />
			<entity schema="public" name="v_rich_auth_session" />
			<entity schema="public" name="v_rich_auth_role" />
			<entity schema="public" name="v_rich_auth_identity" />
			<entity schema="public" name="v_rich_auth_identity_tenant" />
			<entity schema="public" name="v_rich_auth_token" />
			<entity schema="public" name="v_rich_auth_key_type" />
		</group>
		<group name="account_division" color="F7F2EC" >
			<entity schema="public" name="account_division" />
			<entity schema="public" name="account_division_template" />
			<entity schema="public" name="account_hierarchy" />
		</group>
		<group name="system_exception" color="F0ECF7" >
			<entity schema="public" name="system_exception" />
			<entity schema="public" name="system_module" />
			<entity schema="public" name="system_object" />
			<entity schema="public" name="system_setting" />
			<entity schema="public" name="system_setting_account" />
			<entity schema="public" name="system_version" />
		</group>
		<group name="system_state" color="ECF0F7" >
			<entity schema="public" name="system_state" />
			<entity schema="public" name="system_query" />
			<entity schema="public" name="system_request" />
			<entity schema="public" name="system_object_type" />
		</group>
		<group name="v_rich_time_submit" color="F7F2EC" >
			<entity schema="public" name="v_rich_time_submit" />
			<entity schema="public" name="v_rich_time_submit_type" />
			<entity schema="public" name="v_rich_time_entry" />
			<entity schema="public" name="v_rich_time_entry_final" />
			<entity schema="public" name="v_rich_tenant_payment" />
			<entity schema="public" name="v_rich_tenant_payment_type" />
			<entity schema="public" name="v_rich_system_object" />
			<entity schema="public" name="v_rich_system_object_type" />
		</group>
		<group name="v_definition_python_daos_list" color="ECF0F7" >
			<entity schema="public" name="v_definition_python_daos_list" />
			<entity schema="public" name="v_definition_python_daos_read" />
			<entity schema="public" name="v_definition_python_dtos_full" />
			<entity schema="public" name="v_definition_python_dtos_thin" />
			<entity schema="public" name="v_definition_python_dtos_model_list" />
			<entity schema="public" name="v_definition_python_dtos_read" />
			<entity schema="public" name="v_definition_python_dtos_full_list" />
			<entity schema="public" name="v_definition_python_dtos_read_list" />
		</group>
		<group name="account_group" color="F7F2EC" >
			<entity schema="public" name="account_group" />
			<entity schema="public" name="account_type" />
			<entity schema="public" name="account_rate" />
			<entity schema="public" name="account_team" />
			<entity schema="public" name="account_title_responsibility" />
			<entity schema="public" name="account_skill" />
			<entity schema="public" name="account_title" />
		</group>
		<group name="v_rich_period" color="F0ECF7" >
			<entity schema="public" name="v_rich_period" />
			<entity schema="public" name="v_rich_process" />
			<entity schema="public" name="v_rich_process_run" />
			<entity schema="public" name="v_rich_process_type" />
			<entity schema="public" name="v_rich_client" />
			<entity schema="public" name="v_rich_client_role" />
			<entity schema="public" name="v_rich_client_type" />
		</group>
		<group name="v_rich_storage" color="F7F2EC" >
			<entity schema="public" name="v_rich_storage" />
			<entity schema="public" name="v_rich_storage_type" />
			<entity schema="public" name="v_rich_storage_connection" />
			<entity schema="public" name="v_rich_storage_query" />
			<entity schema="public" name="v_rich_audit_change" />
			<entity schema="public" name="v_rich_audit_type" />
			<entity schema="public" name="v_rich_auth_role_uri" />
		</group>
		<group name="v_definition_models" color="ECECF7" >
			<entity schema="public" name="v_definition_models" />
			<entity schema="public" name="v_definition_models_register" />
			<entity schema="public" name="v_definition_column_base_list" />
			<entity schema="public" name="v_definition_column_custom_list" />
			<entity schema="public" name="v_definition_column_rich_list" />
			<entity schema="public" name="v_definition_table_custom_list" />
			<entity schema="public" name="v_definition_table_column_base" />
		</group>
		<group name="v_rich_auth_permission" color="EEF7EC" >
			<entity schema="public" name="v_rich_auth_permission" />
			<entity schema="public" name="v_rich_auth_password" />
			<entity schema="public" name="v_rich_auth_password_current" />
			<entity schema="public" name="v_rich_auth_password_rule" />
			<entity schema="public" name="v_rich_tenant_account" />
			<entity schema="public" name="v_rich_tenant_license" />
			<entity schema="public" name="v_rich_tenant_category" />
			<entity schema="public" name="v_rich_tenant_country" />
		</group>
		<group name="v_rich_account_type" color="F7F2EC" >
			<entity schema="public" name="v_rich_account_type" />
			<entity schema="public" name="v_rich_account_team" />
			<entity schema="public" name="v_rich_account_group" />
			<entity schema="public" name="v_rich_account_rate" />
			<entity schema="public" name="v_rich_account_title_responsibility" />
			<entity schema="public" name="v_rich_account_title" />
			<entity schema="public" name="v_rich_account_hierarchy" />
			<entity schema="public" name="v_rich_account_skill" />
		</group>
	</layout>
	<layout name="~Layout with Sample Tools" id="Layout-2652" confirmed="y" show_column_type="y" show_relation="columns" >
		<entity schema="public" name="account" color="BED3F4" x="1904" y="2656" />
		<entity schema="public" name="account_division" color="F4DDBE" x="7392" y="8784" />
		<entity schema="public" name="account_division_template" color="F4DDBE" x="7712" y="8784" />
		<entity schema="public" name="account_group" color="F4DDBE" x="8112" y="8800" />
		<entity schema="public" name="account_hierarchy" color="F4DDBE" x="7712" y="9248" />
		<entity schema="public" name="account_rate" color="F4DDBE" x="8704" y="8800" />
		<entity schema="public" name="account_skill" color="F4DDBE" x="8416" y="8384" />
		<entity schema="public" name="account_team" color="F4DDBE" x="8416" y="9216" />
		<entity schema="public" name="account_title" color="F4DDBE" x="8704" y="8384" />
		<entity schema="public" name="account_title_responsibility" color="F4DDBE" x="8080" y="8336" />
		<entity schema="public" name="account_type" color="F4DDBE" x="8416" y="8800" />
		<entity schema="public" name="audit_change" color="BED3F4" x="2192" y="2656" />
		<entity schema="public" name="audit_type" color="BED3F4" x="2768" y="2656" />
		<entity schema="public" name="auth_attempt" color="BED3F4" x="2192" y="3200" />
		<entity schema="public" name="auth_identity" color="BEBEF4" x="8272" y="14880" />
		<entity schema="public" name="auth_identity_tenant" color="BEBEF4" x="8560" y="14880" />
		<entity schema="public" name="auth_key" color="C7F4BE" x="3664" y="1376" />
		<entity schema="public" name="auth_key_type" color="C7F4BE" x="3376" y="1920" />
		<entity schema="public" name="auth_password" color="C7F4BE" x="3088" y="1920" />
		<entity schema="public" name="auth_password_current" color="C7F4BE" x="3664" y="2880" />
		<entity schema="public" name="auth_password_rule" color="C7F4BE" x="3376" y="2432" />
		<entity schema="public" name="auth_permission" color="C7F4BE" x="3376" y="1408" />
		<entity schema="public" name="auth_request" color="BEBEF4" x="7696" y="14352" />
		<entity schema="public" name="auth_role" color="BEBEF4" x="7984" y="14352" />
		<entity schema="public" name="auth_role_uri" color="BEBEF4" x="8272" y="14352" />
		<entity schema="public" name="auth_session" color="BEBEF4" x="7984" y="14880" />
		<entity schema="public" name="auth_sso" color="C7F4BE" x="3952" y="1376" />
		<entity schema="public" name="auth_token" color="C7F4BE" x="3664" y="1920" />
		<entity schema="public" name="calendar_account" color="BED3F4" x="1904" y="3200" />
		<entity schema="public" name="calendar_approval" color="D1BEF4" x="3088" y="4784" />
		<entity schema="public" name="calendar_approval_type" color="D1BEF4" x="3392" y="5280" />
		<entity schema="public" name="calendar_event" color="D1BEF4" x="3104" y="4320" />
		<entity schema="public" name="calendar_event_group" color="D1BEF4" x="3696" y="4320" />
		<entity schema="public" name="calendar_event_type" color="D1BEF4" x="3392" y="4320" />
		<entity schema="public" name="calendar_type" color="D1BEF4" x="3392" y="4784" />
		<entity schema="public" name="client" color="BED3F4" x="1616" y="3200" />
		<entity schema="public" name="client_account" color="C7F4BE" x="1312" y="4896" />
		<entity schema="public" name="client_country" color="C7F4BE" x="1600" y="5312" />
		<entity schema="public" name="client_payment" color="C7F4BE" x="1296" y="4320" />
		<entity schema="public" name="client_role" color="C7F4BE" x="1600" y="4896" />
		<entity schema="public" name="client_status" color="C7F4BE" x="1888" y="5312" />
		<entity schema="public" name="client_type" color="C7F4BE" x="1888" y="4896" />
		<entity schema="public" name="connection_engine" color="BED3F4" x="1616" y="2704" />
		<entity schema="public" name="connection_host" color="C7F4BE" x="3088" y="3760" />
		<entity schema="public" name="connection_user" color="C7F4BE" x="3376" y="3760" />
		<entity schema="public" name="country" color="BED3F4" x="1616" y="1952" />
		<entity schema="public" name="currency" color="BED3F4" x="1904" y="2240" />
		<entity schema="public" name="databasechangelog" color="BED3F4" x="2192" y="2288" />
		<entity schema="public" name="databasechangeloglock" color="BED3F4" x="2768" y="3104" />
		<entity schema="public" name="event_acknowledge" color="BED3F4" x="2480" y="2656" />
		<entity schema="public" name="event_channel" color="D1BEF4" x="400" y="4336" />
		<entity schema="public" name="event_channel_type" color="D1BEF4" x="688" y="4336" />
		<entity schema="public" name="event_instance" color="D1BEF4" x="112" y="4336" />
		<entity schema="public" name="event_notification" color="D1BEF4" x="400" y="5232" />
		<entity schema="public" name="event_observer" color="D1BEF4" x="688" y="5232" />
		<entity schema="public" name="event_subscription" color="D1BEF4" x="976" y="4320" />
		<entity schema="public" name="event_template" color="D1BEF4" x="976" y="4816" />
		<entity schema="public" name="event_type" color="D1BEF4" x="688" y="4816" />
		<entity schema="public" name="invoice_action" color="BED3F4" x="2480" y="3120" />
		<entity schema="public" name="invoice_action_type" color="BED3F4" x="400" y="2752" />
		<entity schema="public" name="invoice_category" color="BED3F4" x="48" y="3152" />
		<entity schema="public" name="invoice_entry" color="BED3F4" x="352" y="3152" />
		<entity schema="public" name="invoice_flow" color="BED3F4" x="976" y="3152" />
		<entity schema="public" name="invoice_flow_state" color="BED3F4" x="688" y="3664" />
		<entity schema="public" name="invoice_instance" color="BED3F4" x="352" y="3664" />
		<entity schema="public" name="invoice_status" color="BED3F4" x="64" y="3664" />
		<entity schema="public" name="invoice_type" color="BED3F4" x="688" y="3152" />
		<entity schema="public" name="monitor" color="BED3F4" x="2480" y="2064" />
		<entity schema="public" name="monitor_run" color="D1BEF4" x="2480" y="4320" />
		<entity schema="public" name="monitor_type" color="D1BEF4" x="2768" y="4320" />
		<entity schema="public" name="period" color="BED3F4" x="2480" y="3696" />
		<entity schema="public" name="process" color="BED3F4" x="2192" y="3696" />
		<entity schema="public" name="process_run" color="BED3F4" x="688" y="1376" />
		<entity schema="public" name="process_type" color="BED3F4" x="976" y="1376" />
		<entity schema="public" name="project_account" color="BED3F4" x="1904" y="3696" />
		<entity schema="public" name="project_budget" color="BEBEF4" x="384" y="304" />
		<entity schema="public" name="project_group" color="BEBEF4" x="976" y="816" />
		<entity schema="public" name="project_instance" color="BEBEF4" x="688" y="224" />
		<entity schema="public" name="project_milestone" color="BEBEF4" x="400" y="816" />
		<entity schema="public" name="project_type" color="BEBEF4" x="688" y="816" />
		<entity schema="public" name="report" color="BED3F4" x="1616" y="3792" />
		<entity schema="public" name="report_content_type" color="BED3F4" x="1296" y="528" />
		<entity schema="public" name="report_format" color="BED3F4" x="1600" y="528" />
		<entity schema="public" name="report_run" color="BED3F4" x="1888" y="528" />
		<entity schema="public" name="report_status" color="BED3F4" x="1600" y="928" />
		<entity schema="public" name="report_type" color="BED3F4" x="2176" y="528" />
		<entity schema="public" name="storage" color="BED3F4" x="1328" y="3792" />
		<entity schema="public" name="storage_connection" color="C7F4BE" x="3088" y="880" />
		<entity schema="public" name="storage_query" color="C7F4BE" x="3376" y="880" />
		<entity schema="public" name="storage_type" color="C7F4BE" x="3664" y="880" />
		<entity schema="public" name="synchronization" color="BED3F4" x="1296" y="3248" />
		<entity schema="public" name="synchronization_run" color="F4DDBE" x="4272" y="1376" />
		<entity schema="public" name="synchronization_type" color="F4DDBE" x="4592" y="1376" />
		<entity schema="public" name="system_attribute" color="BED3F4" x="1328" y="2720" />
		<entity schema="public" name="system_database" color="BEBEF4" x="4272" y="2480" />
		<entity schema="public" name="system_exception" color="D1BEF4" x="5744" y="2480" />
		<entity schema="public" name="system_instance" color="BEBEF4" x="4560" y="2896" />
		<entity schema="public" name="system_license" color="BEBEF4" x="4560" y="2480" />
		<entity schema="public" name="system_lock" color="BEBEF4" x="4848" y="2480" />
		<entity schema="public" name="system_module" color="D1BEF4" x="6032" y="2480" />
		<entity schema="public" name="system_object" color="D1BEF4" x="6336" y="2480" />
		<entity schema="public" name="system_object_type" color="BED3F4" x="5744" y="1920" />
		<entity schema="public" name="system_query" color="BED3F4" x="6320" y="1472" />
		<entity schema="public" name="system_request" color="BED3F4" x="6032" y="1920" />
		<entity schema="public" name="system_setting" color="D1BEF4" x="6032" y="2896" />
		<entity schema="public" name="system_setting_account" color="D1BEF4" x="6320" y="3312" />
		<entity schema="public" name="system_state" color="BED3F4" x="6032" y="1472" />
		<entity schema="public" name="system_table" color="BEBEF4" x="5136" y="2480" />
		<entity schema="public" name="system_thread" color="BEBEF4" x="5424" y="2480" />
		<entity schema="public" name="system_version" color="D1BEF4" x="6032" y="3312" />
		<entity schema="public" name="tenant" color="BED3F4" x="1328" y="2128" />
		<entity schema="public" name="tenant_account" color="F4DDBE" x="4576" y="4416" />
		<entity schema="public" name="tenant_category" color="F4DDBE" x="4272" y="4416" />
		<entity schema="public" name="tenant_country" color="F4DDBE" x="4272" y="4832" />
		<entity schema="public" name="tenant_license" color="F4DDBE" x="4288" y="3936" />
		<entity schema="public" name="tenant_payment" color="F4DDBE" x="4576" y="3440" />
		<entity schema="public" name="tenant_payment_type" color="F4DDBE" x="4880" y="3440" />
		<entity schema="public" name="tenant_role" color="F4DDBE" x="4576" y="4000" />
		<entity schema="public" name="tenant_status" color="F4DDBE" x="4864" y="4416" />
		<entity schema="public" name="tenant_type" color="F4DDBE" x="4864" y="4000" />
		<entity schema="public" name="time_approval" color="BED3F4" x="1328" y="1488" />
		<entity schema="public" name="time_entry" color="F4DDBE" x="4880" y="464" />
		<entity schema="public" name="time_entry_final" color="F4DDBE" x="5168" y="464" />
		<entity schema="public" name="time_entry_invoice" color="F4DDBE" x="4592" y="448" />
		<entity schema="public" name="time_rule" color="F4DDBE" x="4592" y="48" />
		<entity schema="public" name="time_rule_client" color="F4DDBE" x="4880" y="48" />
		<entity schema="public" name="time_submit" color="F4DDBE" x="4304" y="448" />
		<entity schema="public" name="time_submit_type" color="F4DDBE" x="4272" y="912" />
		<entity schema="public" name="v_definition_column_all_list" color="BED3F4" x="1616" y="1376" />
		<entity schema="public" name="v_definition_column_base_list" color="BEBEF4" x="6608" y="5920" />
		<entity schema="public" name="v_definition_column_custom_list" color="BEBEF4" x="6928" y="5920" />
		<entity schema="public" name="v_definition_column_rich_list" color="BEBEF4" x="6928" y="6496" />
		<entity schema="public" name="v_definition_dao_init" color="D1BEF4" x="5808" y="5920" />
		<entity schema="public" name="v_definition_dao_register" color="D1BEF4" x="6064" y="5920" />
		<entity schema="public" name="v_definition_foreign_key" color="BED3F4" x="4048" y="5728" />
		<entity schema="public" name="v_definition_foreign_key_existing" color="BED3F4" x="4336" y="5728" />
		<entity schema="public" name="v_definition_models" color="BEBEF4" x="6352" y="5728" />
		<entity schema="public" name="v_definition_models_register" color="BEBEF4" x="6608" y="5728" />
		<entity schema="public" name="v_definition_python_daos_list" color="BED3F4" x="5232" y="6928" />
		<entity schema="public" name="v_definition_python_daos_read" color="BED3F4" x="5504" y="6928" />
		<entity schema="public" name="v_definition_python_dtos_full" color="BED3F4" x="5504" y="7120" />
		<entity schema="public" name="v_definition_python_dtos_full_list" color="BED3F4" x="5216" y="7312" />
		<entity schema="public" name="v_definition_python_dtos_model_list" color="BED3F4" x="5776" y="7312" />
		<entity schema="public" name="v_definition_python_dtos_read" color="BED3F4" x="5504" y="7312" />
		<entity schema="public" name="v_definition_python_dtos_read_list" color="BED3F4" x="5776" y="7504" />
		<entity schema="public" name="v_definition_python_dtos_rich" color="BED3F4" x="4624" y="6688" />
		<entity schema="public" name="v_definition_python_dtos_rich_list" color="BED3F4" x="4896" y="6688" />
		<entity schema="public" name="v_definition_python_dtos_thin" color="BED3F4" x="5776" y="7120" />
		<entity schema="public" name="v_definition_python_dtos_write" color="C7F4BE" x="5808" y="5488" />
		<entity schema="public" name="v_definition_python_dtos_write_list" color="C7F4BE" x="6080" y="5488" />
		<entity schema="public" name="v_definition_python_services_list" color="BED3F4" x="4336" y="6496" />
		<entity schema="public" name="v_definition_python_services_object" color="BED3F4" x="4624" y="6496" />
		<entity schema="public" name="v_definition_service_list" color="D1BEF4" x="5552" y="5728" />
		<entity schema="public" name="v_definition_service_register" color="D1BEF4" x="5808" y="5728" />
		<entity schema="public" name="v_definition_system_table_generation_list" color="D1BEF4" x="5216" y="5728" />
		<entity schema="public" name="v_definition_table_all_list" color="C7F4BE" x="5216" y="4624" />
		<entity schema="public" name="v_definition_table_base_list" color="BED3F4" x="4032" y="5952" />
		<entity schema="public" name="v_definition_table_column_all" color="C7F4BE" x="5520" y="5168" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_column_base" color="BEBEF4" x="6608" y="7040" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_column_custom" color="BED3F4" x="4336" y="6176" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_column_rich" color="C7F4BE" x="5808" y="5168" >
			<column name="table_name" />
			<column name="table_full_name" />
			<column name="full_name" />
			<column name="dtos_class" />
			<column name="dtos_class_name" />
			<column name="dto_write_class" />
			<column name="dto_write_class_name" />
			<column name="dto_write_class_name_list" />
			<column name="dto_read_class_definition" />
			<column name="dto_read_class_name" />
			<column name="dto_read_class_name_list" />
		</entity>
		<entity schema="public" name="v_definition_table_custom_list" color="BEBEF4" x="6608" y="6496" />
		<entity schema="public" name="v_definition_table_rich_list" color="C7F4BE" x="5520" y="4624" />
		<entity schema="public" name="v_definition_thin_dto" color="D1BEF4" x="6064" y="6112" />
		<entity schema="public" name="v_definition_write_dto" color="D1BEF4" x="5808" y="6112" />
		<entity schema="public" name="v_models_register" color="BED3F4" x="1904" y="1952" />
		<entity schema="public" name="v_rich_account" color="BED3F4" x="2192" y="1920" >
			<column name="account_uid" />
			<column name="account_name" />
			<column name="tenant_uid" />
			<column name="account_type_uid" />
			<column name="account_title_uid" />
			<column name="account_division_uid" />
			<column name="account_group_uid" />
			<column name="auth_identity_uid" />
			<column name="account_email" />
			<column name="display_name" />
			<column name="is_system" />
		</entity>
		<entity schema="public" name="v_rich_account_division" color="BEBEF4" x="2832" y="5728" />
		<entity schema="public" name="v_rich_account_division_template" color="BEBEF4" x="3328" y="5728" />
		<entity schema="public" name="v_rich_account_group" color="F4DDBE" x="11952" y="13744" />
		<entity schema="public" name="v_rich_account_hierarchy" color="F4DDBE" x="12640" y="13840" >
			<column name="account_hierarchy_uid" />
			<column name="account_hierarchy_name" />
			<column name="tenant_uid" />
			<column name="parent_account_uid" />
			<column name="child_account_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_account_rate" color="F4DDBE" x="11648" y="12864" />
		<entity schema="public" name="v_rich_account_skill" color="F4DDBE" x="12640" y="14160" />
		<entity schema="public" name="v_rich_account_team" color="F4DDBE" x="12272" y="13328" />
		<entity schema="public" name="v_rich_account_title" color="F4DDBE" x="12640" y="13328" />
		<entity schema="public" name="v_rich_account_title_responsibility" color="F4DDBE" x="11984" y="12640" />
		<entity schema="public" name="v_rich_account_type" color="F4DDBE" x="11984" y="13328" />
		<entity schema="public" name="v_rich_audit_change" color="F4DDBE" x="9008" y="9744" />
		<entity schema="public" name="v_rich_audit_type" color="F4DDBE" x="9344" y="9744" />
		<entity schema="public" name="v_rich_auth_attempt" color="D1BEF4" x="7392" y="10192" />
		<entity schema="public" name="v_rich_auth_identity" color="D1BEF4" x="7440" y="9744" />
		<entity schema="public" name="v_rich_auth_identity_tenant" color="D1BEF4" x="7728" y="9744" >
			<column name="auth_identity_tenant_uid" />
			<column name="auth_identity_tenant_name" />
			<column name="tenant_uid" />
			<column name="auth_identity_uid" />
			<column name="auth_sso_uid" />
			<column name="identity_parameters_json" />
			<column name="last_status_name" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
		</entity>
		<entity schema="public" name="v_rich_auth_key" color="BEBEF4" x="6624" y="10768" />
		<entity schema="public" name="v_rich_auth_key_type" color="D1BEF4" x="8304" y="9776" />
		<entity schema="public" name="v_rich_auth_password" color="C7F4BE" x="10912" y="12640" />
		<entity schema="public" name="v_rich_auth_password_current" color="C7F4BE" x="11248" y="12640" />
		<entity schema="public" name="v_rich_auth_password_rule" color="C7F4BE" x="11248" y="13504" />
		<entity schema="public" name="v_rich_auth_permission" color="C7F4BE" x="10640" y="12640" >
			<column name="auth_permission_uid" />
			<column name="auth_permission_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="auth_role_uid" />
			<column name="client_uid" />
			<column name="project_instance_uid" />
			<column name="valid_from_date" />
			<column name="valid_till_date" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_auth_request" color="D1BEF4" x="7728" y="10192" >
			<column name="auth_request_uid" />
			<column name="auth_request_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="requestor_email" />
			<column name="reset_guid" />
			<column name="valid_till_date" />
			<column name="lock_guid" />
			<column name="lock_by" />
			<column name="lock_date" />
			<column name="is_checked" />
		</entity>
		<entity schema="public" name="v_rich_auth_role" color="D1BEF4" x="7984" y="10192" />
		<entity schema="public" name="v_rich_auth_role_uri" color="F4DDBE" x="8672" y="10384" />
		<entity schema="public" name="v_rich_auth_session" color="D1BEF4" x="7728" y="11024" />
		<entity schema="public" name="v_rich_auth_sso" color="BEBEF4" x="6992" y="10768" />
		<entity schema="public" name="v_rich_auth_token" color="D1BEF4" x="8304" y="10192" />
		<entity schema="public" name="v_rich_calendar_account" color="D1BEF4" x="1504" y="6544" >
			<column name="calendar_account_uid" />
			<column name="calendar_account_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="calendar_type_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_calendar_approval" color="D1BEF4" x="1792" y="6544" >
			<column name="calendar_approval_uid" />
			<column name="calendar_approval_name" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="calendar_approval_type_uid" />
			<column name="calendar_event_group_uid" />
			<column name="calendar_type_uid" />
			<column name="time_submit_type_name" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
		</entity>
		<entity schema="public" name="v_rich_calendar_approval_type" color="D1BEF4" x="2096" y="6544" />
		<entity schema="public" name="v_rich_calendar_event" color="D1BEF4" x="1792" y="6864" >
			<column name="calendar_event_uid" />
			<column name="calendar_event_name" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="calendar_event_group_uid" />
			<column name="calendar_type_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_calendar_event_group" color="D1BEF4" x="2496" y="7184" >
			<column name="calendar_event_group_uid" />
			<column name="calendar_event_group_name" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="calendar_account_uid" />
			<column name="calendar_event_type_uid" />
			<column name="group_comment" />
			<column name="event_start_date" />
			<column name="event_end_date" />
			<column name="is_approved" />
			<column name="row_instance" />
		</entity>
		<entity schema="public" name="v_rich_calendar_event_type" color="D1BEF4" x="2080" y="7184" />
		<entity schema="public" name="v_rich_calendar_type" color="D1BEF4" x="1792" y="7184" />
		<entity schema="public" name="v_rich_client" color="D1BEF4" x="2656" y="9808" >
			<column name="client_uid" />
			<column name="client_name" />
			<column name="tenant_uid" />
			<column name="country_uid" />
			<column name="client_type_uid" />
			<column name="client_category_uid" />
			<column name="account_uid" />
			<column name="client_code" />
			<column name="client_description" />
			<column name="start_date" />
			<column name="end_date" />
		</entity>
		<entity schema="public" name="v_rich_client_account" color="BED3F4" x="1792" y="8560" >
			<column name="client_account_uid" />
			<column name="client_account_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="client_role_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_client_country" color="BED3F4" x="2064" y="8880" >
			<column name="client_country_uid" />
			<column name="client_country_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="country_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_client_payment" color="BED3F4" x="1760" y="8880" >
			<column name="client_payment_uid" />
			<column name="client_payment_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="currency_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="payment_value" />
			<column name="payment_type" />
			<column name="source_number" />
		</entity>
		<entity schema="public" name="v_rich_client_role" color="D1BEF4" x="2912" y="10128" />
		<entity schema="public" name="v_rich_client_status" color="BED3F4" x="1504" y="8464" />
		<entity schema="public" name="v_rich_client_type" color="D1BEF4" x="3200" y="10128" />
		<entity schema="public" name="v_rich_connection_engine" color="BED3F4" x="1504" y="7936" />
		<entity schema="public" name="v_rich_connection_host" color="BED3F4" x="1792" y="7936" />
		<entity schema="public" name="v_rich_connection_user" color="BED3F4" x="2208" y="7936" />
		<entity schema="public" name="v_rich_country" color="BEBEF4" x="6336" y="10064" />
		<entity schema="public" name="v_rich_currency" color="BEBEF4" x="6624" y="10352" />
		<entity schema="public" name="v_rich_event_acknowledge" color="BEBEF4" x="4032" y="8880" />
		<entity schema="public" name="v_rich_event_channel" color="C7F4BE" x="5520" y="10960" />
		<entity schema="public" name="v_rich_event_channel_type" color="C7F4BE" x="5952" y="11824" />
		<entity schema="public" name="v_rich_event_instance" color="BEBEF4" x="4432" y="8880" />
		<entity schema="public" name="v_rich_event_notification" color="BEBEF4" x="4752" y="9616" />
		<entity schema="public" name="v_rich_event_observer" color="BEBEF4" x="4432" y="9616" />
		<entity schema="public" name="v_rich_event_subscription" color="BEBEF4" x="4048" y="7936" />
		<entity schema="public" name="v_rich_event_template" color="BEBEF4" x="5040" y="8880" />
		<entity schema="public" name="v_rich_event_type" color="BEBEF4" x="4752" y="8880" />
		<entity schema="public" name="v_rich_invoice_action" color="C7F4BE" x="3088" y="8256" >
			<column name="invoice_action_uid" />
			<column name="invoice_action_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="invoice_instance_uid" />
			<column name="invoice_action_type_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_invoice_action_type" color="C7F4BE" x="3376" y="8256" />
		<entity schema="public" name="v_rich_invoice_category" color="C7F4BE" x="2768" y="7952" />
		<entity schema="public" name="v_rich_invoice_entry" color="C7F4BE" x="3376" y="7936" >
			<column name="invoice_entry_uid" />
			<column name="invoice_entry_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_details" />
			<column name="entry_amount_net" />
			<column name="entry_amount_tax" />
			<column name="entry_amount_gross" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_invoice_flow" color="BEBEF4" x="3328" y="7456" />
		<entity schema="public" name="v_rich_invoice_flow_state" color="C7F4BE" x="3024" y="8576" />
		<entity schema="public" name="v_rich_invoice_instance" color="C7F4BE" x="3088" y="7936" >
			<column name="invoice_instance_uid" />
			<column name="invoice_instance_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="invoice_flow_uid" />
			<column name="invoice_status_uid" />
			<column name="invoice_category_uid" />
			<column name="invoice_type_uid" />
			<column name="period_uid" />
			<column name="currency_uid" />
			<column name="invoice_number" />
		</entity>
		<entity schema="public" name="v_rich_invoice_status" color="BEBEF4" x="3040" y="7040" />
		<entity schema="public" name="v_rich_invoice_type" color="C7F4BE" x="3712" y="7936" />
		<entity schema="public" name="v_rich_monitor" color="BEBEF4" x="6336" y="9744" >
			<column name="monitor_uid" />
			<column name="monitor_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="monitor_type_uid" />
			<column name="schedule_expression" />
			<column name="monitor_protocol" />
			<column name="monitor_url" />
			<column name="monitor_user" />
			<column name="monitor_priority" />
			<column name="is_on_hold" />
		</entity>
		<entity schema="public" name="v_rich_monitor_run" color="BEBEF4" x="6592" y="9744" >
			<column name="monitor_run_uid" />
			<column name="monitor_run_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="monitor_uid" />
			<column name="status_name" />
			<column name="run_time" />
			<column name="exception_message" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
		</entity>
		<entity schema="public" name="v_rich_monitor_type" color="BEBEF4" x="6864" y="9744" />
		<entity schema="public" name="v_rich_period" color="D1BEF4" x="2656" y="9264" />
		<entity schema="public" name="v_rich_process" color="D1BEF4" x="2944" y="9264" />
		<entity schema="public" name="v_rich_process_run" color="D1BEF4" x="3296" y="9264" />
		<entity schema="public" name="v_rich_process_type" color="D1BEF4" x="3632" y="9264" />
		<entity schema="public" name="v_rich_project_account" color="C7F4BE" x="5392" y="10544" >
			<column name="project_account_uid" />
			<column name="project_account_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="account_uid" />
			<column name="project_instance_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
		</entity>
		<entity schema="public" name="v_rich_project_budget" color="C7F4BE" x="5952" y="10544" >
			<column name="project_budget_uid" />
			<column name="project_budget_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="project_instance_uid" />
			<column name="currency_uid" />
			<column name="budget_value" />
			<column name="is_approved" />
			<column name="is_current" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_project_group" color="C7F4BE" x="5952" y="10960" />
		<entity schema="public" name="v_rich_project_instance" color="BEBEF4" x="3616" y="7360" >
			<column name="project_instance_uid" />
			<column name="project_instance_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="project_type_uid" />
			<column name="manager_account_uid" />
			<column name="project_group_uid" />
			<column name="project_code" />
			<column name="project_description" />
			<column name="is_billable" />
			<column name="start_date" />
		</entity>
		<entity schema="public" name="v_rich_project_milestone" color="BEBEF4" x="3328" y="7040" >
			<column name="project_milestone_uid" />
			<column name="project_milestone_name" />
			<column name="tenant_uid" />
			<column name="client_uid" />
			<column name="project_instance_uid" />
			<column name="project_budget_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="status_name" />
			<column name="row_instance" />
			<column name="row_lock" />
		</entity>
		<entity schema="public" name="v_rich_project_type" color="C7F4BE" x="5664" y="10544" />
		<entity schema="public" name="v_rich_report" color="BED3F4" x="6336" y="8336" />
		<entity schema="public" name="v_rich_report_content_type" color="BED3F4" x="6384" y="7936" />
		<entity schema="public" name="v_rich_report_format" color="BED3F4" x="6688" y="7936" />
		<entity schema="public" name="v_rich_report_run" color="BED3F4" x="6688" y="8336" >
			<column name="report_run_uid" />
			<column name="report_run_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="report_uid" />
			<column name="report_format_uid" />
			<column name="report_status_uid" />
			<column name="report_content_type_uid" />
			<column name="input_parameters_json" />
			<column name="run_time_ms" />
			<column name="returned_rows" />
		</entity>
		<entity schema="public" name="v_rich_report_status" color="BED3F4" x="6976" y="8336" />
		<entity schema="public" name="v_rich_report_type" color="BED3F4" x="6688" y="8656" />
		<entity schema="public" name="v_rich_storage" color="F4DDBE" x="9056" y="10384" />
		<entity schema="public" name="v_rich_storage_connection" color="F4DDBE" x="9632" y="10384" />
		<entity schema="public" name="v_rich_storage_query" color="F4DDBE" x="9200" y="10832" />
		<entity schema="public" name="v_rich_storage_type" color="F4DDBE" x="9344" y="10384" />
		<entity schema="public" name="v_rich_synchronization" color="C7F4BE" x="6304" y="12640" />
		<entity schema="public" name="v_rich_synchronization_run" color="C7F4BE" x="6752" y="12640" />
		<entity schema="public" name="v_rich_synchronization_type" color="C7F4BE" x="7168" y="12640" />
		<entity schema="public" name="v_rich_system_attribute" color="F4DDBE" x="7696" y="13232" />
		<entity schema="public" name="v_rich_system_database" color="BEBEF4" x="3328" y="6576" />
		<entity schema="public" name="v_rich_system_exception" color="C7F4BE" x="6752" y="13472" />
		<entity schema="public" name="v_rich_system_instance" color="BEBEF4" x="3616" y="6576" />
		<entity schema="public" name="v_rich_system_license" color="C7F4BE" x="7040" y="13472" />
		<entity schema="public" name="v_rich_system_lock" color="F4DDBE" x="7728" y="12640" />
		<entity schema="public" name="v_rich_system_module" color="F4DDBE" x="8096" y="12816" />
		<entity schema="public" name="v_rich_system_object" color="F4DDBE" x="9280" y="12656" />
		<entity schema="public" name="v_rich_system_object_type" color="F4DDBE" x="9280" y="13280" />
		<entity schema="public" name="v_rich_system_query" color="F4DDBE" x="8384" y="13232" />
		<entity schema="public" name="v_rich_system_request" color="C7F4BE" x="7328" y="13472" />
		<entity schema="public" name="v_rich_system_setting" color="C7F4BE" x="7040" y="13888" />
		<entity schema="public" name="v_rich_system_setting_account" color="C7F4BE" x="5520" y="11824" />
		<entity schema="public" name="v_rich_system_state" color="F4DDBE" x="8096" y="13232" />
		<entity schema="public" name="v_rich_system_table" color="F4DDBE" x="8672" y="13232" />
		<entity schema="public" name="v_rich_system_thread" color="F4DDBE" x="8960" y="13232" />
		<entity schema="public" name="v_rich_system_version" color="F4DDBE" x="8096" y="13680" />
		<entity schema="public" name="v_rich_tenant" color="BEBEF4" x="5392" y="7936" >
			<column name="tenant_uid" />
			<column name="tenant_name" />
			<column name="country_uid" />
			<column name="tenant_type_uid" />
			<column name="tenant_category_uid" />
			<column name="tenant_code" />
			<column name="tenant_description" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="is_internal" />
			<column name="is_system" />
		</entity>
		<entity schema="public" name="v_rich_tenant_account" color="C7F4BE" x="10912" y="13504" >
			<column name="tenant_account_uid" />
			<column name="tenant_account_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="tenant_role_uid" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_tenant_category" color="C7F4BE" x="10608" y="13408" />
		<entity schema="public" name="v_rich_tenant_country" color="C7F4BE" x="10336" y="13824" >
			<column name="tenant_country_uid" />
			<column name="tenant_country_name" />
			<column name="country_uid" />
			<column name="tenant_uid" />
			<column name="country_priority" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
			<column name="row_version" />
		</entity>
		<entity schema="public" name="v_rich_tenant_license" color="C7F4BE" x="10816" y="13824" />
		<entity schema="public" name="v_rich_tenant_payment" color="F4DDBE" x="9664" y="13280" >
			<column name="tenant_payment_uid" />
			<column name="tenant_payment_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="currency_uid" />
			<column name="tenant_payment_type_uid" />
			<column name="start_date" />
			<column name="end_date" />
			<column name="payment_value" />
			<column name="source_number" />
			<column name="source_reference" />
		</entity>
		<entity schema="public" name="v_rich_tenant_payment_type" color="F4DDBE" x="9968" y="13600" />
		<entity schema="public" name="v_rich_tenant_role" color="BEBEF4" x="5648" y="7936" />
		<entity schema="public" name="v_rich_tenant_status" color="BEBEF4" x="5936" y="7936" />
		<entity schema="public" name="v_rich_tenant_type" color="BEBEF4" x="5936" y="8352" />
		<entity schema="public" name="v_rich_time_approval" color="BEBEF4" x="5648" y="8352" >
			<column name="time_approval_uid" />
			<column name="time_approval_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="time_entry_uid" />
			<column name="approval_comment" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_time_entry" color="F4DDBE" x="9696" y="12960" >
			<column name="time_entry_uid" />
			<column name="time_entry_name" />
			<column name="time_submit_uid" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="project_instance_uid" />
			<column name="project_milestone_uid" />
			<column name="period_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_period" />
			<column name="entry_note" />
		</entity>
		<entity schema="public" name="v_rich_time_entry_final" color="F4DDBE" x="9968" y="13280" >
			<column name="time_entry_final_uid" />
			<column name="time_entry_final_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="project_instance_uid" />
			<column name="project_milestone_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_period" />
			<column name="entry_note" />
			<column name="lock_uid" />
			<column name="start_date" />
		</entity>
		<entity schema="public" name="v_rich_time_entry_invoice" color="BED3F4" x="6976" y="8016" >
			<column name="time_entry_invoice_uid" />
			<column name="time_entry_invoice_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="time_submit_uid" />
			<column name="time_entry_uid" />
			<column name="project_instance_uid" />
			<column name="project_milestone_uid" />
			<column name="period_uid" />
			<column name="invoice_instance_uid" />
			<column name="entry_period" />
		</entity>
		<entity schema="public" name="v_rich_time_rule" color="BEBEF4" x="5648" y="8672" />
		<entity schema="public" name="v_rich_time_rule_client" color="BEBEF4" x="5936" y="9072" />
		<entity schema="public" name="v_rich_time_submit" color="F4DDBE" x="9696" y="12640" >
			<column name="time_submit_uid" />
			<column name="time_submit_name" />
			<column name="tenant_uid" />
			<column name="account_uid" />
			<column name="period_uid" />
			<column name="time_submit_description" />
			<column name="row_instance" />
			<column name="row_lock" />
			<column name="row_owner" />
			<column name="row_seq" />
			<column name="row_guid" />
		</entity>
		<entity schema="public" name="v_rich_time_submit_type" color="F4DDBE" x="9984" y="12640" />
		<script name="SQL Editor" id="Editor-14d8" language="SQL" >
			<string><![CDATA[SELECT
	account_uid, account_name, tenant_uid, account_type_uid, account_title_uid, account_division_uid, account_group_uid, 
	auth_identity_uid, account_email, display_name, is_system, row_instance, row_lock, row_owner, row_seq, row_guid, row_version, 
	is_active, created_date, created_by, last_updated_date, last_updated_by, removed_date, removed_by, custom_attributes
FROM
	"public".account t;]]></string>
		</script>
		<browser id="Browse-696" name="Relational Data Explorer" confirm_updates="y" >
			<browse_table schema="public" entity="account" x="-2147483648" y="-2147483648" width="-2147483648" height="-2147483648" />
		</browser>
		<form name="Report" id="Report-249b" template="Page" css="container-fluid" view="frame" >
			<var name="samplePageNumber" type="4" value="0" mandatory="n" />
			<var name="sampleRecordsPerPage" type="4" value="100" mandatory="n" />
			<body name="Body" template="Grid" max_records="100" pos="0,0,0,0,f,f" layout="{{-2,-2,-2,-2,-1},{-2,-2,-2,-2}}" generate_path="y" scroll="n" html="n" header_rows="0" footer_rows="0" >
				<cell type="label" name="Account Data" template="H3" pos="0,0,1,0,l,c" />
				<cell type="chart" name="Pie" template="Pie" pos="0,1,4,1,l,c" max_records="20" generate_path="y" >
					<form_script type="DataSource" language="SQL" >
						<var name="account_uid" />
						<var name="account_name" />
						<var name="tenant_uid" />
						<var name="account_type_uid" />
						<var name="account_title_uid" />
						<var name="account_division_uid" />
						<var name="account_group_uid" />
						<var name="auth_identity_uid" />
						<var name="account_email" />
						<var name="display_name" />
						<var name="is_system" type="-5" />
						<var name="row_instance" />
						<var name="row_lock" />
						<var name="row_owner" />
						<var name="row_seq" type="-5" />
						<var name="row_guid" />
						<var name="row_version" type="-5" />
						<var name="is_active" type="-5" />
						<var name="created_date" type="93" />
						<var name="created_by" />
						<var name="last_updated_date" type="93" />
						<var name="last_updated_by" />
						<var name="removed_date" type="93" />
						<var name="removed_by" />
						<var name="custom_attributes" />
						<script ><![CDATA[SELECT * FROM "public".account]]></script>
					</form_script>
					<param name="item" value="custom_attributes" />
					<param name="width" value="100%" />
					<param name="title" value="Sample Chart" />
					<param name="value" value="is_active" />
					<param name="height" value="400px" />
				</cell>
				<tableview name="sample" template="Table" max_records="100" css="sortable table table-striped table-sm table-hover" pos="0,2,4,2,f,f" layout="{{-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2},{-2,-2}}" generate_path="y" scroll="n" html="n" header_rows="1" footer_rows="0" >
					<form_script type="DataSource" language="SQL" >
						<var name="account_uid" />
						<var name="account_name" />
						<var name="tenant_uid" />
						<var name="account_type_uid" />
						<var name="account_title_uid" />
						<var name="account_division_uid" />
						<var name="account_group_uid" />
						<var name="auth_identity_uid" />
						<var name="account_email" />
						<var name="display_name" />
						<var name="is_system" type="-5" />
						<var name="row_instance" />
						<var name="row_lock" />
						<var name="row_owner" />
						<var name="row_seq" type="-5" />
						<var name="row_guid" />
						<var name="row_version" type="-5" />
						<var name="is_active" type="-5" />
						<var name="created_date" type="93" />
						<var name="created_by" />
						<var name="last_updated_date" type="93" />
						<var name="last_updated_by" />
						<var name="removed_date" type="93" />
						<var name="removed_by" />
						<var name="custom_attributes" />
						<script ><![CDATA[SELECT * FROM "public".account]]></script>
					</form_script>
					<cell type="label" name="account_uid" pos="0,0,0,0,c,c" />
					<cell type="label" name="account_name" pos="1,0,1,0,c,c" />
					<cell type="label" name="tenant_uid" pos="2,0,2,0,c,c" />
					<cell type="label" name="account_type_uid" pos="3,0,3,0,c,c" />
					<cell type="label" name="account_title_uid" pos="4,0,4,0,c,c" />
					<cell type="label" name="account_division_uid" pos="5,0,5,0,c,c" />
					<cell type="label" name="account_group_uid" pos="6,0,6,0,c,c" />
					<cell type="label" name="auth_identity_uid" pos="7,0,7,0,c,c" />
					<cell type="label" name="account_email" pos="8,0,8,0,c,c" />
					<cell type="label" name="display_name" pos="9,0,9,0,c,c" />
					<cell type="label" name="is_system" pos="10,0,10,0,c,c" />
					<cell type="label" name="row_instance" pos="11,0,11,0,c,c" />
					<cell type="label" name="row_lock" pos="12,0,12,0,c,c" />
					<cell type="label" name="row_owner" pos="13,0,13,0,c,c" />
					<cell type="label" name="row_seq" pos="14,0,14,0,c,c" />
					<cell type="label" name="${account_uid}" template="Plain" pos="0,1,0,1,l,c" />
					<cell type="label" name="${account_name}" template="Plain" pos="1,1,1,1,l,c" />
					<cell type="label" name="${tenant_uid}" template="Plain" pos="2,1,2,1,l,c" />
					<cell type="label" name="${account_type_uid}" template="Plain" pos="3,1,3,1,l,c" />
					<cell type="label" name="${account_title_uid}" template="Plain" pos="4,1,4,1,l,c" />
					<cell type="label" name="${account_division_uid}" template="Plain" pos="5,1,5,1,l,c" />
					<cell type="label" name="${account_group_uid}" template="Plain" pos="6,1,6,1,l,c" />
					<cell type="label" name="${auth_identity_uid}" template="Plain" pos="7,1,7,1,l,c" />
					<cell type="label" name="${account_email}" template="Plain" pos="8,1,8,1,l,c" />
					<cell type="label" name="${display_name}" template="Plain" pos="9,1,9,1,l,c" />
					<cell type="label" name="${is_system}" template="Plain" pos="10,1,10,1,l,c" />
					<cell type="label" name="${row_instance}" template="Plain" pos="11,1,11,1,l,c" />
					<cell type="label" name="${row_lock}" template="Plain" pos="12,1,12,1,l,c" />
					<cell type="label" name="${row_owner}" template="Plain" pos="13,1,13,1,l,c" />
					<cell type="label" name="${row_seq}" template="Plain" pos="14,1,14,1,l,c" />
					<cell type="button" name="More" template="Plain" css="btn btn-sm btn-secondary" pos="15,1,15,1,c,c" ref_id="Report-249b" />
				</tableview>
				<cell type="href" name="" disabled="${samplePageNumber&lt;1}" pos="0,3,0,3,l,c" glyph="bi-chevron_double_left" ref_id="Report-249b" >
					<var name="samplePageNumber" value="0" />
				</cell>
				<cell type="href" name="" disabled="${samplePageNumber&lt;1}" pos="1,3,1,3,l,c" glyph="bi-chevron_left" ref_id="Report-249b" >
					<var name="samplePageNumber" value="${Math.max(0,samplePageNumber-1)}" />
				</cell>
				<cell type="label" name="Page ${samplePageNumber+1}" pos="2,3,2,3,l,c" />
				<cell type="href" name="" disabled="${!sampleHasNextPage}" pos="3,3,3,3,l,c" glyph="bi-chevron_right" ref_id="Report-249b" >
					<var name="samplePageNumber" value="${( samplePageNumber+1 )}" />
				</cell>
			</body>
		</form>
	</layout>
</project>