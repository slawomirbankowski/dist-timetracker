name: timetracker

services:
  proxy:
    image: "nginx:1.26"
    networks:
      - timetracker
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8000:80
    depends_on:
      app:
        condition: service_healthy
  app:
    image: "timetracker:0.0.1"
    environment:
      - JDBC_HOST=${DB_HOST}
      - JDBC_NAME=${DB_NAME}
      - JDBC_URL=jdbc:postgresql://${DB_HOST}:5432/${DB_NAME}
      - JDBC_USER_FILE=/run/secrets/db_server_user
      - JDBC_PASS_FILE=/run/secrets/db_server_pass
      - JDBC_DRIVER=${JDBC_DRIVER}
    networks:
      - timetracker
    secrets:
      - db_server_user
      - db_server_pass
    healthcheck:
      test: ["CMD", "curl", "localhost:8000", "localhost:8000/api/v1/service/ping"]
      start_period: 3s
      interval: 10s
      retries: 10
    depends_on:
      db:
        condition: service_started
  # App DB
  db:
    image: "postgres:16.3"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - PGUSER=postgres
      - POSTGRES_USER_FILE=/run/secrets/db_server_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_server_pass
    ports:
      - 127.0.0.1:5433:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - timetracker
    secrets:
      - db_server_user
      - db_server_pass
    healthcheck:
      test: ["CMD", "pg_isready", "-U" , "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-q"]
      interval: 2s
      retries: 10
networks:
  timetracker:
    driver: bridge

volumes:
  db_data:

secrets:
  db_server_pass:
    file: "pg-server-pass.secret"
  db_server_user:
    file: "pg-server-user.secret"